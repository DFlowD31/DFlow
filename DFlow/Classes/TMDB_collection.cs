// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using DFlow.Classes;
//
//    var tmdbCollection = TmdbCollection.FromJson(jsonString);

namespace DFlow.Classes
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class TMDB_collection
    {
        [JsonProperty("page", NullValueHandling = NullValueHandling.Ignore)]
        public long? Page { get; set; }

        [JsonProperty("results", NullValueHandling = NullValueHandling.Ignore)]
        public List<Result> Results { get; set; }

        [JsonProperty("total_pages", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalPages { get; set; }

        [JsonProperty("total_results", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalResults { get; set; }

        public partial class Result
        {
            [JsonProperty("adult", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Adult { get; set; }

            [JsonProperty("backdrop_path", NullValueHandling = NullValueHandling.Ignore)]
            public string BackdropPath { get; set; }

            [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
            public long? Id { get; set; }

            [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
            public string Name { get; set; }

            [JsonProperty("original_language", NullValueHandling = NullValueHandling.Ignore)]
            public string OriginalLanguage { get; set; }

            [JsonProperty("original_name", NullValueHandling = NullValueHandling.Ignore)]
            public string OriginalName { get; set; }

            [JsonProperty("overview", NullValueHandling = NullValueHandling.Ignore)]
            public string Overview { get; set; }

            [JsonProperty("poster_path", NullValueHandling = NullValueHandling.Ignore)]
            public string PosterPath { get; set; }
        }

    }

    public partial class TMDB_collection
    {
        public static TMDB_collection FromJson(string json) => JsonConvert.DeserializeObject<TMDB_collection>(json, DFlow.Classes.Converter.Settings);
    }
}
