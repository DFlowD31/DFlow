<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Trakt.NET</name>
    </assembly>
    <members>
        <member name="T:TraktNet.Core.TraktConfiguration">
            <summary>Provides global client settings.</summary>
        </member>
        <member name="P:TraktNet.Core.TraktConfiguration.ApiVersion">
            <summary>
            Gets or sets the Trakt API version.
            <para>
            See <a href="http://docs.trakt.apiary.io/#introduction/required-headers">"Trakt API Doc - Required Headers"</a> for more information.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Core.TraktConfiguration.UseSandboxEnvironment">
            <summary>
            Gets or sets, whether the Trakt API staging environment should be used. This is disabled by default.
            <para>
            See <a href="http://docs.trakt.apiary.io/#introduction/api-url">"Trakt API Doc - API URL"</a> for more information.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Core.TraktConfiguration.BaseUrl">
            <summary>Returns the Trakt API base URL based on, whether <see cref="P:TraktNet.Core.TraktConfiguration.UseSandboxEnvironment" /> is false or true.</summary>
        </member>
        <member name="P:TraktNet.Core.TraktConfiguration.ForceAuthorization">
            <summary>Gets or sets, whether authorization should be enforced, even if it is optional. This is disabled by default.</summary>
        </member>
        <member name="P:TraktNet.Core.TraktConfiguration.ThrowResponseExceptions">
            <summary>Gets or sets, whether responses should throw exceptions on failure.</summary>
        </member>
        <member name="T:TraktNet.Enums.TraktAccessScope">
            <summary>Determines the access authorization for different resources.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktAccessScope.Unspecified">
            <summary>An invalid access scope.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktAccessScope.Public">
            <summary>A resource can be accessed by all.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktAccessScope.Private">
            <summary>A resource can only be accessed by the user.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktAccessScope.Friends">
            <summary>A resource can only be accessed by friends of an user.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktAccessScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktAccessScope" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktAccessScope" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktAccessTokenGrantType">
            <summary>Determines the grant type to specify how an access tokenshould be retrieved during authentication.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktAccessTokenGrantType.Unspecified">
            <summary>An invalid access token grant type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktAccessTokenGrantType.AuthorizationCode">
            <summary>The grant type to specify the retrieving of an access token with an user code.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktAccessTokenGrantType.RefreshToken">
            <summary>The grant type to specify the retrieving of an access token with a refresh token.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktAccessTokenGrantType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktAccessTokenGrantType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktAccessTokenGrantType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktAccessTokenType">
            <summary>Determines the type of an access token.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktAccessTokenType.Unspecified">
            <summary>An invalid access token type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktAccessTokenType.Bearer">
            <summary>The access token type for Bearer tokens.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktAccessTokenType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktAccessTokenType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktAccessTokenType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktCommentSortOrder">
            <summary>Determines the sort order for comments lists.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktCommentSortOrder.Unspecified">
            <summary>An invalid sort order.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktCommentSortOrder.Newest">
            <summary>Comments will be sorted by newest comments first.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktCommentSortOrder.Oldest">
            <summary>Comments will be sorted by oldest comments first.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktCommentSortOrder.Likes">
            <summary>Comments will be sorted by the number of likes first.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktCommentSortOrder.Replies">
            <summary>Comments will be sorted by the number of replies first.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktCommentSortOrder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktCommentSortOrder" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktCommentSortOrder" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktCommentType">
            <summary>Determines the comment type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktCommentType.Unspecified">
            <summary>An invalid comment type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktCommentType.Review">
            <summary>The comment type for reviews.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktCommentType.Shout">
            <summary>The comment type for shouts.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktCommentType.All">
            <summary>The comment type for both reviews and shouts.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktCommentType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktCommentType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktCommentType" /> is invalid.
            </summary>
        </member>
        <member name="P:TraktNet.Enums.TraktDateFormat.Unspecified">
            <summary>An invalid date format.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktDateFormat.MonthDayYear">
            <summary>The date format for Month Day Year.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktDateFormat.DayMonthYear">
            <summary>The date format for Day Month Year.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktDateFormat.YearMonthDay">
            <summary>The date format for Year Month Day.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktDateFormat.YearDayMonth">
            <summary>The date format for Year Day Month.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktDateFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktDateFormat" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktDateFormat" /> is invalid.
            </summary>
        </member>
        <member name="P:TraktNet.Enums.TraktEnumeration.Value">
            <summary>Returns the numeric value of the enumeration.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktEnumeration.ObjectName">
            <summary>Returns the enumeration name for object properties.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktEnumeration.UriName">
            <summary>Returns the enumeration name for URI path parameters.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktEnumeration.DisplayName">
            <summary>
            Returns the human readable name of the enumeration.
            See also <seealso cref="M:TraktNet.Enums.TraktEnumeration.ToString" />.
            </summary>
        </member>
        <member name="M:TraktNet.Enums.TraktEnumeration.ToString">
            <summary>
            Returns the human readable name of the enumeration.
            See also <seealso cref="P:TraktNet.Enums.TraktEnumeration.DisplayName" />.
            </summary>
        </member>
        <member name="M:TraktNet.Enums.TraktEnumeration.CompareTo(TraktNet.Enums.TraktEnumeration)">
            <summary>
            Compares the <see cref="P:TraktNet.Enums.TraktEnumeration.Value" /> of this enumeration with the value of
            another enumeration.
            </summary>
            <param name="other">The other enumeration to compare with.</param>
            <returns>An indication of their relative values.</returns>
        </member>
        <member name="M:TraktNet.Enums.TraktEnumeration.Equals(TraktNet.Enums.TraktEnumeration)">
            <summary>Returns, whether this enumeration instance is equal to another enumeration instance.</summary>
            <param name="other">The other enumeration instance to compare with.</param>
            <returns>True, if both enumeration instances are equal, otherwise false.</returns>
        </member>
        <member name="M:TraktNet.Enums.TraktEnumeration.GetHashCode">
            <summary>Returns the hash code of this enumeration.</summary>
            <returns>An hash code of this enumeration.</returns>
        </member>
        <member name="M:TraktNet.Enums.TraktEnumeration.GetAll``1">
            <summary>Returns a list of all enumerations of an enumeration of type T.</summary>
            <typeparam name="T">The enumeration, of which a list of all enumerations should be returned.</typeparam>
            <returns>A list of all enumerations of an enumeration of type T.</returns>
        </member>
        <member name="M:TraktNet.Enums.TraktEnumeration.AbsoluteDifference(TraktNet.Enums.TraktEnumeration,TraktNet.Enums.TraktEnumeration)">
            <summary>Calculates the absolute difference of the <see cref="P:TraktNet.Enums.TraktEnumeration.Value" /> for two enumerations.</summary>
            <param name="first">The first enumeration.</param>
            <param name="second">The second enumeration.</param>
            <returns>The absolute difference of the <see cref="P:TraktNet.Enums.TraktEnumeration.Value" /> for two enumerations.</returns>
        </member>
        <member name="M:TraktNet.Enums.TraktEnumeration.FromValue``1(System.Int32)">
            <summary>Creates an enumeration of type T from the given value.</summary>
            <typeparam name="T">The type of the enumeration, which should be created.</typeparam>
            <param name="value">The value from which the enumeration should be created.</param>
            <returns>
            An enumeration of type T or null, if the value could not be found
            in the available values for the enumeration.
            </returns>
        </member>
        <member name="M:TraktNet.Enums.TraktEnumeration.FromObjectName``1(System.String)">
            <summary>Creates an enumeration of type T from the given object name.</summary>
            <typeparam name="T">The type of the enumeration, which should be created.</typeparam>
            <param name="objectName">The object name from which the enumeration should be created.</param>
            <returns>
            An enumeration of type T or null, if the value could not be found
            in the available values for the enumeration.
            </returns>
        </member>
        <member name="M:TraktNet.Enums.TraktEnumeration.FromUriName``1(System.String)">
            <summary>Creates an enumeration of type T from the given URI name.</summary>
            <typeparam name="T">The type of the enumeration, which should be created.</typeparam>
            <param name="uriName">The URI name from which the enumeration should be created.</param>
            <returns>
            An enumeration of type T or null, if the value could not be found
            in the available values for the enumeration.
            </returns>
        </member>
        <member name="M:TraktNet.Enums.TraktEnumeration.FromDisplayName``1(System.String)">
            <summary>Creates an enumeration of type T from the given display name.</summary>
            <typeparam name="T">The type of the enumeration, which should be created.</typeparam>
            <param name="displayName">The display name from which the enumeration should be created.</param>
            <returns>
            An enumeration of type T or null, if the value could not be found
            in the available values for the enumeration.
            </returns>
        </member>
        <member name="T:TraktNet.Enums.TraktGenreType">
            <summary>Determines the genre type of movie and show genres.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktGenreType.Unspecified">
            <summary>An invalid genre type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktGenreType.Shows">
            <summary>The genre type for shows.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktGenreType.Movies">
            <summary>The genre type for movies.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktGenreType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktGenreType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktGenreType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktHiddenItemsSection">
            <summary>Determines the section, from which hidden items should be requested.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHiddenItemsSection.Unspecified">
            <summary>An invalid section.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHiddenItemsSection.Calendar">
            <summary>The section for calendars.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHiddenItemsSection.ProgressWatched">
            <summary>The section for watched progress.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHiddenItemsSection.ProgressCollected">
            <summary>The section for collected progress.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHiddenItemsSection.Recommendations">
            <summary>The section for recommendations.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHiddenItemsSection.ProgressWatchedReset">
            <summary>The section for watched reset progress.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktHiddenItemsSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktHiddenItemsSection" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktHiddenItemsSection" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktHiddenItemType">
            <summary>Determines the type of an object in an hidden item.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHiddenItemType.Unspecified">
            <summary>An invalid object type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHiddenItemType.Movie">
            <summary>The hidden item contains a movie.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHiddenItemType.Show">
            <summary>The listhidden item contains a show.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHiddenItemType.Season">
            <summary>The hidden item contains a season.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktHiddenItemType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktHiddenItemType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktHiddenItemType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktHistoryActionType">
            <summary>Determines the action type of an history item.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHistoryActionType.Unspecified">
            <summary>An invalid action type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHistoryActionType.Scrobble">
            <summary>The history item is / was scrobbled.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHistoryActionType.Checkin">
            <summary>The history item is / was checked in.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktHistoryActionType.Watch">
            <summary>The history item is / was watched.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktHistoryActionType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktHistoryActionType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktHistoryActionType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktLastActivity">
            <summary>Determines the last activity type of a collection or watched progress.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktLastActivity.Unspecified">
            <summary>An invalid last activity type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktLastActivity.Collected">
            <summary>Use last collected episodes while calculating collection or watched progress.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktLastActivity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktLastActivity" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktLastActivity" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktListItemType">
            <summary>Determines the type of an object in a list item.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListItemType.Unspecified">
            <summary>An invalid object type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListItemType.Movie">
            <summary>The list item contains a movie.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListItemType.Show">
            <summary>The list item contains a show.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListItemType.Season">
            <summary>The list item contains a season.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListItemType.Episode">
            <summary>The list item contains an episode.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListItemType.Person">
            <summary>The list item contains a person.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktListItemType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktListItemType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktListItemType" /> is invalid.
            </summary>
        </member>
        <member name="M:TraktNet.Enums.TraktListItemType.op_BitwiseOr(TraktNet.Enums.TraktListItemType,TraktNet.Enums.TraktListItemType)">
            <summary>
            Combines two <see cref="T:TraktNet.Enums.TraktListItemType" /> enumerations to one enumeration.
            <para>
            Usage: TraktListItemType.Movie | TraktListItemType.Show
            </para>
            </summary>
            <param name="first">The first enumeration.</param>
            <param name="second">The second enumeration.</param>
            <returns>
            A binary combination of both given enumerations or null,
            if at least on of the given enumerations is null or unspecified.
            </returns>
        </member>
        <member name="T:TraktNet.Enums.TraktListSortOrder">
            <summary>Determines the sort order for lists of <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListSortOrder.Unspecified">
            <summary>An invalid sort order.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListSortOrder.Popular">
            <summary>Lists will be sorted by the most popular first.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListSortOrder.Likes">
            <summary>Lists will be sorted by the number of likes first.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListSortOrder.Comments">
            <summary>Lists will be sorted by the number of comments first.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListSortOrder.Items">
            <summary>Lists will be sorted by the number of items first.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListSortOrder.Added">
            <summary>Lists will be sorted by <see cref="P:TraktNet.Objects.Get.Users.Lists.ITraktList.CreatedAt" /> first.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListSortOrder.Updated">
            <summary>Lists will be sorted by <see cref="P:TraktNet.Objects.Get.Users.Lists.ITraktList.UpdatedAt" /> first.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktListSortOrder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktListSortOrder" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktListSortOrder" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktListType">
            <summary>Determines the list type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListType.Unspecified">
            <summary>An invalid list type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListType.Personal">
            <summary>The list type for personal lists.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListType.Official">
            <summary>The list type for official lists.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListType.Watchlist">
            <summary>The list type for watchlists.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktListType.All">
            <summary>The list type for personal, official lists and watchlists together.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktListType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktListType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktListType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktMediaAudio">
            <summary>Determines the audio type in a collection item's metadata.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.Unspecified">
            <summary>An invalid audio type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.LPCM">
            <summary>The collection item has LPCM audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.MP3">
            <summary>The collection item has MP3 audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.AAC">
            <summary>The collection item has AAC audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.OGG">
            <summary>The collection item has OGG audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.WMA">
            <summary>The collection item has WMA audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.DTS">
            <summary>The collection item has DTS audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.DTS_MA">
            <summary>The collection item has DTS Master Audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.DTS_X">
            <summary>The collection item has DTS X Audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.DolbyPrologic">
            <summary>The collection item has Dolby Prologic audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.DolbyDigital">
            <summary>The collection item has Dolby Digital audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.DolbyDigitalPlus">
            <summary>The collection item has Dolby Digital Plus audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.DolbyTrueHD">
            <summary>The collection item has Dolby True HD audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.DolbyAtmos">
            <summary>The collection item has Dolby Atmos audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.DTS_HR">
            <summary>The collection item has DTS HR audio.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudio.AURO_3D">
            <summary>The collection item has AURO 3D audio.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktMediaAudio.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktMediaAudio" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktMediaAudio" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktMediaAudioChannel">
            <summary>Determines the audio channel type in a collection item's metadata.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Unspecified">
            <summary>An invalid audio channel type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_1_0">
            <summary>The collection item has 1.0 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_2_0">
            <summary>The collection item has 2.0 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_2_1">
            <summary>The collection item has 2.1 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_3_0">
            <summary>The collection item has 3.0 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_3_1">
            <summary>The collection item has 3.1 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_4_0">
            <summary>The collection item has 4.0 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_4_1">
            <summary>The collection item has 4.1 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_5_0">
            <summary>The collection item has 5.0 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_5_1">
            <summary>The collection item has 5.1 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_6_1">
            <summary>The collection item has 6.1 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_7_1">
            <summary>The collection item has 7.1 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_5_1_2">
            <summary>The collection item has 5.1.2 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_5_1_4">
            <summary>The collection item has 5.1.4 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_7_1_2">
            <summary>The collection item has 7.1.2 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_7_1_4">
            <summary>The collection item has 7.1.4 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_9_1">
            <summary>The collection item has 9.1 audio channels.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaAudioChannel.Channels_10_1">
            <summary>The collection item has 10.1 audio channels.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktMediaAudioChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktMediaAudioChannel" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktMediaAudioChannel" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktMediaHDR">
            <summary>Determines the HDR type in a collection item's metadata.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaHDR.Unspecified">
            <summary>An invalid HDR type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaHDR.DolbyVision">
            <summary>The collection item supports DolbyVision.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaHDR.HDR_10">
            <summary>The collection item supports HDR10.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaHDR.HDR_10_Plus">
            <summary>The collection item supports HDR10 Plus.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaHDR.HLG">
            <summary>The collection item supports HLG.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktMediaHDR.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktMediaHDR" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktMediaHDR" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktMediaResolution">
            <summary>Determines the video resolution type in a collection item's metadata.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaResolution.Unspecified">
            <summary>An invalid video resolution type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaResolution.UHD_4k">
            <summary>The collection item has UHD 4k video resolution.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaResolution.HD_1080p">
            <summary>The collection item has HD 1080p video resolution.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaResolution.HD_1080i">
            <summary>The collection item has HD 1080i video resolution.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaResolution.HD_720p">
            <summary>The collection item has HD 720p video resolution.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaResolution.SD_480p">
            <summary>The collection item has SD 480p video resolution.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaResolution.SD_480i">
            <summary>The collection item has SD 480i video resolution.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaResolution.SD_576p">
            <summary>The collection item has SD 576p video resolution.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaResolution.SD_576i">
            <summary>The collection item has SD 576i video resolution.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktMediaResolution.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktMediaResolution" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktMediaResolution" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktMediaType">
            <summary>Determines the media type in a collection item's metadata.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaType.Unspecified">
            <summary>An invalid media type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaType.Digital">
            <summary>The collection item has Digital media.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaType.Bluray">
            <summary>The collection item has Bluray media.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaType.HD_DVD">
            <summary>The collection item has HD DVD media.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaType.DVD">
            <summary>The collection item has DVD media.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaType.VCD">
            <summary>The collection item has VCD media.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaType.VHS">
            <summary>The collection item has VHS media.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaType.BetaMax">
            <summary>The collection item has Betamax media.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMediaType.LaserDisc">
            <summary>The collection item has Laserdisc media.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktMediaType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktMediaType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktMediaType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktMovieStatus">
            <summary>Determines the status of a movie.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMovieStatus.Unspecified">
            <summary>An invalid status.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMovieStatus.Released">
            <summary>The status for a movie, which is released.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMovieStatus.InProduction">
            <summary>The status for a movie, which is in production.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMovieStatus.PostProduction">
            <summary>The status for a movie, which is in post production.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMovieStatus.Planned">
            <summary>The status for a movie, which is planned.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMovieStatus.Rumored">
            <summary>The status for a movie, which is rumored.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktMovieStatus.Canceled">
            <summary>The status for a movie, which is canceled.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktMovieStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktMovieStatus" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktMovieStatus" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktObjectType">
            <summary>Determines the type of an object in a comment.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktObjectType.Unspecified">
            <summary>An invalid object type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktObjectType.Movie">
            <summary>The comment contains a movie.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktObjectType.Show">
            <summary>The comment contains a show.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktObjectType.Season">
            <summary>The comment contains a season.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktObjectType.Episode">
            <summary>The comment contains an episode.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktObjectType.List">
            <summary>The comment contains a list.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktObjectType.All">
            <summary>The comment contains a movie, show, season, list or an episode.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktObjectType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktObjectType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktObjectType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktRatingsItemType">
            <summary>Determines the type of an object in a rating item.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktRatingsItemType.Unspecified">
            <summary>An invalid object type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktRatingsItemType.Movie">
            <summary>The rating item contains a movie.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktRatingsItemType.Show">
            <summary>The ratingv item contains a show.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktRatingsItemType.Season">
            <summary>The rating item contains a season.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktRatingsItemType.Episode">
            <summary>The rating item contains an episode.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktRatingsItemType.All">
            <summary>The rating item contains a movie, show, season or an episode.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktRatingsItemType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktRatingsItemType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktRatingsItemType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktRecommendationObjectType">
            <summary>Determines the type of an object in a recommendation.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktRecommendationObjectType.Unspecified">
            <summary>An invalid object type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktRecommendationObjectType.Movie">
            <summary>The recommendation contains a movie.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktRecommendationObjectType.Show">
            <summary>The recommendation contains a show.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktRecommendationObjectType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktRecommendationObjectType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktRecommendationObjectType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktReleaseType">
            <summary>Determines, how a movie was released.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktReleaseType.Unspecified">
            <summary>An invalid release type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktReleaseType.Unknown">
            <summary>An unknown release type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktReleaseType.Premiere">
            <summary>The release was a premiere.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktReleaseType.Limited">
            <summary>The release was limited.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktReleaseType.Theatrical">
            <summary>The release was theatrical.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktReleaseType.Digital">
            <summary>The release was digital.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktReleaseType.Physical">
            <summary>The release was physical.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktReleaseType.TV">
            <summary>The release was in TV.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktReleaseType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktReleaseType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktReleaseType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktScrobbleActionType">
            <summary>Determines the action type for a scroblle post.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktScrobbleActionType.Unspecified">
            <summary>An invalid action type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktScrobbleActionType.Start">
            <summary>The scrobble started.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktScrobbleActionType.Pause">
            <summary>The scrobble paused.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktScrobbleActionType.Stop">
            <summary>The scrobble stopped.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktScrobbleActionType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktScrobbleActionType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktScrobbleActionType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktSearchField">
            <summary>Determines the field hint in a search query.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchField.Unspecified">
            <summary>An invalid field hint.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchField.Title">
            <summary>The hint to search in movie, show or episode titles.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchField.Tagline">
            <summary>The hint to search in movie taglines.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchField.Overview">
            <summary>The hint to search in movie, show or episode overviews.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchField.People">
            <summary>The hint to search in movie or show people.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchField.Translations">
            <summary>The hint to search in movie or show translations.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchField.Aliases">
            <summary>The hint to search in movie or show aliases.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchField.Name">
            <summary>The hint to search in person or list names.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchField.Biography">
            <summary>The hint to search in person biographies.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchField.Description">
            <summary>The hint to search in list descriptions.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktSearchField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktSearchField" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktSearchField" /> is invalid.
            </summary>
        </member>
        <member name="M:TraktNet.Enums.TraktSearchField.op_BitwiseOr(TraktNet.Enums.TraktSearchField,TraktNet.Enums.TraktSearchField)">
            <summary>
            Combines two <see cref="T:TraktNet.Enums.TraktSearchField" /> enumerations to one enumeration.
            <para>
            Usage: TraktSearchField.Title | TraktSearchField.Tagline
            </para>
            </summary>
            <param name="first">The first enumeration.</param>
            <param name="second">The second enumeration.</param>
            <returns>
            A binary combination of both given enumerations or null,
            if at least on of the given enumerations is null or unspecified.
            </returns>
        </member>
        <member name="T:TraktNet.Enums.TraktSearchIdType">
            <summary>Determines the id type, for which should be searched in an id lookup request.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchIdType.Unspecified">
            <summary>An invalid id type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchIdType.Trakt">
            <summary>Search for Trakt ids.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchIdType.ImDB">
            <summary>Search for ImDB ids.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchIdType.TmDB">
            <summary>Search for TmDB ids.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchIdType.TvDB">
            <summary>Search for TvDB ids.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchIdType.TVRage">
            <summary>Search for TVRage ids.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktSearchIdType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktSearchIdType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktSearchIdType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktSearchResultType">
            <summary>Determines the type of an object in a search result.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchResultType.Unspecified">
            <summary>An invalid object type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchResultType.Movie">
            <summary>The search result contains a movie.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchResultType.Show">
            <summary>The search result contains a show.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchResultType.Episode">
            <summary>The search result contains an episode.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchResultType.Person">
            <summary>The search result contains a person.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSearchResultType.List">
            <summary>The search result contains a list.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktSearchResultType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktSearchResultType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktSearchResultType" /> is invalid.
            </summary>
        </member>
        <member name="M:TraktNet.Enums.TraktSearchResultType.op_BitwiseOr(TraktNet.Enums.TraktSearchResultType,TraktNet.Enums.TraktSearchResultType)">
            <summary>
            Combines two <see cref="T:TraktNet.Enums.TraktSearchResultType" /> enumerations to one enumeration.
            <para>
            Usage: TraktSearchResultType.Movie | TraktSearchResultType.Show
            </para>
            </summary>
            <param name="first">The first enumeration.</param>
            <param name="second">The second enumeration.</param>
            <returns>
            A binary combination of both given enumerations or null,
            if at least on of the given enumerations is null or unspecified.
            </returns>
        </member>
        <member name="T:TraktNet.Enums.TraktShowStatus">
            <summary>Determines the status of a show.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktShowStatus.Unspecified">
            <summary>An invalid status.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktShowStatus.ReturningSeries">
            <summary>The status for a show, which continues.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktShowStatus.InProduction">
            <summary>The status for a show, which is in production.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktShowStatus.Canceled">
            <summary>The status for a show, which was canceled.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktShowStatus.Ended">
            <summary>The status for a show, which has ended.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktShowStatus.Upcoming">
            <summary>The status for a show, which is upcoming.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktShowStatus.Planned">
            <summary>The status for a show, which is planned.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktShowStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktShowStatus" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktShowStatus" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktSyncItemType">
            <summary>Determines the type of an object in an history item or in a watchlist item, .</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSyncItemType.Unspecified">
            <summary>An invalid object type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSyncItemType.Movie">
            <summary>The history or watchlist item contains a movie.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSyncItemType.Show">
            <summary>The history or watchlist item contains a show.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSyncItemType.Season">
            <summary>The history or watchlist item contains a season.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSyncItemType.Episode">
            <summary>The history or watchlist item contains an episode.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktSyncItemType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktSyncItemType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktSyncItemType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktSyncType">
            <summary>Determines the type of an object in a playback progress item.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSyncType.Unspecified">
            <summary>An invalid object type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSyncType.Movie">
            <summary>The playback progress item contains a movie.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktSyncType.Episode">
            <summary>The playback progress item contains an episode.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktSyncType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktSyncType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktSyncType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktTimePeriod">
            <summary>Determines the time period for most played, most watched and most collected movie and show requests.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktTimePeriod.Unspecified">
            <summary>An invalid time period.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktTimePeriod.Weekly">
            <summary>A weekly time period.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktTimePeriod.Monthly">
            <summary>A monthly time period.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktTimePeriod.Yearly">
            <summary>An yearly time period.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktTimePeriod.All">
            <summary>An overall time period.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktTimePeriod.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktTimePeriod" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktTimePeriod" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktUserLikeType">
            <summary>Determines the type of an object in an user like item.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktUserLikeType.Unspecified">
            <summary>An invalid object type.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktUserLikeType.Comment">
            <summary>The user like item contains a comment.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktUserLikeType.List">
            <summary>The user like item contains a list.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktUserLikeType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktUserLikeType" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktUserLikeType" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Enums.TraktWatchlistSortOrder">
            <summary>Determines the sort order for watchlists.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktWatchlistSortOrder.Unspecified">
            <summary>An invalid sort order.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktWatchlistSortOrder.Rank">
            <summary>Watchlists will be sorted by rank.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktWatchlistSortOrder.Added">
            <summary>Watchlists will be sorted by recently added items first.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktWatchlistSortOrder.Released">
            <summary>Watchlists will be sorted by recently released items first.</summary>
        </member>
        <member name="P:TraktNet.Enums.TraktWatchlistSortOrder.Title">
            <summary>Watchlists will be sorted by title.</summary>
        </member>
        <member name="M:TraktNet.Enums.TraktWatchlistSortOrder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Enums.TraktListSortOrder" /> class.<para />
            The initialized <see cref="T:TraktNet.Enums.TraktWatchlistSortOrder" /> is invalid.
            </summary>
        </member>
        <member name="T:TraktNet.Exceptions.TraktAuthenticationDeviceException">
            <summary>Exception, that will be thrown, if there is an error during Device authentication.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktAuthenticationDeviceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktAuthenticationDeviceException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktAuthenticationException">
            <summary>Exception, that will be thrown, if there is an error during authentication.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktAuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktAuthenticationException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktAuthenticationOAuthException">
            <summary>Exception, that will be thrown, if there is an error during OAuth authentication.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktAuthenticationOAuthException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktAuthenticationOAuthException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktAuthorizationException">
            <summary>Exception, that will be thrown, if an access token is required, but was not provided.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktAuthorizationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktAuthorizationException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktAuthorizationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktAuthorizationException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktBadGatewayException">
            <summary>Exception, that will be thrown, if there is a bad response at an intermediate proxy server.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktBadGatewayException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktBadGatewayException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktBadGatewayException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktBadGatewayException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktBadRequestException">
            <summary>Exception, that will be thrown, if there is an unknown error for the request.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktBadRequestException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktBadRequestException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktBadRequestException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktBadRequestException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktCheckinException">
            <summary>Exception, that will be thrown, if a checkin is already in progress.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktCheckinException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktCheckinException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="P:TraktNet.Exceptions.TraktCheckinException.ExpiresAt">
            <summary>Gets or sets the UTC datetime, when the current checkin expires and a new checkin can be requested.</summary>
        </member>
        <member name="T:TraktNet.Exceptions.TraktCommentNotFoundException">
            <summary>
            Exception, that will be thrown, if a comment was not found.<para /> 
            Contains, additional to the basic information, the comment id of the comment, which was not found.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktCommentNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktCommentNotFoundException" /> class with a default exception message.
            </summary>
            <param name="commentId">The comment id of the comment, which was not found.</param>
        </member>
        <member name="M:TraktNet.Exceptions.TraktCommentNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktCommentNotFoundException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
            <param name="commentId">The comment id of the comment, which was not found.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktConflictException">
            <summary>
            Exception, that will be thrown, if there is a conflict on server.
            For example, if a resource, like comment, already exists.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktConflictException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktConflictException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktConflictException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktConflictException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktDeniedException">
            <summary>Exception, that will be thrown, if the user denied the OAuth authentication.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktDeniedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktDeniedException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktDeniedException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktEpisodeNotFoundException">
            <summary>
            Exception, that will be thrown, if an episode was not found.<para /> 
            Contains, additional to the basic information, the show id, the season number
            and the episode number of the episode, which was not found.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktEpisodeNotFoundException.#ctor(System.String,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktEpisodeNotFoundException" /> class with a default exception message.
            </summary>
            <param name="showId">The Trakt-Id or -Slug of the episode's show.</param>
            <param name="season">The season number of the episode.</param>
            <param name="episode">The episode number of the episode, which was not found.</param>
        </member>
        <member name="M:TraktNet.Exceptions.TraktEpisodeNotFoundException.#ctor(System.String,System.String,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktEpisodeNotFoundException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
            <param name="showId">The Trakt-Id or -Slug of the episode's show.</param>
            <param name="season">The season number of the episode.</param>
            <param name="episode">The episode number of the episode, which was not found.</param>
        </member>
        <member name="P:TraktNet.Exceptions.TraktEpisodeNotFoundException.Episode">
            <summary>Gets or sets the episode number of the episode, which was not found.</summary>
        </member>
        <member name="T:TraktNet.Exceptions.TraktException">
            <summary>
            Base class for all TraktApiSharp exceptions.<para />
            Can contain additional information like the response's status code, the request's url, a reason phrase of the server,
            the request body, if it was a post or put request and the actual response content.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="M:TraktNet.Exceptions.TraktException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
            <param name="innerException">An exception that is the cause of the current exception.</param>
        </member>
        <member name="P:TraktNet.Exceptions.TraktException.StatusCode">
            <summary>Returns the response's status code.</summary>
        </member>
        <member name="P:TraktNet.Exceptions.TraktException.RequestUrl">
            <summary>Gets or sets the request's url.</summary>
        </member>
        <member name="P:TraktNet.Exceptions.TraktException.RequestBody">
            <summary>Gets or sets the request body.</summary>
        </member>
        <member name="P:TraktNet.Exceptions.TraktException.Response">
            <summary>Gets or sets the response content.</summary>
        </member>
        <member name="P:TraktNet.Exceptions.TraktException.ServerReasonPhrase">
            <summary>Gets or sets the server reason phrase.</summary>
        </member>
        <member name="T:TraktNet.Exceptions.TraktExpiredException">
            <summary>Exception, that will be thrown, if the tokens have expired during authentication.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktExpiredException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktExpiredException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktExpiredException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktExpiredException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktForbiddenException">
            <summary>Exception, that will be thrown, if the request is forbidden.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktForbiddenException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktForbiddenException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktForbiddenException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktForbiddenException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktListNotFoundException">
            <summary>
            Exception, that will be thrown, if a list was not found.<para /> 
            Contains, additional to the basic information, the list id of the list, which was not found.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktListNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktListNotFoundException" /> class with a default exception message.
            </summary>
            <param name="listId">The list id of the list, which was not found.</param>
        </member>
        <member name="M:TraktNet.Exceptions.TraktListNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktListNotFoundException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
            <param name="listId">The list id of the list, which was not found.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktMethodNotFoundException">
            <summary>Exception, that will be thrown, if a method is not allowed or not existing.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktMethodNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktMethodNotFoundException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktMethodNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktMethodNotFoundException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktMovieNotFoundException">
            <summary>
            Exception, that will be thrown, if a movie was not found.<para /> 
            Contains, additional to the basic information, the movie id of the movie, which was not found.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktMovieNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktMovieNotFoundException" /> class with a default exception message.
            </summary>
            <param name="movieId">The Trakt-Id or -Slug of the movie, which was not found.</param>
        </member>
        <member name="M:TraktNet.Exceptions.TraktMovieNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktMovieNotFoundException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
            <param name="movieId">The Trakt-Id or -Slug of the movie, which was not found.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktNotFoundException">
            <summary>Exception, that will be thrown, if no result(s) was(were) found for a request.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktNotFoundException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktObjectNotFoundException">
            <summary>
            Exception, that will be thrown, if an object was not found.<para />
            Base class for all object based <see cref="T:TraktNet.Exceptions.TraktNotFoundException" />s. In this case, objects are comments, episodes, lists, movies, persons, seasons and shows.<para /> 
            Contains, additional to the basic information, the object id of the object, which was not found.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktObjectNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktObjectNotFoundException" /> class with a default exception message.
            </summary>
            <param name="objectId">The id of the object, which was not found.</param>
        </member>
        <member name="M:TraktNet.Exceptions.TraktObjectNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktObjectNotFoundException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
            <param name="objectId">The id of the object, which was not found.</param>
        </member>
        <member name="P:TraktNet.Exceptions.TraktObjectNotFoundException.ObjectId">
            <summary>Gets or sets the object id of the object, which was not found.</summary>
        </member>
        <member name="T:TraktNet.Exceptions.TraktPersonNotFoundException">
            <summary>
            Exception, that will be thrown, if a person was not found.<para />
            Contains, additional to the basic information, the person id of the person, which was not found.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktPersonNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktPersonNotFoundException" /> class with a default exception message.
            </summary>
            <param name="personId">The Trakt-Id or -Slug of the person, which was not found.</param>
        </member>
        <member name="M:TraktNet.Exceptions.TraktPersonNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktPersonNotFoundException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
            <param name="personId">The Trakt-Id or -Slug of the person, which was not found.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktPreconditionFailedException">
            <summary>Exception, that will be thrown, if the request parameters are not valid.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktPreconditionFailedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktPreconditionFailedException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktPreconditionFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktPreconditionFailedException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktRateLimitException">
            <summary>Exception, that will be thrown, if there are too many requests during a specific time period.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktRateLimitException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktRateLimitException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktRateLimitException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktRateLimitException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktSeasonNotFoundException">
            <summary>
            Exception, that will be thrown, if a season was not found.<para />
            Contains, additional to the basic information, the show id, and the season number
            of the season, which was not found.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktSeasonNotFoundException.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktSeasonNotFoundException" /> class with a default exception message.
            </summary>
            <param name="showId">The Trakt-Id or -Slug of the season's show.</param>
            <param name="season">The season number of the season, which was not found.</param>
        </member>
        <member name="M:TraktNet.Exceptions.TraktSeasonNotFoundException.#ctor(System.String,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktSeasonNotFoundException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
            <param name="showId">The Trakt-Id or -Slug of the season's show.</param>
            <param name="season">The season number of the season, which was not found.</param>
        </member>
        <member name="P:TraktNet.Exceptions.TraktSeasonNotFoundException.Season">
            <summary>Gets or sets the season number of the season, which was not found.</summary>
        </member>
        <member name="T:TraktNet.Exceptions.TraktServerException">
            <summary>Exception, that will be thrown, if there is an error on the server side.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktServerException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktServerException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktServerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktServerException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktServerUnavailableException">
            <summary>Exception, that will be thrown, if the server is unavailable.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktServerUnavailableException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktServerUnavailableException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktServerUnavailableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktServerUnavailableException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktShowNotFoundException">
            <summary>
            Exception, that will be thrown, if a show was not found.<para />
            Contains, additional to the basic information, the show id of the show, which was not found.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktShowNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktShowNotFoundException" /> class with a default exception message.
            </summary>
            <param name="showId">The Trakt-Id or -Slug of the show, which was not found.</param>
        </member>
        <member name="M:TraktNet.Exceptions.TraktShowNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktShowNotFoundException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
            <param name="showId">The Trakt-Id or -Slug of the show, which was not found.</param>
        </member>
        <member name="T:TraktNet.Exceptions.TraktValidationException">
            <summary>Exception, that will be thrown, if sent data is not valid.</summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktValidationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktValidationException" /> class with a default exception message.
            </summary>
        </member>
        <member name="M:TraktNet.Exceptions.TraktValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Exceptions.TraktValidationException" /> class with a custom message.
            </summary>
            <param name="message">A custom exception message.</param>
        </member>
        <member name="T:TraktNet.Extensions.DateTimeExtensions">
            <summary>Provides helper methods for datetimes.</summary>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.Min(System.DateTime,System.Nullable{System.DateTime})">
            <summary>Returns the minimum datetime of the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The minimum datetime of the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.Min(System.Nullable{System.DateTime},System.DateTime)">
            <summary>Returns the minimum datetime of the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The minimum datetime of the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.Min(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Returns the minimum datetime of the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The minimum datetime of the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.Min(System.DateTime,System.DateTime)">
            <summary>Returns the minimum datetime of the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The minimum datetime of the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.Max(System.DateTime,System.Nullable{System.DateTime})">
            <summary>Returns the maximum datetime of the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The minimummaximum datetime of the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.Max(System.Nullable{System.DateTime},System.DateTime)">
            <summary>Returns the maximum datetime of the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The minimummaximum datetime of the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.Max(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Returns the maximum datetime of the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The minimummaximum datetime of the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.Max(System.DateTime,System.DateTime)">
            <summary>Returns the maximum datetime of the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The minimummaximum datetime of the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.YearsBetween(System.DateTime,System.Nullable{System.DateTime})">
            <summary>Returns the number of years between the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The number of years between the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.YearsBetween(System.Nullable{System.DateTime},System.DateTime)">
            <summary>Returns the number of years between the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The number of years between the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.YearsBetween(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Returns the number of years between the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The number of years between the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.YearsBetween(System.DateTime,System.DateTime)">
            <summary>Returns the number of years between the two given datetimes.</summary>
            <param name="value">The first datetime, which will be compared to the second datetime.</param>
            <param name="otherDate">The second datetime, which will be compared to the first datetime.</param>
            <returns>The number of years between the two given datetimes.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.ToTraktDateString(System.DateTime)">
            <summary>Converts the given datetime to a string, containing only the date in the Trakt date format.</summary>
            <param name="value">The datetime, which should be converted. Will be automatically converted to universal (UTC) datetime.</param>
            <returns>A string, containing only the date in the Trakt date format.</returns>
        </member>
        <member name="M:TraktNet.Extensions.DateTimeExtensions.ToTraktLongDateTimeString(System.DateTime)">
            <summary>Converts the given datetime to a string, containing the datetime in the Trakt datetime format.</summary>
            <param name="value">The datetime, which should be converted. Will be automatically converted to universal (UTC) datetime.</param>
            <returns>A string, containing the datetime in the Trakt datetime format.</returns>
        </member>
        <member name="T:TraktNet.Extensions.StringExtensions">
            <summary>Provides helper methods for strings.</summary>
        </member>
        <member name="M:TraktNet.Extensions.StringExtensions.FirstToUpper(System.String)">
            <summary>Converts the given string to a string, in which only the first letter is capitalized.</summary>
            <param name="value">The string, in which only the first letter should be capitalized.</param>
            <returns>A string, in which only the first letter is capitalized.</returns>
            <exception cref="T:System.ArgumentException">Thrown, if the given string is null or empty.</exception>
        </member>
        <member name="M:TraktNet.Extensions.StringExtensions.WordCount(System.String)">
            <summary>Counts the words in a string.</summary>
            <param name="value">The string, for which the words should be counted.</param>
            <returns>The number of words in the given string or zero, if the given string is null or empty.</returns>
        </member>
        <member name="M:TraktNet.Extensions.StringExtensions.ContainsSpace(System.String)">
            <summary>Returns, whether the given string contains any spaces.</summary>
            <param name="value">The string, which should be checked.</param>
            <returns>True, if the given string contains any spaces, otherwise false.</returns>
        </member>
        <member name="T:TraktNet.Modules.TraktAuthenticationModule">
            <summary>
            Provides access to OAuth and device authentication and authorization.
            <para>
            This module contains all methods of the <a href ="https://trakt.docs.apiary.io/#reference/authentication-oauth">"Trakt API Doc - Authentication - OAuth"</a> section
            and the <a href="https://trakt.docs.apiary.io/#reference/authentication-devices">"Trakt API Doc - Authentication - Devices"</a> section.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Modules.TraktAuthenticationModule.OAuthAuthorizationCode">
            <summary>Gets or sets the OAuth authorization code.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktAuthenticationModule.Authorization">
            <summary>
            Gets or sets the <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> information.
            <para>
            Will also be set by <see cref="M:TraktNet.Modules.TraktAuthenticationModule.GetAuthorizationAsync(System.Threading.CancellationToken)" />,
            <see cref="M:TraktNet.Modules.TraktAuthenticationModule.GetAuthorizationAsync(System.String,System.Threading.CancellationToken)"/>, <see cref="M:TraktNet.Modules.TraktAuthenticationModule.GetAuthorizationAsync(System.String,System.String,System.Threading.CancellationToken)" />,
            <see cref="M:TraktNet.Modules.TraktAuthenticationModule.GetAuthorizationAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />,
            <see cref="M:TraktNet.Modules.TraktAuthenticationModule.GetAuthorizationAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Modules.TraktAuthenticationModule.Device">
            <summary>
            Gets or sets the <see cref="T:TraktNet.Objects.Authentication.ITraktDevice" /> for Device authentication.
            <para>
            Will also be set by <see cref="M:TraktNet.Modules.TraktAuthenticationModule.GenerateDeviceAsync(System.Threading.CancellationToken)" /> and
            <see cref="M:TraktNet.Modules.TraktAuthenticationModule.GenerateDeviceAsync(System.String,System.Threading.CancellationToken)" />.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Modules.TraktAuthenticationModule.AntiForgeryToken">
            <summary>Gets a GUID, which can be used for OAuth authentication requests.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktAuthenticationModule.ClientId">
            <summary>Gets or sets the Trakt Client Id.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret">
            <summary>Gets or sets the Trakt Client Secret.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri">
            <summary>Gets or sets the Trakt redirect URI for OAuth authentication.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktAuthenticationModule.IsAuthorized">
            <summary>Returns whether the client is authorized with a valid access token.</summary>
            <seealso cref="P:TraktNet.Objects.Authentication.ITraktAuthorization.IsExpired" />
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.CheckIfAuthorizationIsExpiredOrWasRevokedAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls <see cref="M:TraktNet.Modules.TraktSyncModule.GetLastActivitiesAsync(System.Threading.CancellationToken)" /> to check,
            whether the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" /> is not expired yet and was not revoked by the user.
            </summary>
            <param name="autoRefresh">
            Indicates, whether the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" /> should be refreshed, if it was revoked.
            If this is set to true, <see cref="M:TraktNet.Modules.TraktAuthenticationModule.RefreshAuthorizationAsync(System.Threading.CancellationToken)" /> will be called.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            Returns an <see cref="T:TraktNet.Utils.Pair`2" /> instance with <see cref="P:TraktNet.Utils.Pair`2.First" /> set to true,
            if the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" /> is expired or was revoked, otherwise set to false.
            If <paramref name="autoRefresh" /> is set to true, the returned <see cref="P:TraktNet.Utils.Pair`2.Second" /> contains the new
            <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> information, otherwise the returned <see cref="P:TraktNet.Utils.Pair`2.Second" /> will be null.
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request <see cref="M:TraktNet.Modules.TraktAuthenticationModule.RefreshAuthorizationAsync(System.Threading.CancellationToken)" /> fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.CheckIfAuthorizationIsExpiredOrWasRevokedAsync(TraktNet.Objects.Authentication.ITraktAuthorization,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls <see cref="M:TraktNet.Modules.TraktSyncModule.GetLastActivitiesAsync(System.Threading.CancellationToken)" /> to check,
            whether the given <paramref name="authorization"/> is not expired yet and was not revoked by the user.
            </summary>
            <param name="authorization">The authorization information, which will be checked.</param>
            <param name="autoRefresh">
            Indicates, whether the given <paramref name="authorization"/> should be refreshed, if it was revoked.
            If this is set to true, <see cref="M:TraktNet.Modules.TraktAuthenticationModule.RefreshAuthorizationAsync(System.Threading.CancellationToken)" /> will be called.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            Returns an <see cref="T:TraktNet.Utils.Pair`2" /> instance with <see cref="P:TraktNet.Utils.Pair`2.First" /> set to true,
            if the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" /> is expired or was revoked, otherwise set to false.
            If <paramref name="autoRefresh" /> is set to true, the returned <see cref="P:TraktNet.Utils.Pair`2.Second" /> contains the new
            <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> information, otherwise the returned <see cref="P:TraktNet.Utils.Pair`2.Second" /> will be null.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given <paramref name="authorization" /> is null.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request <see cref="M:TraktNet.Modules.TraktAuthenticationModule.RefreshAuthorizationAsync(System.Threading.CancellationToken)" /> fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.CheckIfAccessTokenWasRevokedOrIsNotValidAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Calls <see cref="M:TraktNet.Modules.TraktSyncModule.GetLastActivitiesAsync(System.Threading.CancellationToken)" /> to check,
            whether the given access token is still valid and was not revoked by the user.
            </summary>
            <param name="accessToken">The access token, which will be checked.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>True, if the given access token was revoked and / or is not valid anymore, otherwise false.</returns>
            <exception cref="T:System.ArgumentException">Thrown, if the given access token is null, empty or contains spaces.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request <see cref="M:TraktNet.Modules.TraktSyncModule.GetLastActivitiesAsync(System.Threading.CancellationToken)" /> fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.CreateAuthorizationUrl">
            <summary>
            Creates a new OAuth authorization URL. Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientId" /> and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" /> to build the authorization URL.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/authorize-application">"Trakt API Doc - OAuth: Authorize"</a> for more information.
            </para>
            </summary>
            <returns>Returns the created authorization URL.</returns>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.CreateAuthorizationUrl(System.String)">
            <summary>
            Creates a new OAuth authorization URL. Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" /> to build the authorization URL.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/authorize-application">"Trakt API Doc - OAuth: Authorize"</a> for more information.
            </para>
            </summary>
            <param name="clientId">The Trakt Client ID, which will be used to build the authorization URL.</param>
            <returns>Returns the created authorization URL.</returns>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.CreateAuthorizationUrl(System.String,System.String)">
            <summary>
            Creates a new OAuth authorization URL.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/authorize-application">"Trakt API Doc - OAuth: Authorize"</a> for more information.
            </para>
            </summary>
            <param name="clientId">The Trakt Client ID, which will be used to build the authorization URL.</param>
            <param name="redirectUri">The redirect URI, which will be used to build the authorization URL.</param>
            <returns>Returns the created authorization URL.</returns>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.CreateAuthorizationUrl(System.String,System.String,System.String)">
            <summary>
            Creates a new OAuth authorization URL.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/authorize-application">"Trakt API Doc - OAuth: Authorize"</a> for more information.
            </para>
            </summary>
            <param name="clientId">The Trakt Client ID, which will be used to build the authorization URL.</param>
            <param name="redirectUri">The redirect URI, which will be used to build the authorization URL.</param>
            <param name="state">
            The state variable, which will be used to build the authorization URL. See also <see cref="P:TraktNet.Modules.TraktAuthenticationModule.AntiForgeryToken" />.
            This parameter is optional and will not be used, if it's null or empty.
            </param>
            <returns>Returns the created authorization URL.</returns>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.CreateAuthorizationUrlWithDefaultState">
            <summary>
            Creates a new OAuth authorization URL. Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientId" />, <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" />
            and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.AntiForgeryToken" /> as state variable to build the authorization URL.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/authorize-application">"Trakt API Doc - OAuth: Authorize"</a> for more information.
            </para>
            </summary>
            <returns>Returns the created authorization URL.</returns>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.CreateAuthorizationUrlWithDefaultState(System.String)">
            <summary>
            Creates a new OAuth authorization URL. Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" />
            and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.AntiForgeryToken" /> as state variable to build the authorization URL.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/authorize-application">"Trakt API Doc - OAuth: Authorize"</a> for more information.
            </para>
            </summary>
            <param name="clientId">The Trakt Client ID, which will be used to build the authorization URL.</param>
            <returns>Returns the created authorization URL.</returns>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.CreateAuthorizationUrlWithDefaultState(System.String,System.String)">
            <summary>
            Creates a new OAuth authorization URL. Uses the <see cref="P:TraktNet.Modules.TraktAuthenticationModule.AntiForgeryToken" /> as state variable to build the authorization URL.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/authorize-application">"Trakt API Doc - OAuth: Authorize"</a> for more information.
            </para>
            </summary>
            <param name="clientId">The Trakt Client ID, which will be used to build the authorization URL.</param>
            <param name="redirectUri">The redirect URI, which will be used to build the authorization URL.</param>
            <returns>Returns the created authorization URL.</returns>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.GetAuthorizationAsync(System.Threading.CancellationToken)">
            <summary>
            Exchanges the OAuth authorization code from the user for a new access token. Uses the current
            <see cref="P:TraktNet.Modules.TraktAuthenticationModule.OAuthAuthorizationCode" /> for the request, which has to be set before a call to this method.
            Also uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientId" />, <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationOAuthException">Thrown, if the OAuth authorization code is invalid.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the current OAuth authorization code is null, empty or contains spaces.
            Thrown, if the current client id is null, empty or contains spaces.
            Thronw, if the current client secret is null, empty or contains spaces.
            Thrown, if the current redirect URI is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.GetAuthorizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Exchanges the OAuth authorization code from the user for a new access token. Uses the current
            <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientId" />, <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            </summary>
            <param name="code">The OAuth authorization code, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationOAuthException">Thrown, if the OAuth authorization code is invalid.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given OAuth authorization code is null, empty or contains spaces.
            Thrown, if the current client id is null, empty or contains spaces.
            Thronw, if the current client secret is null, empty or contains spaces.
            Thrown, if the current redirect URI is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.GetAuthorizationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Exchanges the OAuth authorization code from the user for a new access token. Uses the current
            <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            </summary>
            <param name="code">The OAuth authorization code, which will be used for the request.</param>
            <param name="clientId">The Trakt Client ID, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationOAuthException">Thrown, if the OAuth authorization code is invalid.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given OAuth authorization code is null, empty or contains spaces.
            Thrown, if the given client id is null, empty or contains spaces.
            Thronw, if the current client secret is null, empty or contains spaces.
            Thrown, if the current redirect URI is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.GetAuthorizationAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Exchanges the OAuth authorization code from the user for a new access token. Uses the current
            <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            </summary>
            <param name="code">The OAuth authorization code, which will be used for the request.</param>
            <param name="clientId">The Trakt Client ID, which will be used for the request.</param>
            <param name="clientSecret">The Trakt Client Secret, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationOAuthException">Thrown, if the OAuth authorization code is invalid.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given OAuth authorization code is null, empty or contains spaces.
            Thrown, if the given client id is null, empty or contains spaces.
            Thronw, if the given client secret is null, empty or contains spaces.
            Thrown, if the current redirect URI is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.GetAuthorizationAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Exchanges the OAuth authorization code from the user for a new access token.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            </summary>
            <param name="code">The OAuth authorization code, which will be used for the request.</param>
            <param name="clientId">The Trakt Client ID, which will be used for the request.</param>
            <param name="clientSecret">The Trakt Client Secret, which will be used for the request.</param>
            <param name="redirectUri">The redirect URI, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationOAuthException">Thrown, if the OAuth authorization code is invalid.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given OAuth authorization code is null, empty or contains spaces.
            Thrown, if the given client id is null, empty or contains spaces.
            Thronw, if the given client secret is null, empty or contains spaces.
            Thrown, if the given redirect URI is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.GenerateDeviceAsync(System.Threading.CancellationToken)">
            <summary>
            Generates a new Trakt device and starts the device authentication process. Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientId" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktDevice" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Device" />, if successful.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-devices/device-code/generate-new-device-codes">"Trakt API Doc - Devices: Device Code"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktDevice" /> instance, which contains a new device code, user code and a verification URL.</returns>
            <exception cref="T:System.ArgumentException">Thrown, if the current client id is null, empty or contains spaces.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.GenerateDeviceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Generates a new Trakt device and starts the device authentication process.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktDevice" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Device" />, if successful.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-devices/device-code/generate-new-device-codes">"Trakt API Doc - Devices: Device Code"</a> for more information.
            </para>
            </summary>
            <param name="clientId">The Trakt Client ID, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktDevice" /> instance, which contains a new device code, user code and a verification URL.</returns>
            <exception cref="T:System.ArgumentException">Thrown, if the given client id is null, empty or contains spaces.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.PollForAuthorizationAsync(System.Threading.CancellationToken)">
            <summary>
            Polls for a new access token. Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Device" />, <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientId" /> and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-devices/get-token/poll-for-the-access_token">"Trakt API Doc - Devices: Get Token"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationDeviceException">
            Thrown, if the current device has an invalid device code.
            Thrown, if the user code of the current device was already approved by the user.
            Thrown, if the current device code is already expired unused.
            Thrown, if the user explicitly denied the user code of the current device.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the current device is null, or already expired unused or invalid or its user code contains spaces.
            Thrown, if the current client id is null, empty or contains spaces.
            Thrown, if the current client secret is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.PollForAuthorizationAsync(TraktNet.Objects.Authentication.ITraktDevice,System.Threading.CancellationToken)">
            <summary>
            Polls for a new access token. Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientId" /> and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-devices/get-token/poll-for-the-access_token">"Trakt API Doc - Devices: Get Token"</a> for more information.
            </para>
            </summary>
            <param name="device">The <see cref="T:TraktNet.Objects.Authentication.ITraktDevice" />, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationDeviceException">
            Thrown, if the given device has an invalid device code.
            Thrown, if the user code of the given device was already approved by the user.
            Thrown, if the given device code is already expired unused.
            Thrown, if the user explicitly denied the user code of the given device.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given device is null, or already expired unused or invalid or its user code contains spaces.
            Thrown, if the current client id is null, empty or contains spaces.
            Thrown, if the current client secret is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.PollForAuthorizationAsync(TraktNet.Objects.Authentication.ITraktDevice,System.String,System.Threading.CancellationToken)">
            <summary>
            Polls for a new access token. Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-devices/get-token/poll-for-the-access_token">"Trakt API Doc - Devices: Get Token"</a> for more information.
            </para>
            </summary>
            <param name="device">The <see cref="T:TraktNet.Objects.Authentication.ITraktDevice" />, which will be used for the request.</param>
            <param name="clientId">The Trakt Client ID, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationDeviceException">
            Thrown, if the given device has an invalid device code.
            Thrown, if the user code of the given device was already approved by the user.
            Thrown, if the given device code is already expired unused.
            Thrown, if the user explicitly denied the user code of the given device.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given device is null, or already expired unused or invalid or its user code contains spaces.
            Thrown, if the given client id is null, empty or contains spaces.
            Thrown, if the current client secret is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.PollForAuthorizationAsync(TraktNet.Objects.Authentication.ITraktDevice,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Polls for a new access token. Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-devices/get-token/poll-for-the-access_token">"Trakt API Doc - Devices: Get Token"</a> for more information.
            </para>
            </summary>
            <param name="device">The <see cref="T:TraktNet.Objects.Authentication.ITraktDevice" />, which will be used for the request.</param>
            <param name="clientId">The Trakt Client ID, which will be used for the request.</param>
            <param name="clientSecret">The Trakt Client Secret, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationDeviceException">
            Thrown, if the given device has an invalid device code.
            Thrown, if the user code of the given device was already approved by the user.
            Thrown, if the given device code is already expired unused.
            Thrown, if the user explicitly denied the user code of the given device.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given device is null, or already expired unused or invalid or its user code contains spaces.
            Thrown, if the given client id is null, empty or contains spaces.
            Thrown, if the given client secret is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.RefreshAuthorizationAsync(System.Threading.CancellationToken)">
            <summary>
            Exchanges the current refresh token for a new access token, without re-authenticating the associated user.
            Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />'s refresh token, <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientId" />,
            <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/get-token/exchange-refresh_token-for-access_token">"Trakt API Doc - OAuth: Get Token"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthorizationException">
            Thrown, if the current <see cref="T:TraktNet.TraktClient" /> instance is not authorized and the current refresh token is null,
            empty or contains spaces.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationException">Thrown, if the current refresh token is invalid.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the current refresh token is null, empty or contains spaces.
            Thrown, if the current client id is null, empty of contains spaces.
            Thrown, if the current client secret is null, empty or contains spaces.
            Thrown, if the current rediret URI is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.RefreshAuthorizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Exchanges the current refresh token for a new access token, without re-authenticating the associated user.
            Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientId" />, <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/get-token/exchange-refresh_token-for-access_token">"Trakt API Doc - OAuth: Get Token"</a> for more information.
            </para>
            </summary>
            <param name="refreshToken">The refresh token, which will be used for the exchange.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthorizationException">
            Thrown, if the current <see cref="T:TraktNet.TraktClient" /> instance is not authorized and the given refresh token is null,
            empty or contains spaces.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationException">Thrown, if the given refresh token is invalid.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given refresh token is null, empty or contains spaces.
            Thrown, if the current client id is null, empty of contains spaces.
            Thrown, if the current client secret is null, empty or contains spaces.
            Thrown, if the current rediret URI is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.RefreshAuthorizationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Exchanges the current refresh token for a new access token, without re-authenticating the associated user.
            Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/get-token/exchange-refresh_token-for-access_token">"Trakt API Doc - OAuth: Get Token"</a> for more information.
            </para>
            </summary>
            <param name="refreshToken">The refresh token, which will be used for the exchange.</param>
            <param name="clientId">The Trakt Client ID, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthorizationException">
            Thrown, if the current <see cref="T:TraktNet.TraktClient" /> instance is not authorized and the given refresh token is null,
            empty or contains spaces.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationException">Thrown, if the given refresh token is invalid.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given refresh token is null, empty or contains spaces.
            Thrown, if the given client id is null, empty of contains spaces.
            Thrown, if the current client secret is null, empty or contains spaces.
            Thrown, if the current rediret URI is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.RefreshAuthorizationAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Exchanges the current refresh token for a new access token, without re-authenticating the associated user.
            Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.RedirectUri" /> for the request.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/get-token/exchange-refresh_token-for-access_token">"Trakt API Doc - OAuth: Get Token"</a> for more information.
            </para>
            </summary>
            <param name="refreshToken">The refresh token, which will be used for the exchange.</param>
            <param name="clientId">The Trakt Client ID, which will be used for the request.</param>
            <param name="clientSecret">The Trakt Client Secret, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthorizationException">
            Thrown, if the current <see cref="T:TraktNet.TraktClient" /> instance is not authorized and the given refresh token is null,
            empty or contains spaces.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationException">Thrown, if the given refresh token is invalid.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given refresh token is null, empty or contains spaces.
            Thrown, if the given client id is null, empty of contains spaces.
            Thrown, if the given client secret is null, empty or contains spaces.
            Thrown, if the current rediret URI is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.RefreshAuthorizationAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Exchanges the current refresh token for a new access token, without re-authenticating the associated user.
            Assigns the returned <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />, if successful.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/get-token/exchange-refresh_token-for-access_token">"Trakt API Doc - OAuth: Get Token"</a> for more information.
            </para>
            </summary>
            <param name="refreshToken">The refresh token, which will be used for the exchange.</param>
            <param name="clientId">The Trakt Client ID, which will be used for the request.</param>
            <param name="clientSecret">The Trakt Client Secret, which will be used for the request.</param>
            <param name="redirectUri">The redirect URI, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which contains a new access and refresh token.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktAuthorizationException">
            Thrown, if the current <see cref="T:TraktNet.TraktClient" /> instance is not authorized and the given refresh token is null,
            empty or contains spaces.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationException">Thrown, if the given refresh token is invalid.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given refresh token is null, empty or contains spaces.
            Thrown, if the given client id is null, empty of contains spaces.
            Thrown, if the given client secret is null, empty or contains spaces.
            Thrown, if the given rediret URI is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.RevokeAuthorizationAsync(System.Threading.CancellationToken)">
            <summary>
            Revokes the current access token. If, successful, the current access token will be invalid
            and the user has to be re-authenticated.
            Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.Authorization" />'s access token, <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientId" /> and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> for the request.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/get-token/revoke-an-access_token">"Trakt API Doc - OAuth: Revoke Token"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktAuthorizationException">
            Thrown, if the current <see cref="T:TraktNet.TraktClient" /> instance is not authorized and the current access token is null,
            empty or contains spaces.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationException">Thrown, if revoking the current access token fails with unknown error.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the current access token is null, empty or contains spaces.
            Thrown, if the current client id is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.RevokeAuthorizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Revokes the current access token. If, successful, the current access token will be invalid
            and the user has to be re-authenticated.
            Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientId" /> and <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> for the request.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/get-token/revoke-an-access_token">"Trakt API Doc - OAuth: Revoke Token"</a> for more information.
            </para>
            </summary>
            <param name="accessToken">The given access token, which will be revoked.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktAuthorizationException">
            Thrown, if the current <see cref="T:TraktNet.TraktClient" /> instance is not authorized and the given access token is null,
            empty or contains spaces.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationException">Thrown, if revoking the given access token fails with unknown error.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given access token is null, empty or contains spaces.
            Thrown, if the current client id is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.RevokeAuthorizationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Revokes the current access token. If, successful, the current access token will be invalid
            and the user has to be re-authenticated.
            Uses the current <see cref="P:TraktNet.Modules.TraktAuthenticationModule.ClientSecret" /> for the request.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/get-token/revoke-an-access_token">"Trakt API Doc - OAuth: Revoke Token"</a> for more information.
            </para>
            </summary>
            <param name="accessToken">The given access token, which will be revoked.</param>
            <param name="clientId">The Trakt Client ID, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktAuthorizationException">
            Thrown, if the current <see cref="T:TraktNet.TraktClient" /> instance is not authorized and the given access token is null,
            empty or contains spaces.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationException">Thrown, if revoking the given access token fails with unknown error.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given access token is null, empty or contains spaces.
            Thrown, if the given client id is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktAuthenticationModule.RevokeAuthorizationAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Revokes the current access token. If, successful, the current access token will be invalid
            and the user has to be re-authenticated.
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/authentication-oauth/get-token/revoke-an-access_token">"Trakt API Doc - OAuth: Revoke Token"</a> for more information.
            </para>
            </summary>
            <param name="accessToken">The given access token, which will be revoked.</param>
            <param name="clientId">The Trakt Client ID, which will be used for the request.</param>
            <param name="clientSecret">The Trakt Client Secret, which will be used for the request.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktAuthorizationException">
            Thrown, if the current <see cref="T:TraktNet.TraktClient" /> instance is not authorized and the given access token is null,
            empty or contains spaces.
            </exception>
            <exception cref="T:TraktNet.Exceptions.TraktAuthenticationException">Thrown, if revoking the given access token fails with unknown error.</exception>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given access token is null, empty or contains spaces.
            Thrown, if the given client id is null, empty or contains spaces.
            Thrown, if the given client secret is null, empty or contains spaces.
            </exception>
        </member>
        <member name="T:TraktNet.Modules.TraktCalendarModule">
            <summary>
            Provides access to data retrieving methods specific to calendars.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/calendars">"Trakt API Doc - Calendars"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktCalendarModule.GetUserShowsAsync(System.Nullable{System.DateTime},System.Nullable{System.Int32},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktCalendarFilter,System.Threading.CancellationToken)">
            <summary>
            Gets all users <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarShow" />s airing during the given time period.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/calendars/my-shows/get-shows">"Trakt API Doc - Calendars: My Shows"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format.</param>
            <param name="days">1 - 31 days, specifying the length of the time period. Defaults to 7 days.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktCalendarFilter" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarShow" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given days value is not between 1 and 31.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCalendarModule.GetUserNewShowsAsync(System.Nullable{System.DateTime},System.Nullable{System.Int32},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktCalendarFilter,System.Threading.CancellationToken)">
            <summary>
            Gets all new users <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarShow" />s airing during the given time period.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/calendars/my-new-shows/get-new-shows">"Trakt API Doc - Calendars: My New Shows"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format.</param>
            <param name="days">1 - 31 days, specifying the length of the time period. Defaults to 7 days.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktCalendarFilter" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarShow" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given days value is not between 1 and 31.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCalendarModule.GetUserSeasonPremieresAsync(System.Nullable{System.DateTime},System.Nullable{System.Int32},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktCalendarFilter,System.Threading.CancellationToken)">
            <summary>
            Gets all users season premieres airing during the given time period.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/calendars/my-season-premieres/get-season-premieres">"Trakt API Doc - Calendars: My Season Premieres"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format.</param>
            <param name="days">1 - 31 days, specifying the length of the time period. Defaults to 7 days.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktCalendarFilter" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarShow" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given days value is not between 1 and 31.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCalendarModule.GetUserMoviesAsync(System.Nullable{System.DateTime},System.Nullable{System.Int32},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktCalendarFilter,System.Threading.CancellationToken)">
            <summary>
            Gets all users <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie" />s airing during the given time period.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/calendars/my-movies/get-movies">"Trakt API Doc - Calendars: My Movies"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format.</param>
            <param name="days">1 - 31 days, specifying the length of the time period. Defaults to 7 days.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktCalendarFilter" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given days value is not between 1 and 31.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCalendarModule.GetUserDVDMoviesAsync(System.Nullable{System.DateTime},System.Nullable{System.Int32},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktCalendarFilter,System.Threading.CancellationToken)">
            <summary>
            Gets all users <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie" />s with a DVD release during the given time period.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/calendars/my-dvd/get-dvd-releases">"Trakt API Doc - Calendars: My DVD"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format.</param>
            <param name="days">1 - 31 days, specifying the length of the time period. Defaults to 7 days.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktCalendarFilter" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given days value is not between 1 and 31.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCalendarModule.GetAllShowsAsync(System.Nullable{System.DateTime},System.Nullable{System.Int32},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktCalendarFilter,System.Threading.CancellationToken)">
            <summary>
            Gets all <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarShow" />s airing during the given time period.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/calendars/all-shows/get-shows">"Trakt API Doc - Calendars: All Shows"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format.</param>
            <param name="days">1 - 31 days, specifying the length of the time period. Defaults to 7 days.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktCalendarFilter" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarShow" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given days value is not between 1 and 31.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCalendarModule.GetAllNewShowsAsync(System.Nullable{System.DateTime},System.Nullable{System.Int32},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktCalendarFilter,System.Threading.CancellationToken)">
            <summary>
            Gets all new <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarShow" />s airing during the given time period.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/calendars/all-new-shows/get-new-shows">"Trakt API Doc - Calendars: All New Shows"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format.</param>
            <param name="days">1 - 31 days, specifying the length of the time period. Defaults to 7 days.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktCalendarFilter" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarShow" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given days value is not between 1 and 31.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCalendarModule.GetAllSeasonPremieresAsync(System.Nullable{System.DateTime},System.Nullable{System.Int32},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktCalendarFilter,System.Threading.CancellationToken)">
            <summary>
            Gets all season premieres airing during the given time period.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/calendars/all-season-premieres/get-season-premieres">"Trakt API Doc - Calendars: All Season Premieres"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format.</param>
            <param name="days">1 - 31 days, specifying the length of the time period. Defaults to 7 days.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktCalendarFilter" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarShow" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given days value is not between 1 and 31.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCalendarModule.GetAllMoviesAsync(System.Nullable{System.DateTime},System.Nullable{System.Int32},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktCalendarFilter,System.Threading.CancellationToken)">
            <summary>
            Gets all <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie" />s airing during the given time period.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/calendars/all-movies/get-movies">"Trakt API Doc - Calendars: All Movies"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format.</param>
            <param name="days">1 - 31 days, specifying the length of the time period. Defaults to 7 days.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktCalendarFilter" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given days value is not between 1 and 31.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCalendarModule.GetAllDVDMoviesAsync(System.Nullable{System.DateTime},System.Nullable{System.Int32},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktCalendarFilter,System.Threading.CancellationToken)">
            <summary>
            Gets all <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie" />s with a DVD release during the given time period.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/calendars/all-movies/get-dvd-releases">"Trakt API Doc - Calendars: All DVD"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format.</param>
            <param name="days">1 - 31 days, specifying the length of the time period. Defaults to 7 days.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktCalendarFilter" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given days value is not between 1 and 31.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktCertificationsModule">
            <summary>
            Provides access to data retrieving methods specific to certifications.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/certifications">"Trakt API Doc - Certifications"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktCertificationsModule.GetMovieCertificationsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all movie certifications.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/certifications/list/get-certifications">"Trakt API Doc - Certifications: List"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktCertifications" /> instance with the queried certification's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCertificationsModule.GetShowCertificationsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all show certifications.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/certifications/list/get-certifications">"Trakt API Doc - Certifications: List"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktCertifications" /> instance with the queried certification's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktCheckinsModule">
            <summary>
            Provides access to data retrieving methods specific to checkins.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/checkin">"Trakt API Doc - Checkin"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktCheckinsModule.CheckIntoMovieAsync(TraktNet.Objects.Get.Movies.ITraktMovie,System.String,System.Nullable{System.DateTime},System.String,TraktNet.Objects.Basic.ITraktSharing,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks into the given <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/checkin/check-into-an-item">"Trakt API Doc - Checkin: Checkin"</a> for more information.
            </para>
            </summary>
            <param name="movie">The <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />, which will be checked in.</param>
            <param name="appVersion">Optional application version for the checkin.</param>
            <param name="appBuildDate">Optional application build date for the checkin. Will be converted to the Trakt date-format.</param>
            <param name="message">The message, which will be used for sharing. If none is given, the user's default message will be used.</param>
            <param name="sharing">Optional sharing settings, which will override the user's default sharing settings.</param>
            <param name="foursquareVenueID">Optional Foursquare venue id for the checkin.</param>
            <param name="foursquareVenueName">Optional Foursquare venue name for the checkin.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Checkins.Responses.ITraktMovieCheckinPostResponse" /> instance, containing the successfully checked in movie's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given movie's title is null or empty.
            Thrown, if the given movie has no valid ids set.
            </exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given movie is null or if its ids are null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given movie's year is not valid.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCheckinsModule.CheckIntoEpisodeAsync(TraktNet.Objects.Get.Episodes.ITraktEpisode,System.String,System.Nullable{System.DateTime},System.String,TraktNet.Objects.Basic.ITraktSharing,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks into the given <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/checkin/check-into-an-item">"Trakt API Doc - Checkin: Checkin"</a> for more information.
            </para>
            </summary>
            <param name="episode">The <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />, which will be checked in.</param>
            <param name="appVersion">Optional application version for the checkin.</param>
            <param name="appBuildDate">Optional application build date for the checkin. Will be converted to the Trakt date-format.</param>
            <param name="message">The message, which will be used for sharing. If none is given, the user's default message will be used.</param>
            <param name="sharing">Optional sharing settings, which will override the user's default sharing settings.</param>
            <param name="foursquareVenueID">Optional Foursquare venue id for the checkin.</param>
            <param name="foursquareVenueName">Optional Foursquare venue name for the checkin.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Checkins.Responses.ITraktEpisodeCheckinPostResponse" /> instance, containing the successfully checked in episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given episode has no valid ids set.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given episode is null or if its ids are null.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCheckinsModule.CheckIntoEpisodeWithShowAsync(TraktNet.Objects.Get.Episodes.ITraktEpisode,TraktNet.Objects.Get.Shows.ITraktShow,System.String,System.Nullable{System.DateTime},System.String,TraktNet.Objects.Basic.ITraktSharing,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks into the given <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />. Use this method, if the given episode has no valid ids.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/checkin/check-into-an-item">"Trakt API Doc - Checkin: Checkin"</a> for more information.
            </para>
            </summary>
            <param name="episode">The <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />, which will be checked in.</param>
            <param name="show">The <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />, which will be used to check into the given episode.</param>
            <param name="appVersion">Optional application version for the checkin.</param>
            <param name="appBuildDate">Optional application build date for the checkin. Will be converted to the Trakt date-format.</param>
            <param name="message">The message, which will be used for sharing. If none is given, the user's default message will be used.</param>
            <param name="sharing">Optional sharing settings, which will override the user's default sharing settings.</param>
            <param name="foursquareVenueID">Optional Foursquare venue id for the checkin.</param>
            <param name="foursquareVenueName">Optional Foursquare venue name for the checkin.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Checkins.Responses.ITraktEpisodeCheckinPostResponse" /> instance, containing the successfully checked in episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given show's title is null or empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given episode is null. Thrown, if the given show is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given episode's season number or the given episode's number is below zero.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCheckinsModule.CheckIntoEpisodeWithShowAsync(System.Int32,TraktNet.Objects.Get.Shows.ITraktShow,System.String,System.Nullable{System.DateTime},System.String,TraktNet.Objects.Basic.ITraktSharing,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks into the given <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />. Use this method, if the given episode has no valid ids.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/checkin/check-into-an-item">"Trakt API Doc - Checkin: Checkin"</a> for more information.
            </para>
            </summary>
            <param name="absoluteEpisodeNumber">The absolute number of the episode, which will be checked in.</param>
            <param name="show">The <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />, which will be used to check into the given episode.</param>
            <param name="appVersion">Optional application version for the checkin.</param>
            <param name="appBuildDate">Optional application build date for the checkin. Will be converted to the Trakt date-format.</param>
            <param name="message">The message, which will be used for sharing. If none is given, the user's default message will be used.</param>
            <param name="sharing">Optional sharing settings, which will override the user's default sharing settings.</param>
            <param name="foursquareVenueID">Optional Foursquare venue id for the checkin.</param>
            <param name="foursquareVenueName">Optional Foursquare venue name for the checkin.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Checkins.Responses.ITraktEpisodeCheckinPostResponse" /> instance, containing the successfully checked in episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given show's title is null or empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given episode is null. Thrown, if the given show is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given episode's season number or the given episode's number is below zero.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCheckinsModule.DeleteAnyActiveCheckinsAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes any active checkins.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/checkin/checkin/delete-any-active-checkins">"Trakt API Doc - Checkin: Checkin"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktCommentsModule">
            <summary>
            Provides access to data retrieving methods specific to comments.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/comments">"Trakt API Doc - Comments"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.GetCommentAsync(System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Gets a <see cref="T:TraktNet.Objects.Basic.ITraktComment" /> or reply with the given id.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/comment/get-a-comment-or-reply">"Trakt API Doc - Comments: Comment"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktCommentsModule.GetMutlipleCommentsAsync(System.UInt32[],System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="commentId">The comment's id.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktComment" /> instance with the queried comment's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given commentId is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.GetCommentItemAsync(System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets the attached media <see cref="T:TraktNet.Objects.Basic.ITraktCommentItem" /> from a comment with the given id.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/comments/item/get-the-attached-media-item">"Trakt API Doc - Comments: Item"</a> for more information.
            </para>
            </summary>
            <param name="commentId">The comment's id.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the comment's media item should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktCommentItem" /> instance with the queried comment's media item.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given commentId is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.GetCommentLikesAsync(System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets likes for comment with the given id.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/comments/likes/get-all-users-who-liked-a-comment">"Trakt API Doc - Comments: Likes"</a> for more information.
            </para>
            </summary>
            <param name="commentId">The comment's id.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the comment's likes should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried likes and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Basic.ITraktCommentLike" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given comment id is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.GetMutlipleCommentsAsync(System.UInt32[],System.Threading.CancellationToken)">
            <summary>
            Gets multiple different <see cref="T:TraktNet.Objects.Basic.ITraktComment" />s or replies at once with the given Trakt-Ids or -Slugs.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/comment/get-a-comment-or-reply">"Trakt API Doc - Comments: Comment"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktCommentsModule.GetCommentAsync(System.UInt32,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="commentIds">An array of comment ids.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Basic.ITraktComment" /> instances with the data of each queried comment.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if one request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if one of the given comment ids is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.GetRecentlyUpdatedCommentsAsync(TraktNet.Enums.TraktCommentType,TraktNet.Enums.TraktObjectType,System.Nullable{System.Boolean},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets recently updated comments.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/comments/updates/get-recently-updated-comments">"Trakt API Doc - Comments: Updates"</a> for more information.
            </para>
            </summary>
            <param name="commentType">Determines, which type of comments should be queried. See also <seealso cref="T:TraktNet.Enums.TraktCommentType" />.</param>
            <param name="objectType">Determines, for which object types comments should be queried. See also <seealso cref="T:TraktNet.Enums.TraktObjectType" />.</param>
            <param name="includeReplies">Determines, whether replies should be retrieved alongside with comments.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the commented objects should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried recently updated comments and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserComment" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.GetRecentlyCreatedCommentsAsync(TraktNet.Enums.TraktCommentType,TraktNet.Enums.TraktObjectType,System.Nullable{System.Boolean},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets recently created comments.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/comments/recent/get-recently-created-comments">"Trakt API Doc - Comments: Recent"</a> for more information.
            </para>
            </summary>
            <param name="commentType">Determines, which type of comments should be queried. See also <seealso cref="T:TraktNet.Enums.TraktCommentType" />.</param>
            <param name="objectType">Determines, for which object types comments should be queried. See also <seealso cref="T:TraktNet.Enums.TraktObjectType" />.</param>
            <param name="includeReplies">Determines, whether replies should be retrieved alongside with comments.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the commented objects should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried recently created comments and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserComment" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.GetTrendingCommentsAsync(TraktNet.Enums.TraktCommentType,TraktNet.Enums.TraktObjectType,System.Nullable{System.Boolean},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets trending comments.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/comments/trending/get-trending-comments">"Trakt API Doc - Comments: Trending"</a> for more information.
            </para>
            </summary>
            <param name="commentType">Determines, which type of comments should be queried. See also <seealso cref="T:TraktNet.Enums.TraktCommentType" />.</param>
            <param name="objectType">Determines, for which object types comments should be queried. See also <seealso cref="T:TraktNet.Enums.TraktObjectType" />.</param>
            <param name="includeReplies">Determines, whether replies should be retrieved alongside with comments.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the commented objects should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried trending comments and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserComment" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.PostMovieCommentAsync(TraktNet.Objects.Get.Movies.ITraktMovie,System.String,System.Nullable{System.Boolean},TraktNet.Objects.Basic.ITraktSharing,System.Threading.CancellationToken)">
            <summary>
            Posts a comment for the given <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/comments/post-a-comment">"Trakt API Doc - Comments: Comments"</a> for more information.
            </para>
            </summary>
            <param name="movie">The <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />, for which the comment should be posted.</param>
            <param name="comment">The comment's content for the given movie. Should be at least five words long.</param>
            <param name="containsSpoiler">Determines, if the <paramref name="comment" /> contains any spoilers.</param>
            <param name="sharing"><see cref="T:TraktNet.Objects.Basic.ITraktSharing" /> instance, containing sharing information for the comment.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Comments.Responses.ITraktCommentPostResponse" /> instance, containing the successfully posted comment's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given movie's title is null, empty or contains spaces.
            Thrown, if the given movie has no valid ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.
            Thrown, if the given comment is null or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given movie is null or its ids are null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given movie's year is not valid.
            Thrown, if the given comment's word count is below five.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.PostShowCommentAsync(TraktNet.Objects.Get.Shows.ITraktShow,System.String,System.Nullable{System.Boolean},TraktNet.Objects.Basic.ITraktSharing,System.Threading.CancellationToken)">
            <summary>
            Posts a comment for the given <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/comments/post-a-comment">"Trakt API Doc - Comments: Comments"</a> for more information.
            </para>
            </summary>
            <param name="show">The <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />, for which the comment should be posted.</param>
            <param name="comment">The comment's content for the given show. Should be at least five words long.</param>
            <param name="containsSpoiler">Determines, if the <paramref name="comment" /> contains any spoilers.</param>
            <param name="sharing"><see cref="T:TraktNet.Objects.Basic.ITraktSharing" /> instance, containing sharing information for the comment.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Comments.Responses.ITraktCommentPostResponse" /> instance, containing the successfully posted comment's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given show's title is null, empty or contains spaces.
            Thrown, if the given show has no valid ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.
            Thrown, if the given comment is null or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given show is null or its ids are null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given comment's word count is below five.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.PostSeasonCommentAsync(TraktNet.Objects.Get.Seasons.ITraktSeason,System.String,System.Nullable{System.Boolean},TraktNet.Objects.Basic.ITraktSharing,System.Threading.CancellationToken)">
            <summary>
            Posts a comment for the given <see cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/comments/post-a-comment">"Trakt API Doc - Comments: Comments"</a> for more information.
            </para>
            </summary>
            <param name="season">The <see cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />, for which the comment should be posted.</param>
            <param name="comment">The comment's content for the given season. Should be at least five words long.</param>
            <param name="containsSpoiler">Determines, if the <paramref name="comment" /> contains any spoilers.</param>
            <param name="sharing"><see cref="T:TraktNet.Objects.Basic.ITraktSharing" /> instance, containing sharing information for the comment.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Comments.Responses.ITraktCommentPostResponse" /> instance, containing the successfully posted comment's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given season has no valid ids. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonIds" />.
            Thrown, if the given comment is null or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given season is null or its ids are null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given comment's word count is below five.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.PostEpisodeCommentAsync(TraktNet.Objects.Get.Episodes.ITraktEpisode,System.String,System.Nullable{System.Boolean},TraktNet.Objects.Basic.ITraktSharing,System.Threading.CancellationToken)">
            <summary>
            Posts a comment for the given <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/comments/post-a-comment">"Trakt API Doc - Comments: Comments"</a> for more information.
            </para>
            </summary>
            <param name="episode">The <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />, for which the comment should be posted.</param>
            <param name="comment">The comment's content for the given episode. Should be at least five words long.</param>
            <param name="containsSpoiler">Determines, if the <paramref name="comment" /> contains any spoilers.</param>
            <param name="sharing"><see cref="T:TraktNet.Objects.Basic.ITraktSharing" /> instance, containing sharing information for the comment.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Comments.Responses.ITraktCommentPostResponse" /> instance, containing the successfully posted comment's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given episode has no valid ids. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.
            Thrown, if the given comment is null or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given episode is null or its ids are null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given comment's word count is below five.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.PostListCommentAsync(TraktNet.Objects.Get.Users.Lists.ITraktList,System.String,System.Nullable{System.Boolean},TraktNet.Objects.Basic.ITraktSharing,System.Threading.CancellationToken)">
            <summary>
            Posts a comment for the given <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/comments/post-a-comment">"Trakt API Doc - Comments: Comments"</a> for more information.
            </para>
            </summary>
            <param name="list">The <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />, for which the comment should be posted.</param>
            <param name="comment">The comment's content for the given list. Should be at least five words long.</param>
            <param name="containsSpoiler">Determines, if the <paramref name="comment" /> contains any spoilers.</param>
            <param name="sharing"><see cref="T:TraktNet.Objects.Basic.ITraktSharing" /> instance, containing sharing information for the comment.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Comments.Responses.ITraktCommentPostResponse" /> instance, containing the successfully posted comment's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given list has no valid ids. See also <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktListIds" />.
            Thrown, if the given comment is null or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given list is null or its ids are null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given comment's word count is below five.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.UpdateCommentAsync(System.UInt32,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Updates a comment or reply with the given comment id, which was posted within the last hour.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/comment/update-a-comment-or-reply">"Trakt API Doc - Comments: Comment"</a> for more information.
            </para>
            </summary>
            <param name="commentId">The id of the comment, which should be updated.</param>
            <param name="comment">The new comment's content. Should be at least five words long.</param>
            <param name="containsSpoiler">Determines, if the <paramref name="comment" /> contains any spoilers.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Comments.Responses.ITraktCommentPostResponse" /> instance, containing the successfully updated comment's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given comment id is null, empty or contains spaces.
            Thrown, if the given comment is null or empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given comment's word count is below five.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.PostCommentReplyAsync(System.UInt32,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Posts a reply to a comment with the given comment id.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/replies/post-a-reply-for-a-comment">"Trakt API Doc - Comments: Replies"</a> for more information.
            </para>
            </summary>
            <param name="commentId">The id of the comment, for which the reply should be posted.</param>
            <param name="comment">The comment's content. Should be at least five words long.</param>
            <param name="containsSpoiler">Determines, if the <paramref name="comment" /> contains any spoilers.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Comments.Responses.ITraktCommentPostResponse" /> instance, containing the successfully posted reply's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given comment id is null, empty or contains spaces.
            Thrown, if the given comment is null or empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given comment's word count is below five.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.DeleteCommentAsync(System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Deletes a comment with the given comment id.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/comment/delete-a-comment-or-reply">"Trakt API Doc - Comments: Comment"</a> for more information.
            </para>
            </summary>
            <param name="commentId">The id of the comment, which should be deleted.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given comment id is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.LikeCommentAsync(System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Likes a comment with the given comment id.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/like/like-a-comment">"Trakt API Doc - Comments: Like"</a> for more information.
            </para>
            </summary>
            <param name="commentId">The id of the comment, which should be liked.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given comment id is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.UnlikeCommentAsync(System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Unlikes a comment with the given comment id.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/like/remove-like-on-a-comment">"Trakt API Doc - Comments: Like"</a> for more information.
            </para>
            </summary>
            <param name="commentId">The id of the comment, which should be unliked.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given comment id is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCommentsModule.GetCommentRepliesAsync(System.UInt32,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets replies for comment with the given id.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/comments/replies/get-replies-for-a-comment">"Trakt API Doc - Comments: Replies"</a> for more information.
            </para>
            </summary>
            <param name="commentId">The id of the comment, for which the replies should be queried.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried replies and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Basic.ITraktComment" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given comment id is null, empty or contains spaces.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktCountriesModule">
            <summary>
            Provides access to data retrieving methods specific to countries.
            <para>
            This module contains all methods of the <a href ="https://trakt.docs.apiary.io/#reference/countries">"Trakt API Doc - Countries"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktCountriesModule.GetMovieCountriesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all movie countries.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/countries/list/get-countries">"Trakt API Doc - Countries: List"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Basic.ITraktCountry" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktCountriesModule.GetShowCountriesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all show countries.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/countries/list/get-countries">"Trakt API Doc - Countries: List"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Basic.ITraktCountry" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktEpisodesModule">
            <summary>
            Provides access to data retrieving methods specific to episodes.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/episodes">"Trakt API Doc - Episodes"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktEpisodesModule.GetEpisodeAsync(System.String,System.UInt32,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/episodes/summary/get-a-single-episode-for-a-show">"Trakt API Doc - Episodes: Summary"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktEpisodesModule.GetMultipleEpisodesAsync(TraktNet.Modules.TraktMultipleEpisodesQueryParams,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season containing the episode, which should be queried.</param>
            <param name="episodeNumber">The number of the episode, which should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the episode should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> instance with the queried episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given season-number is below zero.
            Thrown, if the given episode-number is below one.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktEpisodesModule.GetMultipleEpisodesAsync(TraktNet.Modules.TraktMultipleEpisodesQueryParams,System.Threading.CancellationToken)">
            <summary>
            Gets multiple different <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />s at once in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/episodes/summary/get-a-single-episode-for-a-show">"Trakt API Doc - Episodes: Summary"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktEpisodesModule.GetEpisodeAsync(System.String,System.UInt32,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="episodesQueryParams">A list of show ids, season numbers, episode numbers and optional extended infos. See also <seealso cref="T:TraktNet.Modules.TraktMultipleEpisodesQueryParams" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> instances with the data of each queried episode.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if one request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if one of the given show ids is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given season-number is below zero.
            Thrown, if the given episode-number is below one.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktEpisodesModule.GetEpisodeCommentsAsync(System.String,System.UInt32,System.UInt32,TraktNet.Enums.TraktCommentSortOrder,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets top level comments for a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/episodes/comments/get-all-episode-comments">"Trakt API Doc - Episodes: Comments"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season containing the episode, for which the comments should be queried.</param>
            <param name="episodeNumber">The number of the episode, for which the comments should be queried.</param>
            <param name="commentSortOrder">The comments sort order. See also <seealso cref="T:TraktNet.Enums.TraktCommentSortOrder" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried episode comments and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Basic.ITraktComment" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given season-number is below zero.
            Thrown, if the given episode-number is below one.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktEpisodesModule.GetEpisodeListsAsync(System.String,System.UInt32,System.UInt32,TraktNet.Enums.TraktListType,TraktNet.Enums.TraktListSortOrder,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets all <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />s containing the given <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/episodes/lists/get-lists-containing-this-episode">"Trakt API Doc - Episodes: Lists"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season containing the episode, for which the lists should be queried.</param>
            <param name="episodeNumber">The number of the episode, for which the lists should be queried.</param>
            <param name="listType">The type of lists, that should be queried. Defaults to personal lists.</param>
            <param name="listSortOrder">The list sort order. See also <seealso cref="T:TraktNet.Enums.TraktListSortOrder" />. Defaults to sorted by popularity.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried episode lists and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given season-number is below zero.
            Thrown, if the given episode-number is below one.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktEpisodesModule.GetEpisodePeopleAsync(System.String,System.UInt32,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all people for a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a show with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/episodes/people/get-all-people-for-an-episode">"Trakt API Doc - Episodes: People"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season, for which the people should be queried.</param>
            <param name="episodeNumber">The number of the episode, for which the people should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the people should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Shows.ITraktShowCastAndCrew" /> instance, containing the cast and crew for a episode with the given showIdOrSlug and the given season number.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktEpisodesModule.GetEpisodeRatingsAsync(System.String,System.UInt32,System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Gets the ratings for a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/episodes/ratings/get-episode-ratings">"Trakt API Doc - Episodes: Ratings"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season containing the episode, for which the ratings should be queried.</param>
            <param name="episodeNumber">The number of the episode, for which the ratings should be queried.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktRating" /> instance, containing the ratings for a episode with the given showIdOrSlug.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given season-number is below zero.
            Thrown, if the given episode-number is below one.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktEpisodesModule.GetEpisodeStatisticsAsync(System.String,System.UInt32,System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Gets the statistics for a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/episodes/ratings/get-episode-stats">"Trakt API Doc - Episodes: Stats"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season containing the episode, for which the statistics should be queried.</param>
            <param name="episodeNumber">The number of the episode, for which the statistics should be queried.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktStatistics" /> instance, containing the statistics for a episode with the given showIdOrSlug.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given season-number is below zero.
            Thrown, if the given episode-number is below one.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktEpisodesModule.GetEpisodeTranslationsAsync(System.String,System.UInt32,System.UInt32,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all translations for a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/episodes/translations/get-all-episode-translations">"Trakt API Doc - Episodes: Translations"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season containing the episode, for which the translations should be queried.</param>
            <param name="episodeNumber">The number of the episode, for which the translations should be queried.</param>
            <param name="languageCode">An optional two letter language code to query a specific translation language.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeTranslation" /> instances, each containing a title, overview and language code.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given season-number is below zero.
            Thrown, if the given episode-number is below one.
            Thrown, if the given languageCode is shorter or longer than two characters.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktEpisodesModule.GetEpisodeWatchingUsersAsync(System.String,System.UInt32,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all watching users of a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/episodes/watching/get-users-watching-right-now">"Trakt API Doc - Episodes: Watching"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season containing the episode, for which the watching users should be queried.</param>
            <param name="episodeNumber">The number of the episode, for which the watching users should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the users should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.ITraktUser" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given season-number is below zero.
            Thrown, if the given episode-number is below one.
            </exception>
        </member>
        <member name="T:TraktNet.Modules.TraktGenresModule">
            <summary>
            Provides access to data retrieving methods specific to genres.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/genres">"Trakt API Doc - Genres"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktGenresModule.GetMovieGenresAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all movie genres.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/genres/list/get-genres">"Trakt API Doc - Genres: List"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Basic.ITraktGenre" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktGenresModule.GetShowGenresAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all show genres.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/genres/list/get-genres">"Trakt API Doc - Genres: List"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Basic.ITraktGenre" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktLanguagesModule">
            <summary>
            Provides access to data retrieving methods specific to languages.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/languages">"Trakt API Doc - Languages"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktLanguagesModule.GetMovieLanguagesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all movie languages.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/languages/list/get-languages">"Trakt API Doc - Languages: List"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Basic.ITraktLanguage" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktLanguagesModule.GetShowLanguagesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all show languages.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/languages/list/get-languages">"Trakt API Doc - Languages: List"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Basic.ITraktLanguage" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktListsModule">
            <summary>
            Provides access to data retrieving methods specific to lists.
            <para>
            This module contains all methods of the <a href ="https://trakt.docs.apiary.io/#reference/lists">"Trakt API Doc - Lists"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktListsModule.GetPopularListsAsync(TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets popular lists.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/lists/popular/get-popular-lists">"Trakt API Doc - Lists: Popular"</a> for more information.
            </para>
            </summary>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried popular lists and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktListsModule.GetTrendingListsAsync(TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets trending lists.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/lists/trending/get-trending-lists">"Trakt API Doc - Lists: Trending"</a> for more information.
            </para>
            </summary>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried trending lists and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktMoviesModule">
            <summary>
            Provides access to data retrieving methods specific to movies.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/movies">"Trakt API Doc - Movies"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMovieAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/summary/get-a-movie">"Trakt API Doc - Movies: Summary"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktMoviesModule.GetMultipleMoviesAsync(TraktNet.Modules.TraktMultipleObjectsQueryParams,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="movieIdOrSlug">The movie's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movie should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> instance with the queried movie's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMultipleMoviesAsync(TraktNet.Modules.TraktMultipleObjectsQueryParams,System.Threading.CancellationToken)">
            <summary>
            Gets multiple different <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />s at once with the given Trakt-Ids or -Slugs.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/summary/get-a-movie">"Trakt API Doc - Movies: Summary"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktMoviesModule.GetMovieAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="moviesQueryParams">A list of movie ids and optional extended infos. See also <seealso cref="T:TraktNet.Modules.TraktMultipleObjectsQueryParams" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> instances with the data of each queried movie.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if one request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if one of the given movie ids is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMovieAliasesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all title aliases for a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/aliases/get-all-movie-aliases">"Trakt API Doc - Movies: Aliases"</a> for more information.
            </para>
            </summary>
            <param name="movieIdOrSlug">The movie's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovieAlias" /> instances, each containing a title and country code.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMovieReleasesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all releases for a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/releases/get-all-movie-releases">"Trakt API Doc - Movies: Releases"</a> for more information.
            </para>
            </summary>
            <param name="movieIdOrSlug">The movie's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</param>
            <param name="countryCode">An optional two letter country code to query a specific release.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovieRelease" /> instances, each containing a country code, certification, release date and a note.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given countryCode is shorter or longer than two characters.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMovieTranslationsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all translations for a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/translations/get-all-movie-translations">"Trakt API Doc - Movies: Translations"</a> for more information.
            </para>
            </summary>
            <param name="movieIdOrSlug">The movie's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</param>
            <param name="languageCode">An optional two letter language code to query a specific translation language.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovieTranslation" /> instances, each containing a title, tagline, overview and language code.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given languageCode is shorter or longer than two characters.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMovieCommentsAsync(System.String,TraktNet.Enums.TraktCommentSortOrder,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets top level comments for a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/translations/get-all-movie-comments">"Trakt API Doc - Movies: Comments"</a> for more information.
            </para>
            </summary>
            <param name="movieIdOrSlug">The movie's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</param>
            <param name="commentSortOrder">The comments sort order. See also <seealso cref="T:TraktNet.Enums.TraktCommentSortOrder" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried movie comments and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Basic.ITraktComment" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMovieListsAsync(System.String,TraktNet.Enums.TraktListType,TraktNet.Enums.TraktListSortOrder,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets all <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />s containing a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/lists/get-lists-containing-this-movie">"Trakt API Doc - Movies: Lists"</a> for more information.
            </para>
            </summary>
            <param name="movieIdOrSlug">The movie's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</param>
            <param name="listType">The type of lists, that should be queried. Defaults to personal lists.</param>
            <param name="listSortOrder">The list sort order. See also <seealso cref="T:TraktNet.Enums.TraktListSortOrder" />. Defaults to sorted by popularity.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried movie lists and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMoviePeopleAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all people for a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/people/get-all-people-for-a-movie">"Trakt API Doc - Movies: People"</a> for more information.
            </para>
            </summary>
            <param name="movieIdOrSlug">The movie's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the people should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktCastAndCrew" /> instance, containing the cast and crew for a movie with the given movieIdOrSlug.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMovieRatingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the ratings for a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/ratings/get-movie-ratings">"Trakt API Doc - Movies: Ratings"</a> for more information.
            </para>
            </summary>
            <param name="movieIdOrSlug">The movie's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktRating" /> instance, containing the ratings for a movie with the given movieIdOrSlug.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMovieRelatedMoviesAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets related movies for a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/related/get-related-movies">"Trakt API Doc - Movies: Related"</a> for more information.
            </para>
            </summary>
            <param name="movieIdOrSlug">The movie's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried related movies and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMovieStatisticsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the statistics for a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/stats/get-movie-stats">"Trakt API Doc - Movies: Stats"</a> for more information.
            </para>
            </summary>
            <param name="movieIdOrSlug">The movie's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktStatistics" /> instance, containing the statistics for a movie with the given movieIdOrSlug.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMovieWatchingUsersAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all watching users of a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/watching/get-users-watching-right-now">"Trakt API Doc - Movies: Watching"</a> for more information.
            </para>
            </summary>
            <param name="movieIdOrSlug">The movie's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the users should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.ITraktUser" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetTrendingMoviesAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktMovieFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets trending movies.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/trending/get-trending-movies">"Trakt API Doc - Movies: Trending"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktMovieFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried trending movies and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktTrendingMovie" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetPopularMoviesAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktMovieFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets popular movies.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/popular/get-popular-movies">"Trakt API Doc - Movies: Popular"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktMovieFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried popular movies and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMostPlayedMoviesAsync(TraktNet.Enums.TraktTimePeriod,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktMovieFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the most played movies.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/played/get-the-most-played-movies">"Trakt API Doc - Movies: Played"</a> for more information.
            </para>
            </summary>
            <param name="period">The time period, for which the most played movies should be queried. See also <seealso cref="T:TraktNet.Enums.TraktTimePeriod" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktMovieFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried most played movies and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMostPWCMovie" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMostWatchedMoviesAsync(TraktNet.Enums.TraktTimePeriod,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktMovieFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the most watched movies.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/watched/get-the-most-watched-movies">"Trakt API Doc - Movies: Watched"</a> for more information.
            </para>
            </summary>
            <param name="period">The time period, for which the most watched movies should be queried. See also <seealso cref="T:TraktNet.Enums.TraktTimePeriod" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktMovieFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried most watched movies and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMostPWCMovie" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMostCollectedMoviesAsync(TraktNet.Enums.TraktTimePeriod,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktMovieFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the most collected movies.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/watched/get-the-most-collected-movies">"Trakt API Doc - Movies: Collected"</a> for more information.
            </para>
            </summary>
            <param name="period">The time period, for which the most collected movies should be queried. See also <seealso cref="T:TraktNet.Enums.TraktTimePeriod" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktMovieFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried most collected movies and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMostPWCMovie" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetMostAnticipatedMoviesAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktMovieFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the most anticipated movies.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/anticipated/get-the-most-anticipated-movies">"Trakt API Doc - Movies: Anticipated"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktMovieFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried most anticipated movies and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMostAnticipatedMovie" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetBoxOfficeMoviesAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets the top 10 box office movies.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/box-office/get-the-weekend-box-office">"Trakt API Doc - Movies: Box Office"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Movies.ITraktBoxOfficeMovie" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktMoviesModule.GetRecentlyUpdatedMoviesAsync(System.Nullable{System.DateTime},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets updated movies since the given <paramref name="startDate" />.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/movies/updates/get-recently-updated-movies">"Trakt API Doc - Movies: Updates"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The start date, after which updated movies should be queried. Will be converted to the Trakt UTC-datetime and -format.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried updated movies and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktRecentlyUpdatedMovie" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktMultipleEpisodesQueryParams">
            <summary>
            Collection containing multiple different combinations of show ids, season- and episode-numbers and extended infos.
            </summary>
            <example>
            This example shows an instantiation of this class.
            <code>
            new TraktMultipleEpisodesQueryParams
            {
                // { show-id, seasonnumber, episodenumber[, extended info] }
                { "show-id-1", 1, 1 },
                { "show-id-2", 3, 5, new TraktExtendedInfo { Full = true } },
                { "show-id-3", 2, 1 }
            };
            </code>
            </example>
        </member>
        <member name="M:TraktNet.Modules.TraktMultipleEpisodesQueryParams.Add(System.String,System.UInt32,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo)">
            <summary>Adds a new episode query parameter pack to the collection.</summary>
            <param name="showId">A Trakt show id or slug.</param>
            <param name="seasonNumber">A season number for a season in a show with the given show id.</param>
            <param name="episodeNumber">An episode number for an episode in the season with the given season number.</param>
            <param name="extendedInfo">An optional extended info. See also <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.</param>
        </member>
        <member name="T:TraktNet.Modules.TraktEpisodeQueryParams">
            <summary>
            A single query parameter for multiple episode queries.
            Contains a combination of a show id or slug, a season- and episode-number and an optional extended info.
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktEpisodeQueryParams.#ctor(System.String,System.UInt32,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Modules.TraktEpisodeQueryParams" /> class.</summary>
            <param name="showId">A Trakt show id or slug.</param>
            <param name="seasonNumber">A season number for a season in a show with the given show id.</param>
            <param name="episodeNumber">An episode number for an episode in the season with the given season number.</param>
            <param name="extendedInfo">An optional extended info. See also <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.</param>
        </member>
        <member name="P:TraktNet.Modules.TraktEpisodeQueryParams.ShowId">
            <summary>Returns the show id or slug.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktEpisodeQueryParams.Season">
            <summary>Returns the season number.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktEpisodeQueryParams.Episode">
            <summary>Returns the episode number.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktEpisodeQueryParams.ExtendedInfo">
            <summary>
            Returns the optional extended info.
            <para>Nullable.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Modules.TraktMultipleObjectsQueryParams">
            <summary>
            Collection containing multiple different combinations of ids and extended infos.
            </summary>
            <example>
            This example shows an instantiation of this class.
            <code>
            new TraktMultipleObjectsQueryParams
            {
                // { id[, extended info] }
                "id-1",
                { "id-2", new TraktExtendedInfo { Full = true } },
                "id-3"
            };
            </code>
            </example>
        </member>
        <member name="M:TraktNet.Modules.TraktMultipleObjectsQueryParams.Add(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo)">
            <summary>Adds a new object query parameter pack to the collection.</summary>
            <param name="idOrSlug">A Trakt id or slug.</param>
            <param name="extendedInfo">An optional extended info. See also <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.</param>
        </member>
        <member name="T:TraktNet.Modules.TraktObjectsQueryParams">
            <summary>
            A single query parameter for multiple object queries.
            Contains a combination of a id or slug and an optional extended info.
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktObjectsQueryParams.#ctor(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Modules.TraktSeasonsQueryParams" /> class.</summary>
            <param name="idOrSlug">A Trakt id or slug.</param>
            <param name="extendedInfo">An optional extended info. See also <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.</param>
        </member>
        <member name="P:TraktNet.Modules.TraktObjectsQueryParams.Id">
            <summary>Returns the Trakt id or slug.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktObjectsQueryParams.ExtendedInfo">
            <summary>
            Returns the optional extended info.
            <para>Nullable.</para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktMultipleQueryParams`1.Add(`0)">
            <summary>
            Generic method for adding a generic query parameter.
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:TraktNet.Modules.TraktMultipleQueryParams`1.Count">
            <summary>Gets the count of query parameters.</summary>
        </member>
        <member name="T:TraktNet.Modules.TraktMultipleSeasonsQueryParams">
            <summary>
            Collection containing multiple different combinations of show ids, season-numbers and extended infos.
            </summary>
            <example>
            This example shows an instantiation of this class.
            <code>
            new TraktMultipleSeasonsQueryParams
            {
                // { show-id, seasonnumber[, extended info][, language code] }
                { "show-id-1", 1 },
                { "show-id-1", 1, "en" },
                { "show-id-2", 3, new TraktExtendedInfo { Full = true } },
                { "show-id-2", 3, new TraktExtendedInfo { Full = true }, "en" },
                { "show-id-3", 2 }
            };
            </code>
            </example>
        </member>
        <member name="M:TraktNet.Modules.TraktMultipleSeasonsQueryParams.Add(System.String,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String)">
            <summary>Adds a new season query parameter pack to the collection.</summary>
            <param name="showId">A Trakt show id or slug.</param>
            <param name="seasonNumber">A season number for a season in a show with the given show id.</param>
            <param name="extendedInfo">An optional extended info. See also <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.</param>
            <param name="translationLanguageCode">
            An optional two letter language code to query a specific translation for the returned episodes.
            <para>Set this to "all" to get all available translations.</para>
            </param>
        </member>
        <member name="M:TraktNet.Modules.TraktMultipleSeasonsQueryParams.Add(System.String,System.UInt32,System.String)">
            <summary>Adds a new season query parameter pack to the collection.</summary>
            <param name="showId">A Trakt show id or slug.</param>
            <param name="seasonNumber">A season number for a season in a show with the given show id.</param>
            <param name="translationLanguageCode">
            An two letter language code to query a specific translation for the returned episodes.
            <para>Set this to "all" to get all available translations.</para>
            </param>
        </member>
        <member name="T:TraktNet.Modules.TraktSeasonsQueryParams">
            <summary>
            A single query parameter for multiple season queries.
            Contains a combination of a show id or slug, a season-number and an optional extended info.
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktSeasonsQueryParams.#ctor(System.String,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Modules.TraktSeasonsQueryParams" /> class.</summary>
            <param name="showId">A Trakt show id or slug.</param>
            <param name="seasonNumber">A season number for a season in a show with the given show id.</param>
            <param name="extendedInfo">An optional extended info. See also <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.</param>
            <param name="translationLanguageCode"></param>
        </member>
        <member name="P:TraktNet.Modules.TraktSeasonsQueryParams.ShowId">
            <summary>Returns the show id or slug.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktSeasonsQueryParams.Season">
            <summary>Returns the season number.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktSeasonsQueryParams.ExtendedInfo">
            <summary>
            Returns the optional extended info.
            <para>Nullable.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Modules.TraktSeasonsQueryParams.TranslationLanguageCode">
            <summary>
            Returns the optional translation language code.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Modules.TraktMultipleUserListsQueryParams">
            <summary>
            Collection containing multiple different combinations of usernames and list ids.
            </summary>
            <example>
            This example shows an instantiation of this class.
            <code>
            new TraktMultipleUserListsQueryParams
            {
                // { username, list-id }
                { "username-1", "list-id-1" },
                { "username-2", "list-id-3" },
                { "username-3", "list-id-5" }
            };
            </code>
            </example>
        </member>
        <member name="M:TraktNet.Modules.TraktMultipleUserListsQueryParams.Add(System.String,System.String)">
            <summary>Adds a new user list query parameter pack to the collection.</summary>
            <param name="usernameOrSlug">An username or slug for a Trakt user.</param>
            <param name="listIdOrSlug">A list id or slug for a list, which belongs the an user with the given username or slug.</param>
        </member>
        <member name="T:TraktNet.Modules.TraktUserListsQueryParams">
            <summary>
            A single query parameter for multiple user list queries.
            Contains a combination of an username or slug and a list id.
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktUserListsQueryParams.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Modules.TraktUserListsQueryParams" /> class.</summary>
            <param name="username">A username or slug for a Trakt user.</param>
            <param name="listIdOrSlug">A list id or slug for a list, which belongs the an user with the given username or slug.</param>
        </member>
        <member name="P:TraktNet.Modules.TraktUserListsQueryParams.Username">
            <summary>Returns the username of slug for a Trakt user.</summary>
        </member>
        <member name="P:TraktNet.Modules.TraktUserListsQueryParams.ListId">
            <summary>Returns the list id.</summary>
        </member>
        <member name="T:TraktNet.Modules.TraktNetworksModule">
            <summary>
            Provides access to data retrieving methods specific to networks.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/networks">"Trakt API Doc - Networks"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktNetworksModule.GetNetworksAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all networks.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/networks/list/get-networks">"Trakt API Doc - Networks: List"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Basic.ITraktNetwork" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktPeopleModule">
            <summary>
            Provides access to data retrieving methods specific to people.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/people">"Trakt API Doc - People"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktPeopleModule.GetPersonAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a <see cref="T:TraktNet.Objects.Get.People.ITraktPerson" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/people/summary/get-a-single-person">"Trakt API Doc - People: Summary"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktPeopleModule.GetMultiplePersonsAsync(TraktNet.Modules.TraktMultipleObjectsQueryParams,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="personIdOrSlug">The person's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPersonIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the person should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.People.ITraktPerson" /> instance with the queried person's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given personIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktPeopleModule.GetMultiplePersonsAsync(TraktNet.Modules.TraktMultipleObjectsQueryParams,System.Threading.CancellationToken)">
            <summary>
            Gets multiple different <see cref="T:TraktNet.Objects.Get.People.ITraktPerson" />s at once with the given Trakt-Ids or -Slugs.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/people/summary/get-a-single-person">"Trakt API Doc - People: Summary"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktPeopleModule.GetPersonAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="personsQueryParams">A list of person ids and optional extended infos. See also <seealso cref="T:TraktNet.Modules.TraktMultipleObjectsQueryParams" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.People.ITraktPerson" /> instances with the data of each queried person.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if one request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if one of the given person ids is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktPeopleModule.GetPersonMovieCreditsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all movies where a person with the given Trakt-Id or -Slug is in the cast or crew.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/people/summary/get-movie-credits">"Trakt API Doc - People: Movies"</a> for more information.
            </para>
            </summary>
            <param name="personIdOrSlug">The Trakt-Id or -Slug of the person, for which the movies should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCredits" /> instance with the queried person's movie credits.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given personIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktPeopleModule.GetPersonShowCreditsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all shows where a person with the given Trakt-Id or -Slug is in the cast or crew.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/people/shows/get-show-credits">"Trakt API Doc - People: Shows"</a> for more information.
            </para>
            </summary>
            <param name="personIdOrSlug">The Trakt-Id or -Slug of the person, for which the shows should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCredits" /> instance with the queried person's show credits.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given personIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktPeopleModule.GetPersonListsAsync(System.String,TraktNet.Enums.TraktListType,TraktNet.Enums.TraktListSortOrder,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets all <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />s containing a <see cref="T:TraktNet.Objects.Get.People.ITraktPerson" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/people/lists/get-lists-containing-this-person">"Trakt API Doc - People: Lists"</a> for more information.
            </para>
            </summary>
            <param name="personIdOrSlug">The person's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPersonIds" />.</param>
            <param name="listType">The type of lists, that should be queried. Defaults to personal lists.</param>
            <param name="listSortOrder">The list sort order. See also <seealso cref="T:TraktNet.Enums.TraktListSortOrder" />. Defaults to sorted by popularity.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried person lists and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given personIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktRecommendationsModule">
            <summary>
            Provides access to data retrieving methods specific to recommendations.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/recommendations">"Trakt API Doc - Recommendations"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktRecommendationsModule.GetMovieRecommendationsAsync(System.Nullable{System.UInt32},System.Nullable{System.Boolean},TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets personalized movie recommendations for an user.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/recommendations/movies/get-movie-recommendations">"Trakt API Doc - Recommendations: Movies"</a> for more information.
            </para>
            </summary>
            <param name="limit">Determines, how many movie recommendations should be queried. Maximum is 100.</param>
            <param name="ignoreCollected">Determines, if already collected movies should be filtered out.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried movies and which also
            contains the queried page number and the page's item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktRecommendationsModule.HideMovieRecommendationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Hides a movie with the given Trakt-Id or -Slug or IMDB-Id from getting recommended anymore.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/recommendations/hide-movie/hide-a-movie-recommendation">"Trakt API Doc - Recommendations: Movies"</a> for more information.
            </para>
            </summary>
            <param name="movieIdOrSlug">The Trakt-Id or -Slug or an IMDB-Id of the movie, which should be hidden from recommendations.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movieIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktRecommendationsModule.GetShowRecommendationsAsync(System.Nullable{System.UInt32},System.Nullable{System.Boolean},TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets personalized show recommendations for an user.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/recommendations/shows/get-show-recommendations">"Trakt API Doc - Recommendations: Shows"</a> for more information.
            </para>
            </summary>
            <param name="limit">Determines, how many show recommendations should be queried. Maximum is 100.</param>
            <param name="ignoreCollected">Determines, if already collected shows should be filtered out.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried shows and which also
            contains the queried page number and the page's item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktRecommendationsModule.HideShowRecommendationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Hides a show with the given Trakt-Id or -Slug or IMDB-Id from getting recommended anymore.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/recommendations/hide-show/hide-a-show-recommendation">"Trakt API Doc - Recommendations: Shows"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The Trakt-Id or -Slug or an IMDB-Id of the show, which should be hidden from recommendations.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktScrobbleModule">
            <summary>
            Provides access to data retrieving methods specific to scrobbles.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/scrobble">"Trakt API Doc - Scrobble"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.StartMovieAsync(TraktNet.Objects.Get.Movies.ITraktMovie,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Starts watching a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> in a media center.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="movie">The <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />, which will be scrobbled.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktMovieScrobblePostResponse" /> instance, containing the successfully scrobbled movie's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movie's title is null or empty. Thrown, if the given movie has no valid ids set.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given movie is null or if the given movie's ids are null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given movie's year is not valid. Thrown, if the given progress value is not between 0 and 100.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.PauseMovieAsync(TraktNet.Objects.Get.Movies.ITraktMovie,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Pauses watching a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> in a media center.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="movie">The <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />, which will be scrobbled.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktMovieScrobblePostResponse" /> instance, containing the successfully scrobbled movie's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movie's title is null or empty. Thrown, if the given movie has no valid ids set.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given movie is null or if the given movie's ids are null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given movie's year is not valid. Thrown, if the given progress value is not between 0 and 100.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.StopMovieAsync(TraktNet.Objects.Get.Movies.ITraktMovie,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Stops watching a <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" /> in a media center.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="movie">The <see cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />, which will be scrobbled.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktMovieScrobblePostResponse" /> instance, containing the successfully scrobbled movie's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given movie's title is null or empty. Thrown, if the given movie has no valid ids set.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given movie is null or if the given movie's ids are null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given movie's year is not valid. Thrown, if the given progress value is not between 0 and 100.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.StartEpisodeAsync(TraktNet.Objects.Get.Episodes.ITraktEpisode,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Starts watching a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a media center.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="episode">The <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />, which will be scrobbled.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse" /> instance, containing the successfully scrobbled episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown, if the given episode is null or if the given episode's ids are null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given episode's season number is below zero or the given episode's number is below one.
            Thrown, if the given progress value is not between 0 and 100.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.PauseEpisodeAsync(TraktNet.Objects.Get.Episodes.ITraktEpisode,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Pauses watching a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a media center.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="episode">The <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />, which will be scrobbled.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse" /> instance, containing the successfully scrobbled episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown, if the given episode is null or if the given episode's ids are null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given episode's season number is below zero or the given episode's number is below one.
            Thrown, if the given progress value is not between 0 and 100.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.StopEpisodeAsync(TraktNet.Objects.Get.Episodes.ITraktEpisode,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Stops watching a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a media center.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="episode">The <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />, which will be scrobbled.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse" /> instance, containing the successfully scrobbled episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown, if the given episode is null or if the given episode's ids are null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given episode's season number is below zero or the given episode's number is below one.
            Thrown, if the given progress value is not between 0 and 100.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.StartEpisodeWithShowAsync(TraktNet.Objects.Get.Episodes.ITraktEpisode,TraktNet.Objects.Get.Shows.ITraktShow,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Starts watching a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a media center. Use this method, if the given episode has no valid ids.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="episode">The <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />, which will be scrobbled.</param>
            <param name="show">The <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />, which will be used to scrobble the given episode.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse" /> instance, containing the successfully scrobbled episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given episode is null or if the given episode's ids are null and the given show is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if given show's title is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given episode's season number is below zero or the given episode's number is below one.
            Thrown, if the given progress value is not between 0 and 100.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.StartEpisodeWithShowAsync(System.Int32,TraktNet.Objects.Get.Shows.ITraktShow,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Starts watching a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a media center. Use this method, if the given episode has no valid ids.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="absoluteEpisodeNumber">The absolute number of the episode, which will be scrobbled.</param>
            <param name="show">The <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />, which will be used to scrobble the given episode.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse" /> instance, containing the successfully scrobbled episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given episode is null or if the given episode's ids are null and the given show is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if given show's title is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given episode's season number is below zero or the given episode's number is below one.
            Thrown, if the given progress value is not between 0 and 100.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.PauseEpisodeWithShowAsync(TraktNet.Objects.Get.Episodes.ITraktEpisode,TraktNet.Objects.Get.Shows.ITraktShow,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Pauses watching a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a media center. Use this method, if the given episode has no valid ids.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="episode">The <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />, which will be scrobbled.</param>
            <param name="show">The <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />, which will be used to scrobble the given episode.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse" /> instance, containing the successfully scrobbled episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given episode is null or if the given episode's ids are null and the given show is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if given show's title is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given episode's season number is below zero or the given episode's number is below one.
            Thrown, if the given progress value is not between 0 and 100.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.PauseEpisodeWithShowAsync(System.Int32,TraktNet.Objects.Get.Shows.ITraktShow,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Pauses watching a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a media center. Use this method, if the given episode has no valid ids.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="absoluteEpisodeNumber">The absolute number of the episode, which will be scrobbled.</param>
            <param name="show">The <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />, which will be used to scrobble the given episode.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse" /> instance, containing the successfully scrobbled episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given episode is null or if the given episode's ids are null and the given show is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if given show's title is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given episode's season number is below zero or the given episode's number is below one.
            Thrown, if the given progress value is not between 0 and 100.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.StopEpisodeWithShowAsync(TraktNet.Objects.Get.Episodes.ITraktEpisode,TraktNet.Objects.Get.Shows.ITraktShow,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Stops watching a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a media center. Use this method, if the given episode has no valid ids.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="episode">The <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />, which will be scrobbled.</param>
            <param name="show">The <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />, which will be used to scrobble the given episode.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse" /> instance, containing the successfully scrobbled episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given episode is null or if the given episode's ids are null and the given show is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if given show's title is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given episode's season number is below zero or the given episode's number is below one.
            Thrown, if the given progress value is not between 0 and 100.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktScrobbleModule.StopEpisodeWithShowAsync(System.Int32,TraktNet.Objects.Get.Shows.ITraktShow,System.Single,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Stops watching a <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> in a media center. Use this method, if the given episode has no valid ids.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/scrobble/start-watching-in-a-media-center">"Trakt API Doc - Scrobble: Start"</a> for more information.
            </para>
            </summary>
            <param name="absoluteEpisodeNumber">The absolute number of the episode, which will be scrobbled.</param>
            <param name="show">The <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />, which will be used to scrobble the given episode.</param>
            <param name="progress">The watching progress. Should be a value between 0 and 100.</param>
            <param name="appVersion">Optional application version for the scrobble.</param>
            <param name="appBuildDate">Optional application build date for the scrobble. Will be converted to the Trakt date-format.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse" /> instance, containing the successfully scrobbled episode's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given episode is null or if the given episode's ids are null and the given show is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if given show's title is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given episode's season number is below zero or the given episode's number is below one.
            Thrown, if the given progress value is not between 0 and 100.
            </exception>
        </member>
        <member name="T:TraktNet.Modules.TraktSearchModule">
            <summary>
            Provides access to data retrieving methods specific to search.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/search">"Trakt API Doc - Search"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktSearchModule.GetTextQueryResultsAsync(TraktNet.Enums.TraktSearchResultType,System.String,TraktNet.Enums.TraktSearchField,TraktNet.Requests.Parameters.Filter.ITraktSearchFilter,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Searches for movies, shows, episodes, people and / or lists with the given search query.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/search/text-query/get-text-query-results">"Trakt API Doc - Search: Text Query"</a> for more information.
            </para>
            </summary>
            <param name="searchResultTypes">
            The object type(s), for which will be searched. See also <seealso cref="T:TraktNet.Enums.TraktSearchResultType" />.
            Multiple <see cref="T:TraktNet.Enums.TraktSearchResultType" /> values can be combined with a binary operator, like this: TraktSearchResultType.Movie | TraktSearchResultType.Show.
            </param>
            <param name="searchQuery">The query, for which will be searched.</param>
            <param name="searchFields">Determines the text fields, which will be searched. See also <seealso cref="T:TraktNet.Enums.TraktSearchField" />.</param>
            <param name="filter">Optional filter for genres, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.ITraktSearchFilter" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies, shows, episodes, people and / or lists should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the found movies, shows, episodes, people and / or lists and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Basic.ITraktSearchResult" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given searchQuery is null, empty or contains spaces.
            Thrown, if the given searchResultType is unspecified.
            </exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given searchResultType is null</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSearchModule.GetIdLookupResultsAsync(TraktNet.Enums.TraktSearchIdType,System.String,TraktNet.Enums.TraktSearchResultType,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Looks up items by their Trakt-, IMDB-, TMDB-, TVDB- or TVRage-Id.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/search/text-query/get-id-lookup-results">"Trakt API Doc - Search: Id Lookup"</a> for more information.
            </para>
            </summary>
            <param name="searchIdType">The id type, which should be looked up. See also <seealso cref="T:TraktNet.Enums.TraktSearchIdType" />.</param>
            <param name="lookupId">The Trakt-, IMDB-, TMDB-, TVDB- or TVRage-Id, which will be looked up.</param>
            <param name="searchResultTypes">The object type(s), which will be looked up. See also <seealso cref="T:TraktNet.Enums.TraktSearchResultType" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the lookup object(s) should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the found movies, shows, episodes, people and / or lists and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Basic.ITraktSearchResult" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given lookupId is null, empty or contains spaces.
            Thrown, if the given searchIdType is unspecified.
            </exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given searchIdType is null.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktSeasonsModule">
            <summary>
            Provides access to data retrieving methods specific to seasons.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/seasons">"Trakt API Doc - Seasons"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktSeasonsModule.GetAllSeasonsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the <see cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />s in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/seasons/summary/get-all-seasons-for-a-show">"Trakt API Doc - Seasons: Summary"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the seasons should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="translationLanguageCode">
            An optional two letter language code to query a specific translation for the returned episodes.
            <para>Set this to "all" to get all available translations.</para>
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" /> instances with the data of each queried season.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given translationLanguageCode is shorter or longer than two characters, if it is not set to "all".
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonAsync(System.String,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />s in a single season in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/seasons/season/get-single-season-for-a-show">"Trakt API Doc - Seasons: Season"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktSeasonsModule.GetMultipleSeasonsAsync(TraktNet.Modules.TraktMultipleSeasonsQueryParams,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season, which should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the season's episodes should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="translationLanguageCode">
            An optional two letter language code to query a specific translation for the returned episodes.
            <para>Set this to "all" to get all available translations.</para>
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> instances with the data of each episode in the queried season.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown, if the given season number is below zero.
            Thrown, if the given translationLanguageCode is shorter or longer than two characters, if it is not set to "all".
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSeasonsModule.GetMultipleSeasonsAsync(TraktNet.Modules.TraktMultipleSeasonsQueryParams,System.Threading.CancellationToken)">
            <summary>
            Gets multiple different seasons at once in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/seasons/season/get-single-season-for-a-show">"Trakt API Doc - Seasons: Season"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonAsync(System.String,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="seasonsQueryParams">A list of show ids, season numbers and optional extended infos. See also <seealso cref="T:TraktNet.Modules.TraktMultipleSeasonsQueryParams" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of lists, each containing <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> instances with the data of each episode in the queried seasons.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if one request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if one of the given show ids is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if one of the given season numbers is below zero.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonCommentsAsync(System.String,System.UInt32,TraktNet.Enums.TraktCommentSortOrder,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets top level comments for a <see cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" /> in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/seasons/comments/get-all-season-comments">"Trakt API Doc - Seasons: Comments"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season, for which the comments should be queried.</param>
            <param name="commentSortOrder">The comments sort order. See also <seealso cref="T:TraktNet.Enums.TraktCommentSortOrder" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried season comments and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Basic.ITraktComment" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given season number is below zero.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonListsAsync(System.String,System.UInt32,TraktNet.Enums.TraktListType,TraktNet.Enums.TraktListSortOrder,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets all <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />s containing the given <see cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" /> in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/seasons/lists/get-lists-containing-this-season">"Trakt API Doc - Seasons: Lists"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season, for which the lists should be queried.</param>
            <param name="listType">The type of lists, that should be queried. Defaults to personal lists.</param>
            <param name="listSortOrder">The list sort order. See also <seealso cref="T:TraktNet.Enums.TraktListSortOrder" />. Defaults to sorted by popularity.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried season lists and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given season number is below zero.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonPeopleAsync(System.String,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all people for a <see cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" /> in a show with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/seasons/people/get-all-people-for-a-season">"Trakt API Doc - Seasons: People"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season, for which the people should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the people should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Shows.ITraktShowCastAndCrew" /> instance, containing the cast and crew for a season with the given showIdOrSlug and the given season number.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonRatingsAsync(System.String,System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Gets the ratings for a <see cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" /> in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/seasons/ratings/get-season-ratings">"Trakt API Doc - Seasons: Ratings"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season, for which the ratings should be queried.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktRating" /> instance, containing the ratings for a season with the given showIdOrSlug and the given season number.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given season number is below zero.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonStatisticsAsync(System.String,System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Gets the statistics for a <see cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" /> in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/seasons/stats/get-season-stats">"Trakt API Doc - Seasons: Stats"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season, for which the statistics should be queried.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktStatistics" /> instance, containing the statistics for a season with the given showIdOrSlug and the given season number.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given season number is below zero.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonWatchingUsersAsync(System.String,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all watching users of a <see cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" /> in a show with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/seasons/watching/get-users-watching-right-now">"Trakt API Doc - Seasons: Watching"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="seasonNumber">The number of the season, for which the watching users should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the users should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.ITraktUser" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given season number is below zero.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktShowsModule">
            <summary>
            Provides access to data retrieving methods specific to shows.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/shows">"Trakt API Doc - Shows"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/summary/get-a-single-show">"Trakt API Doc - Shows: Summary"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktShowsModule.GetMultipleShowsAsync(TraktNet.Modules.TraktMultipleObjectsQueryParams,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the show should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> instance with the queried show's data.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetMultipleShowsAsync(TraktNet.Modules.TraktMultipleObjectsQueryParams,System.Threading.CancellationToken)">
            <summary>
            Gets multiple different <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />s at once with the given Trakt-Ids or -Slugs.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/summary/get-a-single-show">"Trakt API Doc - Shows: Summary"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktShowsModule.GetShowAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="showsQueryParams">A list of show ids and optional extended infos. See also <seealso cref="T:TraktNet.Modules.TraktMultipleObjectsQueryParams" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> instances with the data of each queried show.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if one request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if one of the given show ids is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowAliasesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all title aliases for a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/aliases/get-all-show-aliases">"Trakt API Doc - Shows: Aliases"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Shows.ITraktShowAlias" /> instances, each containing a title and country code.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowTranslationsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all translations for a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/translations/get-all-show-translations">"Trakt API Doc - Shows: Translations"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="languageCode">An optional two letter language code to query a specific translation language.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Shows.ITraktShowTranslation" /> instances, each containing a title, overview and language code.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown, if the given languageCode is shorter or longer than two characters.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowCommentsAsync(System.String,TraktNet.Enums.TraktCommentSortOrder,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets top level comments for a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/translations/get-all-show-comments">"Trakt API Doc - Shows: Comments"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="commentSortOrder">The comments sort order. See also <seealso cref="T:TraktNet.Enums.TraktCommentSortOrder" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried show comments and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Basic.ITraktComment" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowListsAsync(System.String,TraktNet.Enums.TraktListType,TraktNet.Enums.TraktListSortOrder,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets all <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />s containing a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Show-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/lists/get-lists-containing-this-show">"Trakt API Doc - Shows: Lists"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="listType">The type of lists, that should be queried. Defaults to personal lists. See also <seealso cref="T:TraktNet.Enums.TraktListType" />. </param>
            <param name="listSortOrder">The list sort order. See also <seealso cref="T:TraktNet.Enums.TraktListSortOrder" />. Defaults to sorted by popularity.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried show lists and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowPeopleAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all people for a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/people/get-all-people-for-a-show">"Trakt API Doc - Shows: People"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the people should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Shows.ITraktShowCastAndCrew" /> instance, containing the cast and crew for a show with the given showIdOrSlug.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowRatingsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the ratings for a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/ratings/get-show-ratings">"Trakt API Doc - Shows: Ratings"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktRating" /> instance, containing the ratings for a show with the given showIdOrSlug.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowRelatedShowsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets related shows for a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/related/get-related-shows">"Trakt API Doc - Shows: Related"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried related shows and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowStatisticsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the statistics for a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/stats/get-show-stats">"Trakt API Doc - Shows: Stats"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Basic.ITraktStatistics" /> instance, containing the statistics for a show with the given showIdOrSlug.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowWatchingUsersAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all watching users of a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/watching/get-users-watching-right-now">"Trakt API Doc - Shows: Watching"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the users should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.ITraktUser" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowCollectionProgressAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},TraktNet.Enums.TraktLastActivity,System.Threading.CancellationToken)">
            <summary>
            Gets the collection progress for a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/collection-progress/get-show-collection-progress">"Trakt API Doc - Shows: Collection Progress"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="includingHiddenSeasons">Determines, if the returned collection progress should contain hidden seasons.</param>
            <param name="includingSpecialSeasons">Determines, if the returned collection progress should contain special seasons.</param>
            <param name="countSpecialSeasons">Determins, if special seasons should be counted in the statistics of the returned collection progress.</param>
            <param name="lastActivity">Determines the last activity type of the collection progress.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Shows.ITraktShowCollectionProgress" /> instance, containing the collection progress for a show with the given showIdOrSlug.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowWatchedProgressAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},TraktNet.Enums.TraktLastActivity,System.Threading.CancellationToken)">
            <summary>
            Gets the watched progress for a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/watched-progress/get-show-watched-progress">"Trakt API Doc - Shows: Watched Progress"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="includingHiddenSeasons">Determines, if the returned watched progress should contain hidden seasons.</param>
            <param name="includingSpecialSeasons">Determines, if the returned watched progress should contain special seasons.</param>
            <param name="countSpecialSeasons">Determins, if special seasons should be counted in the statistics of the returned watched progress.</param>
            <param name="lastActivity">Determines the last activity type of the watched progress.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Shows.ITraktShowWatchedProgress" /> instance, containing the watched progress for a show with the given showIdOrSlug.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowNextEpisodeAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets the next scheduled to air <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> for a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/next-episode/get-next-episode">"Trakt API Doc - Shows: Next Episode"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the episode should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> instance with the queried episode's data or null, if there is no scheduled to air episode.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetShowLastEpisodeAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets the most recently aired <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> for a <see cref="T:TraktNet.Objects.Get.Shows.ITraktShow" /> with the given Trakt-Id or -Slug.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/next-episode/get-last-episode">"Trakt API Doc - Shows: Last Episode"</a> for more information.
            </para>
            </summary>
            <param name="showIdOrSlug">The show's Trakt-Id or -Slug. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the episode should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" /> instance with the queried episode's data or null, if there is no most recently aired episode.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given showIdOrSlug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetTrendingShowsAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktShowFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets trending shows.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/trending/get-trending-shows">"Trakt API Doc - Shows: Trending"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktShowFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried trending shows and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktTrendingShow" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetPopularShowsAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktShowFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets popular shows.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/popular/get-popular-shows">"Trakt API Doc - Shows: Popular"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktShowFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried popular shows and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetMostPlayedShowsAsync(TraktNet.Enums.TraktTimePeriod,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktShowFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the most played shows.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/played/get-the-most-played-shows">"Trakt API Doc - Shows: Played"</a> for more information.
            </para>
            </summary>
            <param name="period">The time period, for which the most played shows should be queried. See also <seealso cref="T:TraktNet.Enums.TraktTimePeriod" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktShowFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried most played shows and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktMostPWCShow" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetMostWatchedShowsAsync(TraktNet.Enums.TraktTimePeriod,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktShowFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the most watched shows.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/watched/get-the-most-watched-shows">"Trakt API Doc - Shows: Watched"</a> for more information.
            </para>
            </summary>
            <param name="period">The time period, for which the most watched shows should be queried. See also <seealso cref="T:TraktNet.Enums.TraktTimePeriod" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktShowFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried most watched shows and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktMostPWCShow" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetMostCollectedShowsAsync(TraktNet.Enums.TraktTimePeriod,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktShowFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the most collected shows.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/collected/get-the-most-collected-shows">"Trakt API Doc - Shows: Collected"</a> for more information.
            </para>
            </summary>
            <param name="period">The time period, for which the most collected shows should be queried. See also <seealso cref="T:TraktNet.Enums.TraktTimePeriod" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktShowFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried most collected shows and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktMostPWCShow" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetMostAnticipatedShowsAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.Filter.ITraktShowFilter,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the most anticipated shows.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/anticipated/get-the-most-anticipated-shows">"Trakt API Doc - Shows: Anticipated"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="filter">Optional filters for genres, languages, year, runtimes, ratings, etc. See also <seealso cref="T:TraktNet.Requests.Parameters.Filter.TraktShowFilter" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried most anticipated shows and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktMostAnticipatedShow" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktShowsModule.GetRecentlyUpdatedShowsAsync(System.Nullable{System.DateTime},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets updated shows since the given <paramref name="startDate" />.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/shows/anticipated/get-recently-updated-shows">"Trakt API Doc - Shows: Updates"</a> for more information.
            </para>
            </summary>
            <param name="startDate">The start date, after which updated shows should be queried. Will be converted to the Trakt UTC-datetime and -format.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried updated shows and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktRecentlyUpdatedShow" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktSyncModule">
            <summary>
            Provides access to data retrieving methods specific to sync.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/sync">"Trakt API Doc - Sync"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.GetLastActivitiesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the user's last activities.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/last-activities/get-last-activity">"Trakt API Doc - Sync: Last Activities"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncLastActivities" /> instance with the queried last activities.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.GetPlaybackProgressAsync(TraktNet.Enums.TraktSyncType,System.Nullable{System.UInt32},System.Threading.CancellationToken)">
            <summary>
            Gets the user's saved playback progress of scrobbles that are paused.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/last-activities/get-playback-progress">"Trakt API Doc - Sync: Playback"</a> for more information.
            </para>
            </summary>
            <param name="objectType">Determines, which type of items should be queried. By default, all types will be returned. See also <seealso cref="T:TraktNet.Enums.TraktSyncType" />.</param>
            <param name="limit">Determines, how many progress items should be queried. By default, all items will be returned</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.RemovePlaybackItemAsync(System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Removes a playback progress item from the user's playback progress list.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/remove-playback/remove-a-playback-item">"Trakt API Doc - Sync: Remove Playback"</a> for more information.
            </para>
            </summary>
            <param name="playbackId">The id of the playback progress item, which should be removed.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given playback progress id is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.GetCollectionMoviesAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all collected movies in the user's collection.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/get-collection/get-collection">"Trakt API Doc - Sync: Get Collection"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the collected movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Collections.ITraktCollectionMovie" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.GetCollectionShowsAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all collected shows in the user's collection.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/get-collection/get-collection">"Trakt API Doc - Sync: Get Collection"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the collected shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Collections.ITraktCollectionShow" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.AddCollectionItemsAsync(TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost,System.Threading.CancellationToken)">
            <summary>
            Adds items to the user's collection. Accepts shows, seasons, episodes and movies.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/get-collection/add-items-to-collection">"Trakt API Doc - Sync: Add to Collection"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktSyncCollectionPostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewSyncCollectionPost" />.
            </para>
            </summary>
            <param name="collectionPost">An <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost" /> instance containing all shows, seasons, episodes and movies, which should be added.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionPostResponse" /> instance, which contains information about which items were added, updated, existing and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given collection post is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given collection post is empty.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.RemoveCollectionItemsAsync(TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost,System.Threading.CancellationToken)">
            <summary>
            Removes items from the user's collection. Accepts shows, seasons, episodes and movies.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/remove-from-collection/remove-items-from-collection">"Trakt API Doc - Sync: Remove from Collection"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktSyncCollectionPostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewSyncCollectionPost" />.
            </para>
            </summary>
            <param name="collectionRemovePost">An <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost" /> instance containing all shows, seasons, episodes and movies, which should be removed.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionRemovePostResponse" /> instance, which contains information about which items were deleted and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given collection remove post is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given collection remove post is empty.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.GetWatchedMoviesAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all movies the user has watched, sorted by most plays.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/get-watched/get-watched">"Trakt API Doc - Sync: Get Watched"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Watched.ITraktWatchedMovie" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.GetWatchedShowsAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all shows the user has watched, sorted by most plays.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/get-watched/get-watched">"Trakt API Doc - Sync: Get Watched"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Watched.ITraktWatchedShow" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.GetWatchedHistoryAsync(TraktNet.Enums.TraktSyncItemType,System.Nullable{System.UInt32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets all movies, shows, seasons and / or episodes the user has watched, sorted by most recent.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/get-history/get-watched-history">"Trakt API Doc - Sync: Get History"</a> for more information.
            </para>
            </summary>
            <param name="historyItemType">Determines, which type of history items should be queried. See also <seealso cref="T:TraktNet.Enums.TraktSyncItemType" />.</param>
            <param name="itemId">The Trakt Id for the item, which should be specifically queried. Will be ignored, if <paramref name="historyItemType" /> is not set or unspecified.</param>
            <param name="startAt">The datetime, after which history items should be queried. Will be converted to the Trakt UTC-datetime and -format.</param>
            <param name="endAt">The datetime, until which history items should be queried. Will be converted to the Trakt UTC-datetime and -format.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the history items should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried history items and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.History.ITraktHistoryItem" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.AddWatchedHistoryItemsAsync(TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPost,System.Threading.CancellationToken)">
            <summary>
            Adds items to the user's watch history. Accepts shows, seasons, episodes and movies.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/add-to-history/add-items-to-watched-history">"Trakt API Doc - Sync: Add to History"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktSyncHistoryPostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewSyncHistoryPost" />.
            </para>
            </summary>
            <param name="historyPost">An <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPost" /> instance containing all shows, seasons, episodes and movies, which should be added.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryPostResponse" /> instance, which contains information about which items were added and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given history post is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given history post is empty.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.RemoveWatchedHistoryItemsAsync(TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePost,System.Threading.CancellationToken)">
            <summary>
            Removes items from the user's watch history. Accepts shows, seasons, episodes and movies.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/remove-from-history/remove-items-from-history">"Trakt API Doc - Sync: Remove from History"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktSyncHistoryRemovePostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewSyncHistoryRemovePost" />.
            </para>
            </summary>
            <param name="historyRemovePost">An <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePost" /> instance containing all shows, seasons, episodes and movies, which should be removed.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponse" /> instance, which contains information about which items were deleted and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given history remove post is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given history remove post is empty.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.GetRatingsAsync(TraktNet.Enums.TraktRatingsItemType,System.Int32[],TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the user's ratings for movies, shows, seasons and / or episodes.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/get-ratings/get-ratings">"Trakt API Doc - Sync: Get Ratings"</a> for more information.
            </para>
            </summary>
            <param name="ratingsItemType">Determines, which type of rating items should be queried. See also <seealso cref="T:TraktNet.Enums.TraktRatingsItemType" />.</param>
            <param name="ratingsFilter">
            An array of numbers. Numbers should be between 1 and 10.
            Will be ignored, if the given array contains a number higher than 10 or below 1 or if it contains more than ten numbers.
            Will be ignored, if the given <paramref name="ratingsItemType" /> is null or unspecified.
            </param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the rating items should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Ratings.ITraktRatingsItem" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.AddRatingsAsync(TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost,System.Threading.CancellationToken)">
            <summary>
            Adds items to the user's ratings. Accepts shows, seasons, episodes and movies.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/add-ratings/add-new-ratings">"Trakt API Doc - Sync: Add Ratings"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktSyncRatingsPostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewSyncRatingsPost" />.
            </para>
            </summary>
            <param name="ratingsPost">An <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost" /> instance containing all shows, seasons, episodes and movies, which should be added.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponse" /> instance, which contains information about which items were added and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given ratings post is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given ratings post is empty.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.RemoveRatingsAsync(TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost,System.Threading.CancellationToken)">
            <summary>
            Removes items from the user's ratings. Accepts shows, seasons, episodes and movies.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/remove-ratings/remove-ratings">"Trakt API Doc - Sync: Remove Ratings"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktSyncRatingsPostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewSyncRatingsPost" />.
            </para>
            </summary>
            <param name="ratingsRemovePost">An <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost" /> instance containing all shows, seasons, episodes and movies, which should be removed.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsRemovePostResponse" /> instance, which contains information about which items were deleted and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given ratings remove post is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given ratings remove post is empty.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.GetWatchlistAsync(TraktNet.Enums.TraktSyncItemType,TraktNet.Enums.TraktWatchlistSortOrder,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the user's watchlist containing movies, shows, seasons and / or episodes.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/get-watchlist/get-watchlist">"Trakt API Doc - Sync: Get Watchlist"</a> for more information.
            </para>
            </summary>
            <param name="watchlistItemType">Determines, which type of watchlist items should be queried. See also <seealso cref="T:TraktNet.Enums.TraktSyncItemType" />.</param>
            <param name="sortOrder">Determines the sort order of the returned watchlist items. See also <seealso cref="T:TraktNet.Enums.TraktWatchlistSortOrder" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the watchlist items should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried watchlist items and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.AddWatchlistItemsAsync(TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost,System.Threading.CancellationToken)">
            <summary>
            Adds items to the user's watchlist. Accepts shows, seasons, episodes and movies.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/add-to-watchlist/add-items-to-watchlist">"Trakt API Doc - Sync: Add to Watchlist"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktSyncWatchlistPostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewSyncWatchlistPost" />.
            </para>
            </summary>
            <param name="watchlistPost">An <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost" /> instance containing all shows, seasons, episodes and movies, which should be added.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistPostResponse" /> instance, which contains information about which items were added, existing and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given watchlist post is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given watchlist post is empty.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktSyncModule.RemoveWatchlistItemsAsync(TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost,System.Threading.CancellationToken)">
            <summary>
            Removes items from the user's watchlist. Accepts shows, seasons, episodes and movies.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/sync/remove-from-watchlist/remove-items-from-watchlists">"Trakt API Doc - Sync: Remove from Watchlist"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktSyncWatchlistPostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewSyncWatchlistPost" />.
            </para>
            </summary>
            <param name="watchlistRemovePost">An <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost" /> instance containing all shows, seasons, episodes and movies, which should be removed.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistRemovePostResponse" /> instance, which contains information about which items were deleted and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given watchlist remove post is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given watchlist remove post is empty.</exception>
        </member>
        <member name="T:TraktNet.Modules.TraktUsersModule">
            <summary>
            Provides access to data retrieving methods specific to users.
            <para>
            This module contains all methods of the <a href ="http://docs.trakt.apiary.io/#reference/users">"Trakt API Doc - Users"</a> section.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetSettingsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the user's settings.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/settings/retrieve-settings">"Trakt API Doc - Users: Settings"</a> for more information.
            </para>
            </summary>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Users.ITraktUserSettings" /> instance containing the user's settings.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetFollowRequestsAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets the user's pending follow requests.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/follower-requests/get-follow-requests">"Trakt API Doc - Users: Follower Requests"</a> for more information.
            </para>
            </summary>
            <param name="extendedInfo">
            The extended info, which determines how much data about the follow request users should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.ITraktUserFollowRequest" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetHiddenItemsAsync(TraktNet.Enums.TraktHiddenItemsSection,TraktNet.Enums.TraktHiddenItemType,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the user's hidden items, like movies, shows and / or seasons.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/hidden-items/get-hidden-items">"Trakt API Doc - Users: Hidden Items"</a> for more information.
            </para>
            </summary>
            <param name="hiddenItemsSection">Determines, from which section the hidden items should be queried. See also <seealso cref="T:TraktNet.Enums.TraktHiddenItemsSection" />.</param>
            <param name="hiddenItemType">Determines, which type of hidden items should be queried. See also <seealso cref="T:TraktNet.Enums.TraktHiddenItemType" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the hidden items should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried hidden items and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserHiddenItem" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given hidden items section is unspecified.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.AddHiddenItemsAsync(TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost,TraktNet.Enums.TraktHiddenItemsSection,System.Threading.CancellationToken)">
            <summary>
            Adds items to an user's hidden list. Accepts shows, seasons and movies.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/users/add-hidden-items/add-hidden-items">"Trakt API Doc - Users: Add Hidden Items"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktUserHiddenItemsPostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewUserHiddenItemsPost" />.
            </para>
            </summary>
            <param name="hiddenItemsPost">An <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost" /> instance containing all shows, seasons and movies, which should be added.</param>
            <param name="hiddenItemsSection">Determines, which type of hidden items section should be queried. <see cref="T:TraktNet.Enums.TraktHiddenItemsSection"/></param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponse" /> instance, which contains information about which items were added and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given hidden items post is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given hidden items post is empty.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.RemoveHiddenItemsAsync(TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost,TraktNet.Enums.TraktHiddenItemsSection,System.Threading.CancellationToken)">
            <summary>
            Removes items from an user's hidden list. Accepts shows, seasons and movies.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/users/remove-hidden-items/remove-hidden-items">"Trakt API Doc - Users: Remove Hidden Items"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktUserHiddenItemsPostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewUserHiddenItemsPost" />.
            </para>
            </summary>
            <param name="hiddenItemsPost">An <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost" /> instance containing all shows, seasons and movies, which should be removed.</param>
            <param name="hiddenItemsSection">Determines, which type of hidden items section should be queried. <see cref="T:TraktNet.Enums.TraktHiddenItemsSection"/></param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsRemovePostResponse" /> instance, which contains information about which items were deleted and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given hidden items post is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given hidden items post is empty.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetLikesAsync(TraktNet.Enums.TraktUserLikeType,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the items (movies, shows, seasons, episodes, persons, comments, lists) the user likes.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/likes/get-likes">"Trakt API Doc - Users: Likes"</a> for more information.
            </para>
            </summary>
            <param name="likeType">Determines, which type of objects liked should be queried. See also <seealso cref="T:TraktNet.Enums.TraktUserLikeType" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried like items and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserLikeItem" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetUserProfileAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets an user's profile information.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/profile/get-user-profile">"Trakt API Doc - Users: Profile"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the profile should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the user's profile should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Users.ITraktUser" /> instance containing the user's profile information.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetCollectionMoviesAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all collected movies in an user's collection.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/collection/get-collection">"Trakt API Doc - Users: Collection"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the collected movies should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the collected movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Collections.ITraktCollectionMovie" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetCollectionShowsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all collected shows in an user's collection.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/collection/get-collection">"Trakt API Doc - Users: Collection"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the collected shows should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the collected shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Collections.ITraktCollectionShow" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetCommentsAsync(System.String,TraktNet.Enums.TraktCommentType,TraktNet.Enums.TraktObjectType,System.Nullable{TraktNet.Requests.Parameters.TraktIncludeReplies},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets all comments an user has posted, sorted by most recent.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/comments/get-comments">"Trakt API Doc - Users: Comments"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the comments should be queried.</param>
            <param name="commentType">Determines, which type of comments should be queried. See also <seealso cref="T:TraktNet.Enums.TraktCommentType" />.</param>
            <param name="objectType">Determines, for which object types comments should be queried. See also <seealso cref="T:TraktNet.Enums.TraktObjectType" />.</param>
            <param name="includeReplies">Determines, whether replies should be retrieved alongside with comments.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the commented objects should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried comments and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserComment" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetCustomListsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an user's custom lists.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/lists">"Trakt API Doc - Users: Lists"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the custom lists should be queried.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetCustomListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an user's single custom list.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/list/get-custom-list">"Trakt API Doc - Users: List"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktUsersModule.GetMultipleCustomListsAsync(TraktNet.Modules.TraktMultipleUserListsQueryParams,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the custom list should be queried.</param>
            <param name="listIdOrSlug">The id or slug of the custom list, which should be queried.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>Anv <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" /> instance containing the custom list informations.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given username or slug is null, empty or contains spaces.
            Thrown, if the given list id is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetMultipleCustomListsAsync(TraktNet.Modules.TraktMultipleUserListsQueryParams,System.Threading.CancellationToken)">
            <summary>
            Gets multiple different custom lists for multiple different users at once.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/list/get-custom-list">"Trakt API Doc - Users: List"</a> for more information.
            </para>
            <para>See also <seealso cref="M:TraktNet.Modules.TraktUsersModule.GetCustomListAsync(System.String,System.String,System.Threading.CancellationToken)" />.</para>
            </summary>
            <param name="userListsQueryParams">A list of usernames and list ids. See also <seealso cref="T:TraktNet.Modules.TraktMultipleUserListsQueryParams" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" /> instances with the data of each queried custom list.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if one of the given usernames is null, empty or contains spaces.
            Thrown, if one of the given list ids is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetCustomListItemsAsync(System.String,System.String,TraktNet.Enums.TraktListItemType,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets the items on an user's single custom list.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/list-items/get-items-on-a-custom-list">"Trakt API Doc - Users: List Items"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the custom list items should be queried.</param>
            <param name="listIdOrSlug">The id or slug of the custom list, for which the items should be queried.</param>
            <param name="listItemType">Determines, which type of list items should be queried. See also <seealso cref="T:TraktNet.Enums.TraktListItemType" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the list items should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktListItem" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given username or slug is null, empty or contains spaces.
            Thrown, if the given list id is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.CreateCustomListAsync(System.String,System.String,System.String,TraktNet.Enums.TraktAccessScope,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Creates a new custom list.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/lists/create-custom-list">"Trakt API Doc - Users: Lists"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the custom list should be created.</param>
            <param name="listName">The name of the newly created custom list.</param>
            <param name="listDescription">The description of the newly created custom list.</param>  
            <param name="privacy">Determines the visibility of the newly created custom list. See also <seealso cref="T:TraktNet.Enums.TraktAccessScope" />.</param>
            <param name="displayNumbers">Determines, if ranking numbers should be visible on the newly created custom list.</param>
            <param name="allowComments">Determines, if comments are allowed on the newly created custom list.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" /> instance containing information about the successfully created custom list.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given username or slug is null, empty or contains spaces.
            Thrown, if the given list name is null or empty.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.UpdateCustomListAsync(System.String,System.String,System.String,System.String,TraktNet.Enums.TraktAccessScope,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Updates an user's custom list.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/list/update-custom-list">"Trakt API Doc - Users: List"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the custom list should be updated.</param>
            <param name="listIdOrSlug">The id or slug of the custom list, which should be updated.</param>
            <param name="listName">A new name for the custom list with the given id.</param>
            <param name="listDescription">A new description for the custom list with the given id.</param>
            <param name="privacy">A new visibility setting for the custom list with the given id.</param>
            <param name="displayNumbers">A new ranking numbers visibility setting for the custom list with the given id.</param>
            <param name="allowComments">A new comments allowed setting for the custom list with the given id.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" /> instance containing information about the successfully updated custom list.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given username or slug is null, empty or contains spaces.
            Thrown, if the given list id is null, empty or contains spaces.
            Thrown, if the no new values are given (list name is null or empty and description is null and privacy is not set and
            display numbers is not set and comments allowed is not set).
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.ReorderCustomListsAsync(System.String,System.Collections.Generic.IEnumerable{System.UInt32},System.Threading.CancellationToken)">
            <summary>
            Reorders an user's custom lists.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/users/lists/reorder-a-user's-lists">"Trakt API Doc - Users: Reorder Lists"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the custom lists should be reordered.</param>
            <param name="reorderedListsRank">A collection of list ids. Represents the new order of an user's custom lists.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Users.Responses.ITraktUserCustomListsReorderPostResponse" /> instance containing information about the successfully updated custom lists order.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given <paramref name="reorderedListsRank"/> is null.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.ReorderCustomListItemsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.UInt32},System.Threading.CancellationToken)">
            <summary>
            Reorders an user's custom list items.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/users/reorder-list-items/reorder-items-on-a-list">"Trakt API Doc - Users: Reorder List Items"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the custom list items should be reordered.</param>
            <param name="listIdOrSlug">The id or slug of the list, for which the items should be reordered.</param>
            <param name="reorderedListItemsRank">A collection of list item ids. Represents the new order of an user's custom list items.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Users.Responses.ITraktUserCustomListsReorderPostResponse" /> instance containing information about the successfully updated custom list items order.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown, if the given <paramref name="reorderedListItemsRank"/> is null.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.DeleteCustomListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an user's custom list.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/list">"Trakt API Doc - Users: List"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the custom list should be deleted.</param>
            <param name="listIdOrSlug">The id or slug of the list, which should be deleted.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given username or slug is null, empty or contains spaces.
            Thrown, if the given list id is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.AddCustomListItemsAsync(System.String,System.String,TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost,System.Threading.CancellationToken)">
            <summary>
            Adds items to an user's custom list. Accepts shows, seasons, episodes, movies and people.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/list-items/add-items-to-custom-list">"Trakt API Doc - Users: List Items"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktUserCustomListItemsPostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewUserCustomListItemsPost" />.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which items should be added to a custom list.</param>
            <param name="listIdOrSlug">The id or slug of the custom list, to which items should be added.</param>
            <param name="listItemsPost">An <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost" /> instance containing all shows, seasons, episodes, movies and people, which should be added.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponse" /> instance, which contains information about which items were added, existing and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given list items post is null.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given username or slug is null, empty or contains spaces.
            Thrown, if the given list id is null, empty or contains spaces.
            Thrown, if the given list items post is empty.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.RemoveCustomListItemsAsync(System.String,System.String,TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost,System.Threading.CancellationToken)">
            <summary>
            Removes items from an user's custom list. Accepts shows, seasons, episodes, movies and people.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/remove-list-items/remove-items-from-custom-list">"Trakt API Doc - Users: Remove List Items"</a> for more information.
            </para>
            <para>
            It is recommended to use the <see cref="T:TraktNet.Objects.Post.Builder.ITraktUserCustomListItemsPostBuilder" /> to create an instance
            of the required <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost" />.
            See also <seealso cref="M:TraktNet.Objects.Post.TraktPost.NewUserCustomListItemsPost" />.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which items should be removed from a custom list.</param>
            <param name="listIdOrSlug">The id or slug of the custom list, from which items should be removed.</param>
            <param name="listItemsRemovePost">An <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost" /> instance containing all shows, seasons, episodes, movies and people, which should be removed.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponse" /> instance, which contains information about which items were deleted and not found.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the given list items remove post is null.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given username or slug is null, empty or contains spaces.
            Thrown, if the given list id is null, empty or contains spaces.
            Thrown, if the given list items remove post is empty.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetListCommentsAsync(System.String,System.String,TraktNet.Enums.TraktCommentSortOrder,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets top level comments for an user's custom list.
            <para>OAuth authorization not required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/list-comments/get-all-list-comments">"Trakt API Doc - Users: List Comments"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the custom list comments should be queried.</param>
            <param name="listIdOrSlug">The id or slug of the custom list, for which the comments should be queried.</param>
            <param name="commentSortOrder">The comments sort order. See also <seealso cref="T:TraktNet.Enums.TraktCommentSortOrder" />.</param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried custom list comments and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Basic.ITraktComment" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given username or slug is null, empty or contains spaces.
            Thrown, if the given list id is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.LikeListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Likes an user's custom list.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/list-like/like-a-list">"Trakt API Doc - Users: List Like"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the custom list should be liked.</param>
            <param name="listIdOrSlug">The id or slug of the list, which should be liked.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given username or slug is null, empty or contains spaces.
            Thrown, if the given list id is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.UnlikeListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes like on an user's custom list.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/list-like/remove-like-on-a-list">"Trakt API Doc - Users: List Like"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which a like on a custom list should be removed.</param>
            <param name="listIdOrSlug">The id or slug of the list, for which a like should be removed.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown, if the given username or slug is null, empty or contains spaces.
            Thrown, if the given list id is null, empty or contains spaces.
            </exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetFollowersAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets an user's followers.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/followers/get-followers">"Trakt API Doc - Users: Followers"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the followers should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the follower users should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.ITraktUserFollower" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetFollowingAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets users an user is following.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/following/get-following">"Trakt API Doc - Users: Following"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the following users should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the following users should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.ITraktUserFollower" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetFriendsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets an user's friends.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/friends/get-friends">"Trakt API Doc - Users: Friends"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the friends should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the friend users should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.ITraktUserFriend" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.FollowUserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a follow request for an user with the given username.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/follow/follow-this-user">"Trakt API Doc - Users: Follow"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, which should be followed.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Objects.Post.Users.Responses.ITraktUserFollowUserPostResponse" /> instance containing information whether the request was successful.
            See <see cref="P:TraktNet.Objects.Post.Users.Responses.ITraktUserFollowUserPostResponse.ApprovedAt" />.
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.UnfollowUserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends an unfollow request for an user with the given username.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/follow/unfollow-this-user">"Trakt API Doc - Users: Follow"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, which should be unfollowed.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.ApproveFollowRequestAsync(System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Approves a follower request with the given id.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/approve-or-deny-follower-requests/approve-follow-request">"Trakt API Doc - Users: Approve or Deny Follower Requests"</a> for more information.
            </para>
            </summary>
            <param name="followerRequestId">The id of the follower request, which should be approved.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Users.ITraktUserFollower" /> instance containing information about the approved user.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given follower request id is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.DenyFollowRequestAsync(System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Denies a follower request with the given id.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/approve-or-deny-follower-requests/deny-follow-request">"Trakt API Doc - Users: Approve or Deny Follower Requests"</a> for more information.
            </para>
            </summary>
            <param name="followerRequestId">The id of the follower request, which should be denied.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given follower request id is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetWatchedHistoryAsync(System.String,TraktNet.Enums.TraktSyncItemType,System.Nullable{System.UInt32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets all movies, shows, seasons and / or episodes an user has watched, sorted by most recent.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/history/get-watched-history">"Trakt API Doc - Users: History"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the watched history should be queried.</param>
            <param name="historyItemType">Determines, which type of history items should be queried. See also <seealso cref="T:TraktNet.Enums.TraktSyncItemType" />.</param>
            <param name="itemId">The Trakt Id for the item, which should be specifically queried. Will be ignored, if <paramref name="historyItemType" /> is not set or unspecified.</param>
            <param name="startAt">The datetime, after which history items should be queried. Will be converted to the Trakt UTC-datetime and -format.</param>
            <param name="endAt">The datetime, until which history items should be queried. Will be converted to the Trakt UTC-datetime and -format.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the history items should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            A <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried history items and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.History.ITraktHistoryItem" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetPersonalRecommendationsAsync(System.String,TraktNet.Enums.TraktRecommendationObjectType,TraktNet.Enums.TraktWatchlistSortOrder,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets an user's personal recommendations for movies and / or shows.
            <para>OAuth authorization required.</para>
            <para>
            See <a href="https://trakt.docs.apiary.io/#reference/users/personal-recommendations/get-personal-recommendations">"Trakt API Doc - Users: Personal Recommendations"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the recommendations should be queried.</param>
            <param name="recommendationObjectType">Determines, which type of recommendation items should be queried. See also <seealso cref="T:TraktNet.Enums.TraktRecommendationObjectType" />.</param>
            <param name="sortOrder">
            The recommendations sort order. See also <seealso cref="T:TraktNet.Enums.TraktWatchlistSortOrder" />.
            Will be ignored, if the given array contains a number higher than 10 or below 1 or if it contains more than ten numbers.
            Will be ignored, if the given <paramref name="recommendationObjectType" /> is null or unspecified.
            </param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the recommendation items should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Users.ITraktRecommendation" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetRatingsAsync(System.String,TraktNet.Enums.TraktRatingsItemType,System.Int32[],TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets an user's ratings for movies, shows, seasons and / or episodes.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/ratings/get-ratings">"Trakt API Doc - Users: Ratings"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the ratings should be queried.</param>
            <param name="ratingsItemType">Determines, which type of rating items should be queried. See also <seealso cref="T:TraktNet.Enums.TraktRatingsItemType" />.</param>
            <param name="ratingsFilter">
            An array of numbers. Numbers should be between 1 and 10.
            Will be ignored, if the given array contains a number higher than 10 or below 1 or if it contains more than ten numbers.
            Will be ignored, if the given <paramref name="ratingsItemType" /> is null or unspecified.
            </param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the rating items should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Ratings.ITraktRatingsItem" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetWatchlistAsync(System.String,TraktNet.Enums.TraktSyncItemType,TraktNet.Enums.TraktWatchlistSortOrder,TraktNet.Requests.Parameters.TraktExtendedInfo,TraktNet.Requests.Parameters.TraktPagedParameters,System.Threading.CancellationToken)">
            <summary>
            Gets all items in an user's watchlist.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/watchlist/get-watchlist">"Trakt API Doc - Users: Watchlist"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the watchlist items should be queried.</param>
            <param name="watchlistItemType">Determines, which type of items in the watchlist should be queried. See also <seealso cref="T:TraktNet.Enums.TraktSyncItemType" />.</param>
            <param name="sortOrder">Determines the sort order of the returned watchlist items. See also <seealso cref="T:TraktNet.Enums.TraktWatchlistSortOrder" />.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the watchlist items should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="pagedParameters">Specifies pagination parameters. <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>
            An <see cref="T:TraktNet.Responses.TraktPagedResponse`1"/> instance containing the queried watchlist items and which also
            contains the queried page number, the page's item count, maximum page count and maximum item count.
            <para>
            See also <seealso cref="T:TraktNet.Responses.TraktPagedResponse`1" /> and <seealso cref="T:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem" />.
            </para>
            </returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetWatchingAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets the movie or episode an user is currently watching.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/watching/get-watching">"Trakt API Doc - Users: Watching"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the currently watching item should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the currently watching item should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Users.ITraktUserWatchingItem" /> instance containing the movie or episode an user is currently watching.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetWatchedMoviesAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all movies an user has watched, sorted by most plays.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/watched/get-watched">"Trakt API Doc - Users: Watched"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the watched movies should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the watched movies should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Watched.ITraktWatchedMovie" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetWatchedShowsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)">
            <summary>
            Gets all shows an user has watched, sorted by most plays.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/watched/get-watched">"Trakt API Doc - Users: Watched"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the watched shows should be queried.</param>
            <param name="extendedInfo">
            The extended info, which determines how much data about the watched shows should be queried.
            See also <seealso cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" />.
            </param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A list of <see cref="T:TraktNet.Objects.Get.Watched.ITraktWatchedShow" /> instances.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="M:TraktNet.Modules.TraktUsersModule.GetStatisticsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets statistics about the movies, shows and episodes an user has watched.
            <para>OAuth authorization optional.</para>
            <para>
            See <a href="http://docs.trakt.apiary.io/#reference/users/stats/get-stats">"Trakt API Doc - Users: Stats"</a> for more information.
            </para>
            </summary>
            <param name="usernameOrSlug">The username or slug of the user, for which the statistics should be queried.</param>
            <param name="cancellationToken">
            Propagates notification that the request should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>An <see cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserStatistics" /> instance coontaining statistics about movies, shows and episodes.</returns>
            <exception cref="T:TraktNet.Exceptions.TraktException">Thrown, if the request fails.</exception>
            <exception cref="T:System.ArgumentException">Thrown, if the given username or slug is null, empty or contains spaces.</exception>
        </member>
        <member name="T:TraktNet.Objects.Authentication.TraktAuthorization">
            <summary>
            Represents a Trakt authorization response, which contains information, such as access token and refresh token.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktAuthorization.AccessToken">
            <summary>Gets or sets the access token.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktAuthorization.RefreshToken">
            <summary>Gets or sets the refresh token. Use this to exchange it for a new access token.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktAuthorization.Scope">
            <summary>Gets or sets the token scope. See also <seealso cref="T:TraktNet.Enums.TraktAccessScope" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktAuthorization.ExpiresInSeconds">
            <summary>Gets or sets the seconds, after which this authorization will expire.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktAuthorization.TokenType">
            <summary>Gets or sets the token type. See also <seealso cref="T:TraktNet.Enums.TraktAccessTokenType" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktAuthorization.CreatedAtTimestamp">
            <summary>Gets or sets the timestamp, when this token was created.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktAuthorization.IsExpired">
            <summary>
            Returns, whether this authorization information is expired.
            <para>
            Returns false, if <see cref="P:TraktNet.Objects.Authentication.TraktAuthorization.IsValid" /> returns false, or, if the authorization information is expired.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktAuthorization.IsValid">
            <summary>
            Returns, whether this authorization information is valid.
            <para>
            Returns false, if <see cref="P:TraktNet.Objects.Authentication.TraktAuthorization.AccessToken" /> is null, empty or contains spaces.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktAuthorization.IsRefreshPossible">
            <summary>
            Returns, whether this authorization information can be refreshed with a refresh token.
            <para>
            Returns false, if <see cref="P:TraktNet.Objects.Authentication.TraktAuthorization.RefreshToken" /> is null, empty or contains spaces.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktAuthorization.CreatedAt">
            <summary>Returns the UTC DateTime, when this authorization information was created.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktAuthorization.IgnoreExpiration">
            <summary>Gets or sets, whether token expiration should be ignored.</summary>
        </member>
        <member name="M:TraktNet.Objects.Authentication.TraktAuthorization.ToString">
            <summary>Gets a string representation of the authorization token.</summary>
            <returns>A string representation of the authorization token.</returns>
        </member>
        <member name="M:TraktNet.Objects.Authentication.TraktAuthorization.Equals(TraktNet.Objects.Authentication.ITraktAuthorization)">
            <summary>Compares this instance with another <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</summary>
            <param name="other">The other <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, with which this instance will be compared.</param>
            <returns>True, if both instances are equal, otherwise false.</returns>
        </member>
        <member name="M:TraktNet.Objects.Authentication.TraktAuthorization.CreateWith(System.String,System.String)">
            <summary>Creates a new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance with the given values.</summary>
            <param name="accessToken">The access token for the new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</param>
            <param name="refreshToken">The optional refresh token for the new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance with the given values.</returns>
        </member>
        <member name="M:TraktNet.Objects.Authentication.TraktAuthorization.CreateWith(System.UInt32,System.String,System.String)">
            <summary>Creates a new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance with the given values.</summary>
            <param name="expiresInSeconds">The seconds, after which the given access token will expire.</param>
            <param name="accessToken">The access token for the new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</param>
            <param name="refreshToken">The optional refresh token for the new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance with the given values.</returns>
        </member>
        <member name="M:TraktNet.Objects.Authentication.TraktAuthorization.CreateWith(System.DateTime,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance with the given values.
            <see cref="P:TraktNet.Objects.Authentication.TraktAuthorization.ExpiresInSeconds" /> of the created <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance will have the default
            value of 3600 * 24 * 90 seconds, equal to 90 days.
            </summary>
            <param name="createdAt">The datetime, when the given access token was created. Will be converted to UTC datetime.</param>
            <param name="accessToken">The access token for the new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</param>
            <param name="refreshToken">The optional refresh token for the new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance with the given values.</returns>
        </member>
        <member name="M:TraktNet.Objects.Authentication.TraktAuthorization.CreateWith(System.DateTime,System.UInt32,System.String,System.String)">
            <summary>Creates a new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance with the given values.</summary>
            <param name="createdAt">The datetime, when the given access token was created. Will be converted to UTC datetime.</param>
            <param name="expiresInSeconds">The seconds, after which the given access token will expire.</param>
            <param name="accessToken">The access token for the new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</param>
            <param name="refreshToken">The optional refresh token for the new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</param>
            <returns>A new <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance with the given values.</returns>
        </member>
        <member name="T:TraktNet.Objects.Authentication.TraktDevice">
            <summary>Represents a Trakt device response.</summary>
        </member>
        <member name="M:TraktNet.Objects.Authentication.TraktDevice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Objects.Authentication.TraktDevice" /> class.
            <para>
            Sets <see cref="P:TraktNet.Objects.Authentication.TraktDevice.CreatedAt" /> to the DateTime, when it is initialized.
            The instantiated device instance is invalid.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktDevice.DeviceCode">
            <summary>Gets or sets the actual device code.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktDevice.UserCode">
            <summary>Gets or sets the user code.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktDevice.VerificationUrl">
            <summary>Gets or sets the verification URL.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktDevice.ExpiresInSeconds">
            <summary>Gets or sets the seconds, after which this device will expire.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktDevice.IntervalInSeconds">
            <summary>Gets or sets the interval, at which the access token should be polled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktDevice.IntervalInMilliseconds">
            <summary>Gets the interval in milliseconds, at which the access token should be polled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktDevice.IsValid">
            <summary>
            Returns, whether this device is valid.
            <para>
            A Trakt device is valid, as long as the actual <see cref="P:TraktNet.Objects.Authentication.TraktDevice.DeviceCode" />
            is neither null nor empty and as long as this device is not expired.<para />
            See also <seealso cref="P:TraktNet.Objects.Authentication.TraktDevice.ExpiresInSeconds" />.<para />
            See also <seealso cref="P:TraktNet.Objects.Authentication.TraktDevice.IsExpiredUnused" />.<para />
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktDevice.CreatedAt">
            <summary>Gets the UTC DateTime, when this device was created.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.TraktDevice.IsExpiredUnused">
            <summary>Gets, whether this device is expired without actually using it for polling for an access token.</summary>
        </member>
        <member name="M:TraktNet.Objects.Authentication.TraktDevice.ToString">
            <summary>Gets a string representation of the device.</summary>
            <returns>A string representation of the device.</returns>
        </member>
        <member name="M:TraktNet.Objects.Authentication.TraktDevice.Equals(TraktNet.Objects.Authentication.ITraktDevice)">
            <summary>Compares this instance with another <see cref="T:TraktNet.Objects.Authentication.ITraktDevice" /> instance.</summary>
            <param name="other">The other <see cref="T:TraktNet.Objects.Authentication.ITraktDevice" /> instance, with which this instance will be compared.</param>
            <returns>True, if both instances are equal, otherwise false.</returns>
        </member>
        <member name="T:TraktNet.Objects.Authentication.ITraktAuthorization">
            <summary>
            Represents a Trakt authorization response, which contains information, such as access token and refresh token.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktAuthorization.AccessToken">
            <summary>Gets or sets the access token.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktAuthorization.RefreshToken">
            <summary>Gets or sets the refresh token. Use this to exchange it for a new access token.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktAuthorization.Scope">
            <summary>Gets or sets the token scope. See also <seealso cref="T:TraktNet.Enums.TraktAccessScope" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktAuthorization.ExpiresInSeconds">
            <summary>Gets or sets the seconds, after which this authorization will expire.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktAuthorization.TokenType">
            <summary>Gets or sets the token type. See also <seealso cref="T:TraktNet.Enums.TraktAccessTokenType" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktAuthorization.CreatedAtTimestamp">
            <summary>Gets or sets the timestamp, when this token was created.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktAuthorization.IsExpired">
            <summary>
            Returns, whether this authorization information is expired.
            <para>
            Returns false, if <see cref="P:TraktNet.Objects.Authentication.ITraktAuthorization.IsValid" /> returns false, or, if the authorization information is expired.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktAuthorization.IsValid">
            <summary>
            Returns, whether this authorization information is valid.
            <para>
            Returns false, if <see cref="P:TraktNet.Objects.Authentication.ITraktAuthorization.AccessToken" /> is null, empty or contains spaces.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktAuthorization.IsRefreshPossible">
            <summary>
            Returns, whether this authorization information can be refreshed with a refresh token.
            <para>
            Returns false, if <see cref="P:TraktNet.Objects.Authentication.ITraktAuthorization.RefreshToken" /> is null, empty or contains spaces.
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktAuthorization.CreatedAt">
            <summary>Returns the UTC DateTime, when this authorization information was created.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktAuthorization.IgnoreExpiration">
            <summary>Gets or sets, whether token expiration should be ignored.</summary>
        </member>
        <member name="M:TraktNet.Objects.Authentication.ITraktAuthorization.ToString">
            <summary>Gets a string representation of the authorization token.</summary>
            <returns>A string representation of the authorization token.</returns>
        </member>
        <member name="T:TraktNet.Objects.Authentication.ITraktDevice">
            <summary>Represents a Trakt device response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktDevice.DeviceCode">
            <summary>Gets or sets the actual device code.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktDevice.UserCode">
            <summary>Gets or sets the user code.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktDevice.VerificationUrl">
            <summary>Gets or sets the verification URL.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktDevice.ExpiresInSeconds">
            <summary>Gets or sets the seconds, after which this device will expire.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktDevice.IntervalInSeconds">
            <summary>Gets or sets the interval, at which the access token should be polled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktDevice.IntervalInMilliseconds">
            <summary>Gets the interval in milliseconds, at which the access token should be polled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktDevice.IsValid">
            <summary>
            Returns, whether this device is valid.
            <para>
            A Trakt device is valid, as long as the actual <see cref="P:TraktNet.Objects.Authentication.ITraktDevice.DeviceCode" />
            is neither null nor empty and as long as this device is not expired.<para />
            See also <seealso cref="P:TraktNet.Objects.Authentication.ITraktDevice.ExpiresInSeconds" />.<para />
            See also <seealso cref="P:TraktNet.Objects.Authentication.ITraktDevice.IsExpiredUnused" />.<para />
            </para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktDevice.CreatedAt">
            <summary>Gets the UTC DateTime, when this device was created.</summary>
        </member>
        <member name="P:TraktNet.Objects.Authentication.ITraktDevice.IsExpiredUnused">
            <summary>Gets, whether this device is expired without actually using it for polling for an access token.</summary>
        </member>
        <member name="M:TraktNet.Objects.Authentication.ITraktDevice.ToString">
            <summary>Gets a string representation of the device.</summary>
            <returns>A string representation of the device.</returns>
        </member>
        <member name="P:TraktNet.Objects.Basic.IIds.HasAnyId">
            <summary>Returns, whether any id has been set.</summary>
        </member>
        <member name="M:TraktNet.Objects.Basic.IIds.GetBestId">
            <summary>Gets the most reliable id from those that have been set.</summary>
            <returns>The id as a string or an empty string, if no id is set.</returns>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktCastAndCrew">
            <summary>Represents a collection of cast- and crew-members.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCastAndCrew.Cast">
            <summary>Gets or sets a list of cast members. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCastMember" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCastAndCrew.Crew">
            <summary>Gets or sets the crew members. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrew" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktCastMember">
            <summary>A Trakt cast member.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCastMember.Characters">
            <summary>Gets or sets the characters collection of the cast member.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCastMember.Person">
            <summary>Gets or sets the cast member. See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPerson" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktCertification">
            <summary>A Trakt certification.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCertification.Name">
            <summary>Gets or sets the certification name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCertification.Slug">
            <summary>Gets or sets the certification slug.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCertification.Description">
            <summary>Gets or sets the certification description.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktCertifications">
            <summary>Represents a collection of Trakt certifications.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCertifications.US">
            <summary>
            Gets or sets the certifications for the country code "us". See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCertification" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktComment">
            <summary>A Trakt comment or reply.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktComment.Id">
            <summary>Gets or sets the Trakt id of the comment.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktComment.ParentId">
            <summary>Gets or sets the parent comment id, if this comment is a reply.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktComment.CreatedAt">
            <summary>Gets or sets the UTC datetime, when this comment was created.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktComment.UpdatedAt">
            <summary>Gets or sets the UTC datetime, when this comment was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktComment.Comment">
            <summary>Gets or sets the comment's content.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktComment.Spoiler">
            <summary>Gets or sets, whether the comment contains spoiler.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktComment.Review">
            <summary>Gets or sets, whether the comment is a review.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktComment.Replies">
            <summary>Gets or sets the number of replies for the comment.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktComment.Likes">
            <summary>Gets or sets the number of likes for the comment.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktComment.UserRating">
            <summary>Gets or sets the user rating for the comment.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktComment.User">
            <summary>Gets or sets the user, which has written the comment. See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktCommentItem">
            <summary>Represents a Trakt comment object item.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCommentItem.Type">
            <summary>Gets or sets the object type of the comment item.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCommentItem.Movie">
            <summary>Gets or sets the comment movie item, if <see cref="P:TraktNet.Objects.Basic.TraktCommentItem.Type" /> is set to <see cref="P:TraktNet.Enums.TraktObjectType.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCommentItem.Show">
            <summary>Gets or sets the comment show item, if <see cref="P:TraktNet.Objects.Basic.TraktCommentItem.Type" /> is set to <see cref="P:TraktNet.Enums.TraktObjectType.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCommentItem.Season">
            <summary>Gets or sets the comment season item, if <see cref="P:TraktNet.Objects.Basic.TraktCommentItem.Type" /> is set to <see cref="P:TraktNet.Enums.TraktObjectType.Season" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCommentItem.Episode">
            <summary>Gets or sets the comment episode item, if <see cref="P:TraktNet.Objects.Basic.TraktCommentItem.Type" /> is set to <see cref="P:TraktNet.Enums.TraktObjectType.Episode" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCommentItem.List">
            <summary>Gets or sets the comment list item, if <see cref="P:TraktNet.Objects.Basic.TraktCommentItem.Type" /> is set to <see cref="P:TraktNet.Enums.TraktObjectType.List" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktCommentLike">
            <summary>Represents a Trakt comment like.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCommentLike.LikedAt">
            <summary>Gets or sets the UTC datetime, when the comment was liked.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCommentLike.User">
            <summary>Gets or sets the user, who liked the comment.</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktCrew">
            <summary>A collection of crew members in different categories.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrew.Production">
            <summary>
            Gets or sets a list of crew members in the production category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrew.Art">
            <summary>
            Gets or sets a list of crew members in the art category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrew.Crew">
            <summary>
            Gets or sets a list of crew members. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrew.CostumeAndMakeup">
            <summary>
            Gets or sets a list of crew members in the costume and make-up category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrew.Directing">
            <summary>
            Gets or sets a list of crew members in the directing category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrew.Writing">
            <summary>
            Gets or sets a list of crew members in the writing category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrew.Sound">
            <summary>
            Gets or sets a list of crew members in the sound category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrew.Camera">
            <summary>
            Gets or sets a list of crew members in the camera category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrew.Lighting">
            <summary>
            Gets or sets a list of crew members in the lighting category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrew.VisualEffects">
            <summary>
            Gets or sets a list of crew members in the visual effects category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrew.Editing">
            <summary>
            Gets or sets a list of crew members in the editing category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktCrewMember">
            <summary>A Trakt crew member.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrewMember.Jobs">
            <summary>Gets or sets the jobs collection of the crew member.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktCrewMember.Person">
            <summary>Gets or sets the crew member. See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPerson" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktError">
            <summary>Represents a Trakt error response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktError.Error">
            <summary>Gets or sets the error name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktError.Description">
            <summary>Gets or sets the error description.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktGenre">
            <summary>A Trakt genre.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktGenre.Name">
            <summary>Gets or sets the genre name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktGenre.Slug">
            <summary>Gets or sets the Trakt slug of the genre.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktGenre.Type">
            <summary>Gets or sets the genre type. See also <seealso cref="T:TraktNet.Enums.TraktGenreType" />.<para>Nullable</para></summary>
        </member>
        <member name="M:TraktNet.Objects.Basic.TraktGenre.ToString">
            <summary>Gets a string representation of the genre.</summary>
            <returns>A string representation of the genre.</returns>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktIds">
            <summary>A collection of ids for various web services, including the Trakt id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktIds.Slug">
            <summary>Gets or sets the Trakt slug.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktIds.Tvdb">
            <summary>Gets or sets the numeric id from thetvdb.com</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktIds.Imdb">
            <summary>Gets or sets the id from imdb.com<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktIds.Tmdb">
            <summary>Gets or sets the numeric id from themoviedb.org</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktIds.TvRage">
            <summary>Gets or sets the numeric id from tvrage.com</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktIds.HasAnyId">
            <summary>Returns, whether any id has been set.</summary>
        </member>
        <member name="M:TraktNet.Objects.Basic.TraktIds.GetBestId">
            <summary>Gets the most reliable id from those that have been set.</summary>
            <returns>The id as a string or an empty string, if no id is set.</returns>
        </member>
        <member name="M:TraktNet.Objects.Basic.TraktIds.ToString">
            <summary>Gets a string representation of the ids.</summary>
            <returns>A string representation of the ids.</returns>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktImage">
            <summary>An image for an item available in only one size.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktImage.Full">
            <summary>The address to the full size image.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktLanguage">
            <summary>A Trakt language.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktLanguage.Name">
            <summary>Gets or sets the name of the language.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktLanguage.Code">
            <summary>Gets or sets the code of the language.</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktMetadata">
            <summary>Contains metadata information for collection items.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktMetadata.MediaType">
            <summary>Gets or sets the media type. See also <seealso cref="T:TraktNet.Enums.TraktMediaType" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktMetadata.MediaResolution">
            <summary>Gets or sets the media resolution. See also <seealso cref="T:TraktNet.Enums.TraktMediaResolution" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktMetadata.Audio">
            <summary>Gets or sets the media audio type. See also <seealso cref="T:TraktNet.Enums.TraktMediaAudio" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktMetadata.AudioChannels">
            <summary>Gets or sets the media audio channels. See also <seealso cref="T:TraktNet.Enums.TraktMediaAudioChannel" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktMetadata.HDR">
            <summary>Gets or sets the media HDR support. See also <seealso cref="T:TraktNet.Enums.TraktMediaHDR" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktMetadata.ThreeDimensional">
            <summary>Gets or sets, whether the media is in 3D.</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktNetwork">
            <summary>A Trakt network.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktNetwork.Name">
            <summary>Gets or sets the network name.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktRating">
            <summary>Represents a Trakt rating.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktRating.Rating">
            <summary>Gets or sets the rating value.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktRating.Votes">
            <summary>Gets or sets the number of votes for this rating.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktRating.Distribution">
            <summary>Gets or sets the rating distribution.<para>Nullable</para></summary>
        </member>
        <member name="M:TraktNet.Objects.Basic.TraktRating.ToString">
            <summary>Gets a string representation of the rating.</summary>
            <returns>A string representation of the rating.</returns>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktSearchResult">
            <summary>A Trakt search result.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSearchResult.Type">
            <summary>Gets or sets the result type. See also <seealso cref="T:TraktNet.Enums.TraktSearchResultType" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSearchResult.Score">
            <summary>Gets or sets the result score.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSearchResult.Movie">
            <summary>
            Gets or sets the result movie, if <see cref="P:TraktNet.Objects.Basic.TraktSearchResult.Type" /> is <see cref="P:TraktNet.Enums.TraktSearchResultType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSearchResult.Show">
            <summary>
            Gets or sets the result show, if <see cref="P:TraktNet.Objects.Basic.TraktSearchResult.Type" /> is <see cref="P:TraktNet.Enums.TraktSearchResultType.Show" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSearchResult.Episode">
            <summary>
            Gets or sets the result episode, if <see cref="P:TraktNet.Objects.Basic.TraktSearchResult.Type" /> is <see cref="P:TraktNet.Enums.TraktSearchResultType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSearchResult.Person">
            <summary>
            Gets or sets the result person, if <see cref="P:TraktNet.Objects.Basic.TraktSearchResult.Type" /> is <see cref="P:TraktNet.Enums.TraktSearchResultType.Person" />.
            See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPerson" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSearchResult.List">
            <summary>
            Gets or sets the result list, if <see cref="P:TraktNet.Objects.Basic.TraktSearchResult.Type" /> is <see cref="P:TraktNet.Enums.TraktSearchResultType.List" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktSharing">
            <summary>Represents Trakt connection options.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSharing.Twitter">
            <summary>Gets or sets, whether Twitter connection is enabled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSharing.Google">
            <summary>Gets or sets, whether Google connection is enabled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSharing.Tumblr">
            <summary>Gets or sets, whether Tumblr connection is enabled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSharing.Medium">
            <summary>Gets or sets, whether Medium connection is enabled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktSharing.Slack">
            <summary>Gets or sets, whether Slack connection is enabled.</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktStatistics">
            <summary>Represents Trakt statistics.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktStatistics.Watchers">
            <summary>Gets or sets the number of watchers.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktStatistics.Plays">
            <summary>Gets or sets the number of playes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktStatistics.Collectors">
            <summary>Gets or sets the number of collectors.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktStatistics.CollectedEpisodes">
            <summary>Gets or sets the number of collected episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktStatistics.Comments">
            <summary>Gets or sets the number of comments.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktStatistics.Lists">
            <summary>Gets or sets the number of lists.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktStatistics.Votes">
            <summary>Gets or sets the number of votes.</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.TraktTranslation">
            <summary>A Trakt translation.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktTranslation.Title">
            <summary>Gets or sets the title of the translation.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktTranslation.Overview">
            <summary>Gets or sets the synopsis of the release.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.TraktTranslation.LanguageCode">
            <summary>Gets or sets the two letter language code for the translation.<para>Nullable</para></summary>
        </member>
        <member name="M:TraktNet.Objects.Basic.TraktTranslation.ToString">
            <summary>Gets a string representation of the translation.</summary>
            <returns>A string representation of the translation.</returns>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktCastAndCrew">
            <summary>Represents a collection of cast- and crew-members.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCastAndCrew.Cast">
            <summary>Gets or sets a list of cast members. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCastMember" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCastAndCrew.Crew">
            <summary>Gets or sets the crew members. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrew" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktCastMember">
            <summary>A Trakt cast member.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCastMember.Characters">
            <summary>Gets or sets the characters collection of the cast member.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCastMember.Person">
            <summary>Gets or sets the cast member. See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPerson" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktCertification">
            <summary>A Trakt certification.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCertification.Name">
            <summary>Gets or sets the certification name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCertification.Slug">
            <summary>Gets or sets the certification slug.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCertification.Description">
            <summary>Gets or sets the certification description.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktCertifications">
            <summary>Represents a collection of Trakt certifications.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCertifications.US">
            <summary>
            Gets or sets the certifications for the country code "us". See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCertification" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktComment">
            <summary>A Trakt comment or reply.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktComment.Id">
            <summary>Gets or sets the Trakt id of the comment.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktComment.ParentId">
            <summary>Gets or sets the parent comment id, if this comment is a reply.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktComment.CreatedAt">
            <summary>Gets or sets the UTC datetime, when this comment was created.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktComment.UpdatedAt">
            <summary>Gets or sets the UTC datetime, when this comment was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktComment.Comment">
            <summary>Gets or sets the comment's content.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktComment.Spoiler">
            <summary>Gets or sets, whether the comment contains spoiler.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktComment.Review">
            <summary>Gets or sets, whether the comment is a review.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktComment.Replies">
            <summary>Gets or sets the number of replies for the comment.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktComment.Likes">
            <summary>Gets or sets the number of likes for the comment.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktComment.UserRating">
            <summary>Gets or sets the user rating for the comment.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktComment.User">
            <summary>Gets or sets the user, which has written the comment. See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktCommentItem">
            <summary>Represents a Trakt comment object item.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCommentItem.Type">
            <summary>Gets or sets the object type of the comment item.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCommentItem.Movie">
            <summary>Gets or sets the comment movie item, if <see cref="P:TraktNet.Objects.Basic.ITraktCommentItem.Type" /> is set to <see cref="P:TraktNet.Enums.TraktObjectType.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCommentItem.Show">
            <summary>Gets or sets the comment show item, if <see cref="P:TraktNet.Objects.Basic.ITraktCommentItem.Type" /> is set to <see cref="P:TraktNet.Enums.TraktObjectType.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCommentItem.Season">
            <summary>Gets or sets the comment season item, if <see cref="P:TraktNet.Objects.Basic.ITraktCommentItem.Type" /> is set to <see cref="P:TraktNet.Enums.TraktObjectType.Season" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCommentItem.Episode">
            <summary>Gets or sets the comment episode item, if <see cref="P:TraktNet.Objects.Basic.ITraktCommentItem.Type" /> is set to <see cref="P:TraktNet.Enums.TraktObjectType.Episode" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCommentItem.List">
            <summary>Gets or sets the comment list item, if <see cref="P:TraktNet.Objects.Basic.ITraktCommentItem.Type" /> is set to <see cref="P:TraktNet.Enums.TraktObjectType.List" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktCommentLike">
            <summary>Represents a Trakt comment like.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCommentLike.LikedAt">
            <summary>Gets or sets the UTC datetime, when the comment was liked.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCommentLike.User">
            <summary>Gets or sets the user, who liked the comment.</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktCrew">
            <summary>A collection of crew members in different categories.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrew.Production">
            <summary>
            Gets or sets a list of crew members in the production category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrew.Art">
            <summary>
            Gets or sets a list of crew members in the art category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrew.Crew">
            <summary>
            Gets or sets a list of crew members. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrew.CostumeAndMakeup">
            <summary>
            Gets or sets a list of crew members in the costume and make-up category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrew.Directing">
            <summary>
            Gets or sets a list of crew members in the directing category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrew.Writing">
            <summary>
            Gets or sets a list of crew members in the writing category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrew.Sound">
            <summary>
            Gets or sets a list of crew members in the sound category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrew.Camera">
            <summary>
            Gets or sets a list of crew members in the camera category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrew.Lighting">
            <summary>
            Gets or sets a list of crew members in the lighting category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrew.VisualEffects">
            <summary>
            Gets or sets a list of crew members in the visual effects category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrew.Editing">
            <summary>
            Gets or sets a list of crew members in the editing category. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktCrewMember">
            <summary>A Trakt crew member.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrewMember.Jobs">
            <summary>Gets or sets the jobs collection of the crew member.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktCrewMember.Person">
            <summary>Gets or sets the crew member. See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPerson" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktError">
            <summary>Represents a Trakt error response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktError.Error">
            <summary>Gets or sets the error name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktError.Description">
            <summary>Gets or sets the error description.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktGenre">
            <summary>A Trakt genre.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktGenre.Name">
            <summary>Gets or sets the genre name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktGenre.Slug">
            <summary>Gets or sets the Trakt slug of the genre.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktGenre.Type">
            <summary>Gets or sets the genre type. See also <seealso cref="T:TraktNet.Enums.TraktGenreType" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktIds">
            <summary>A collection of ids for various web services, including the Trakt id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktIds.Slug">
            <summary>Gets or sets the Trakt slug.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktIds.Tvdb">
            <summary>Gets or sets the numeric id from thetvdb.com</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktIds.Imdb">
            <summary>Gets or sets the id from imdb.com<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktIds.Tmdb">
            <summary>Gets or sets the numeric id from themoviedb.org</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktIds.TvRage">
            <summary>Gets or sets the numeric id from tvrage.com</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktImage">
            <summary>An image for an item available in only one size.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktImage.Full">
            <summary>The address to the full size image.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktMetadata">
            <summary>Contains metadata information for collection items.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktMetadata.MediaType">
            <summary>Gets or sets the media type. See also <seealso cref="T:TraktNet.Enums.TraktMediaType" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktMetadata.MediaResolution">
            <summary>Gets or sets the media resolution. See also <seealso cref="T:TraktNet.Enums.TraktMediaResolution" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktMetadata.Audio">
            <summary>Gets or sets the media audio type. See also <seealso cref="T:TraktNet.Enums.TraktMediaAudio" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktMetadata.AudioChannels">
            <summary>Gets or sets the media audio channels. See also <seealso cref="T:TraktNet.Enums.TraktMediaAudioChannel" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktMetadata.ThreeDimensional">
            <summary>Gets or sets, whether the media is in 3D.</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktNetwork">
            <summary>A Trakt network.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktNetwork.Name">
            <summary>Gets or sets the network name.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktRating">
            <summary>Represents a Trakt rating.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktRating.Rating">
            <summary>Gets or sets the rating value.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktRating.Votes">
            <summary>Gets or sets the number of votes for this rating.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktRating.Distribution">
            <summary>Gets or sets the rating distribution.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktSearchResult">
            <summary>A Trakt search result.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSearchResult.Type">
            <summary>Gets or sets the result type. See also <seealso cref="T:TraktNet.Enums.TraktSearchResultType" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSearchResult.Score">
            <summary>Gets or sets the result score.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSearchResult.Movie">
            <summary>
            Gets or sets the result movie, if <see cref="P:TraktNet.Objects.Basic.ITraktSearchResult.Type" /> is <see cref="P:TraktNet.Enums.TraktSearchResultType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSearchResult.Show">
            <summary>
            Gets or sets the result show, if <see cref="P:TraktNet.Objects.Basic.ITraktSearchResult.Type" /> is <see cref="P:TraktNet.Enums.TraktSearchResultType.Show" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSearchResult.Episode">
            <summary>
            Gets or sets the result episode, if <see cref="P:TraktNet.Objects.Basic.ITraktSearchResult.Type" /> is <see cref="P:TraktNet.Enums.TraktSearchResultType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSearchResult.Person">
            <summary>
            Gets or sets the result person, if <see cref="P:TraktNet.Objects.Basic.ITraktSearchResult.Type" /> is <see cref="P:TraktNet.Enums.TraktSearchResultType.Person" />.
            See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPerson" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSearchResult.List">
            <summary>
            Gets or sets the result list, if <see cref="P:TraktNet.Objects.Basic.ITraktSearchResult.Type" /> is <see cref="P:TraktNet.Enums.TraktSearchResultType.List" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktSharing">
            <summary>Represents Trakt connection options.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSharing.Twitter">
            <summary>Gets or sets, whether Twitter connection is enabled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSharing.Google">
            <summary>Gets or sets, whether Google connection is enabled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSharing.Tumblr">
            <summary>Gets or sets, whether Tumblr connection is enabled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSharing.Medium">
            <summary>Gets or sets, whether Medium connection is enabled.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktSharing.Slack">
            <summary>Gets or sets, whether Slack connection is enabled.</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktStatistics">
            <summary>Represents Trakt statistics.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktStatistics.Watchers">
            <summary>Gets or sets the number of watchers.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktStatistics.Plays">
            <summary>Gets or sets the number of playes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktStatistics.Collectors">
            <summary>Gets or sets the number of collectors.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktStatistics.CollectedEpisodes">
            <summary>Gets or sets the number of collected episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktStatistics.Comments">
            <summary>Gets or sets the number of comments.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktStatistics.Lists">
            <summary>Gets or sets the number of lists.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktStatistics.Votes">
            <summary>Gets or sets the number of votes.</summary>
        </member>
        <member name="T:TraktNet.Objects.Basic.ITraktTranslation">
            <summary>A Trakt translation.</summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktTranslation.Title">
            <summary>Gets or sets the title of the translation.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktTranslation.Overview">
            <summary>Gets or sets the synopsis of the release.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Basic.ITraktTranslation.LanguageCode">
            <summary>Gets or sets the two letter language code for the translation.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Calendars.TraktCalendarMovie">
            <summary>A Trakt calendar movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.CalendarRelease">
            <summary>Gets or sets the release date of the <see cref="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Movie" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Title">
            <summary>Gets or sets the movie title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Year">
            <summary>Gets or sets the movie release year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Ids">
            <summary>
            Gets or sets the collection of ids for the movie for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Tagline">
            <summary>Gets or sets the movie tagline.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Overview">
            <summary>Gets or sets the synopsis of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Released">
            <summary>Gets or sets the UTC datetime when the movie was released.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Runtime">
            <summary>Gets or sets the runtime for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Trailer">
            <summary>Gets or sets the web address of a trailer for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Homepage">
            <summary>Gets or sets the web address of the homepage of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Rating">
            <summary>Gets or sets the average user rating of the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Votes">
            <summary>Gets or sets the number of votes for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.LanguageCode">
            <summary>Gets or sets the two letter language code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Certification">
            <summary>Gets or sets the content certification of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.CountryCode">
            <summary>Gets or sets the content country code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.CommentCount">
            <summary>Gets or sets the comment count of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarMovie.Status">
            <summary>Gets or sets the movie's current status. See also <seealso cref="T:TraktNet.Enums.TraktMovieStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Calendars.TraktCalendarShow">
            <summary>A Trakt calendar show, containing episode and show information.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.FirstAiredInCalendar">
            <summary>Gets or sets the UTC datetime, when the <see cref="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Episode" /> first aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Episode">
            <summary>Gets or sets the Trakt episode. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Title">
            <summary>Gets or sets the show title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Year">
            <summary>Gets or sets the show release year (first episode of the first season).</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Ids">
            <summary>
            Gets or sets the collection of ids for the show for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Overview">
            <summary>Gets or sets the synopsis of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.FirstAired">
            <summary>Gets or sets the UTC datetime when the first episode of the first season of the show was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Airs">
            <summary>Gets or sets the air time of the show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowAirs" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Runtime">
            <summary>Gets or sets the runtime for the show's episodes, in minutes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Certification">
            <summary>Gets or sets the content certification of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Network">
            <summary>Gets or sets the producing network name of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.CountryCode">
            <summary>Gets or sets the two letter language code for the country in which the show is produced.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Trailer">
            <summary>Gets or sets the web address of a trailer for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Homepage">
            <summary>Gets or sets the web address of the homepage of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Status">
            <summary>Gets or sets the show's current status. See also <seealso cref="T:TraktNet.Enums.TraktShowStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Rating">
            <summary>Gets or sets the average user rating of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Votes">
            <summary>Gets or sets the number of votes for the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.LanguageCode">
            <summary>Gets or sets the two letter language code of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.AiredEpisodes">
            <summary>Gets or sets the absolute number of already aired episodes in all seasons of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.Seasons">
            <summary>Gets or sets the collection of Trakt seasons for the show. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.CommentCount">
            <summary>Gets or sets the comment count of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.SeasonNumber">
            <summary>Gets or sets the season number in which the episode was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.EpisodeNumber">
            <summary>Gets or sets the episode number within the season to which it belongs.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.EpisodeTitle">
            <summary>Gets or sets the episode title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.EpisodeIds">
            <summary>
            Gets or sets the collection of ids for the episode for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.AbsoluteEpisodeNumber">
            <summary>Gets or sets the absolute episode number of all episodes in all seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.EpisodeOverview">
            <summary>Gets or sets the synopsis of the episode.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.EpisodeRuntime">
            <summary>Gets or sets the runtime of the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.EpisodeRating">
            <summary>Gets or sets the average user rating of the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.EpisodeVotes">
            <summary>Gets or sets the number of votes for the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.EpisodeAiredFirstAt">
            <summary>Gets or sets the UTC datetime when the episode was first aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.EpisodeUpdatedAt">
            <summary>Gets or sets the UTC datetime when the episode was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.AvailableEpisodeTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the episode.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.EpisodeTranslations">
            <summary>Gets or sets the list of <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeTranslation" />s for the episode.<para>Nullable</para></summary>
            <seealso cref="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Episodes" />
            <remarks>
            This property is set automatically if this episode is in a
            <see cref="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Episodes" /> collection and the episode's season
            is in a collection of seasons returned by
            <see cref="M:TraktNet.Modules.TraktSeasonsModule.GetAllSeasonsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />
            and a translation language code was specified.
            This property is also set automatically if this episode is in
            a collection returned by <see cref="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonAsync(System.String,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />
            and a translation language code was specified.
            </remarks>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.TraktCalendarShow.EpisodeCommentCount">
            <summary>Gets or sets the comment count of the episode.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.SeasonNumber">
            <summary>Gets or sets the season number in which the episode was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.EpisodeNumber">
            <summary>Gets or sets the episode number within the season to which it belongs.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.EpisodeTitle">
            <summary>Gets or sets the episode title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.EpisodeIds">
            <summary>
            Gets or sets the collection of ids for the episode for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.AbsoluteEpisodeNumber">
            <summary>Gets or sets the absolute episode number of all episodes in all seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.EpisodeOverview">
            <summary>Gets or sets the synopsis of the episode.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.EpisodeRuntime">
            <summary>Gets or sets the runtime of the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.EpisodeRating">
            <summary>Gets or sets the average user rating of the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.EpisodeVotes">
            <summary>Gets or sets the number of votes for the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.EpisodeAiredFirstAt">
            <summary>Gets or sets the UTC datetime when the episode was first aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.EpisodeUpdatedAt">
            <summary>Gets or sets the UTC datetime when the episode was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.AvailableEpisodeTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the episode.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.EpisodeTranslations">
            <summary>Gets or sets the list of <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeTranslation" />s for the episode.<para>Nullable</para></summary>
            <seealso cref="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Episodes" />
            <remarks>
            This property is set automatically if this episode is in a
            <see cref="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Episodes" /> collection and the episode's season
            is in a collection of seasons returned by
            <see cref="M:TraktNet.Modules.TraktSeasonsModule.GetAllSeasonsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />
            and a translation language code was specified.
            This property is also set automatically if this episode is in
            a collection returned by <see cref="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonAsync(System.String,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />
            and a translation language code was specified.
            </remarks>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.EpisodeCommentCount">
            <summary>Gets or sets the comment count of the episode.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie">
            <summary>A Trakt calendar movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie.CalendarRelease">
            <summary>Gets or sets the release date of the <see cref="P:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie.Movie" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Calendars.ITraktCalendarShow">
            <summary>A Trakt calendar show, containing episode and show information.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarShow.FirstAiredInCalendar">
            <summary>Gets or sets the UTC datetime, when the <see cref="P:TraktNet.Objects.Get.Calendars.ITraktCalendarShow.Episode" /> first aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Calendars.ITraktCalendarShow.Episode">
            <summary>Gets or sets the Trakt episode. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Collections.TraktCollectionMovie">
            <summary>Contains information about a collected Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.CollectedAt">
            <summary>Gets or sets the UTC datetime, when the movie was collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.UpdatedAt">
            <summary>Gets or sets the UTC datetime, when the movie was updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Movie">
            <summary>
            Gets or sets the collected Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Metadata">
            <summary>
            Gets or sets metadata about the collected movie. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktMetadata" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Title">
            <summary>Gets or sets the movie title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Year">
            <summary>Gets or sets the movie release year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Ids">
            <summary>
            Gets or sets the collection of ids for the movie for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Tagline">
            <summary>Gets or sets the movie tagline.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Overview">
            <summary>Gets or sets the synopsis of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Released">
            <summary>Gets or sets the UTC datetime when the movie was released.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Runtime">
            <summary>Gets or sets the runtime for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Trailer">
            <summary>Gets or sets the web address of a trailer for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Homepage">
            <summary>Gets or sets the web address of the homepage of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Rating">
            <summary>Gets or sets the average user rating of the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Votes">
            <summary>Gets or sets the number of votes for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.MovieUpdatedAt">
            <summary>Gets or sets the UTC datetime when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.LanguageCode">
            <summary>Gets or sets the two letter language code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Certification">
            <summary>Gets or sets the content certification of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.CountryCode">
            <summary>Gets or sets the content country code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.CommentCount">
            <summary>Gets or sets the comment count of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionMovie.Status">
            <summary>Gets or sets the movie's current status. See also <seealso cref="T:TraktNet.Enums.TraktMovieStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Collections.TraktCollectionShow">
            <summary>Contains information about a collected Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.LastCollectedAt">
            <summary>Gets or sets the UTC datetime, when the last episode was collected in the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.LastUpdatedAt">
            <summary>Gets or sets the UTC datetime, when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Show">
            <summary>
            Gets or sets the collected Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.CollectionSeasons">
            <summary>
            Gets or sets a list of collected seasons in the collected show.
            See also <seealso cref="T:TraktNet.Objects.Get.Collections.ITraktCollectionShowSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Title">
            <summary>Gets or sets the show title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Year">
            <summary>Gets or sets the show release year (first episode of the first season).</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Ids">
            <summary>
            Gets or sets the collection of ids for the show for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Overview">
            <summary>Gets or sets the synopsis of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.FirstAired">
            <summary>Gets or sets the UTC datetime when the first episode of the first season of the show was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Airs">
            <summary>Gets or sets the air time of the show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowAirs" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Runtime">
            <summary>Gets or sets the runtime for the show's episodes, in minutes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Certification">
            <summary>Gets or sets the content certification of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Network">
            <summary>Gets or sets the producing network name of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.CountryCode">
            <summary>Gets or sets the two letter language code for the country in which the show is produced.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Trailer">
            <summary>Gets or sets the web address of a trailer for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Homepage">
            <summary>Gets or sets the web address of the homepage of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Status">
            <summary>Gets or sets the show's current status. See also <seealso cref="T:TraktNet.Enums.TraktShowStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Rating">
            <summary>Gets or sets the average user rating of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Votes">
            <summary>Gets or sets the number of votes for the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.LanguageCode">
            <summary>Gets or sets the two letter language code of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.AiredEpisodes">
            <summary>Gets or sets the absolute number of already aired episodes in all seasons of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.Seasons">
            <summary>Gets or sets the collection of Trakt seasons for the show. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShow.CommentCount">
            <summary>Gets or sets the comment count of the show.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Collections.TraktCollectionShowEpisode">
            <summary>Contains information about a collected Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShowEpisode.Number">
            <summary>Gets or sets the number of the collected episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShowEpisode.CollectedAt">
            <summary>Gets or sets the UTC datetime, when the episode was collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShowEpisode.Metadata">
            <summary>
            Gets or sets metadata about the collected episode. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktMetadata" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Collections.TraktCollectionShowSeason">
            <summary>Contains information about a collected Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShowSeason.Number">
            <summary>Gets or sets the number of the collected season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.TraktCollectionShowSeason.Episodes">
            <summary>
            Gets or sets a list of collected episodes in the collected season.
            See also <seealso cref="T:TraktNet.Objects.Get.Collections.ITraktCollectionShowEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Collections.ITraktCollectionMovie">
            <summary>Contains information about a collected Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionMovie.CollectedAt">
            <summary>Gets or sets the UTC datetime, when the movie was collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionMovie.Movie">
            <summary>
            Gets or sets the collected Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionMovie.Metadata">
            <summary>
            Gets or sets metadata about the collected movie. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktMetadata" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Collections.ITraktCollectionShow">
            <summary>Contains information about a collected Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionShow.LastCollectedAt">
            <summary>Gets or sets the UTC datetime, when the last episode was collected in the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionShow.LastUpdatedAt">
            <summary>Gets or sets the UTC datetime, when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionShow.Show">
            <summary>
            Gets or sets the collected Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionShow.CollectionSeasons">
            <summary>
            Gets or sets a list of collected seasons in the collected show.
            See also <seealso cref="T:TraktNet.Objects.Get.Collections.ITraktCollectionShowSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Collections.ITraktCollectionShowEpisode">
            <summary>Contains information about a collected Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionShowEpisode.Number">
            <summary>Gets or sets the number of the collected episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionShowEpisode.CollectedAt">
            <summary>Gets or sets the UTC datetime, when the episode was collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionShowEpisode.Metadata">
            <summary>
            Gets or sets metadata about the collected episode. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktMetadata" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Collections.ITraktCollectionShowSeason">
            <summary>Contains information about a collected Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionShowSeason.Number">
            <summary>Gets or sets the number of the collected season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Collections.ITraktCollectionShowSeason.Episodes">
            <summary>
            Gets or sets a list of collected episodes in the collected season.
            See also <seealso cref="T:TraktNet.Objects.Get.Collections.ITraktCollectionShowEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.TraktEpisode">
            <summary>A Trakt episode of a Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.SeasonNumber">
            <summary>Gets or sets the season number in which the episode was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.Number">
            <summary>Gets or sets the episode number within the season to which it belongs.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.Title">
            <summary>Gets or sets the episode title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.Ids">
            <summary>
            Gets or sets the collection of ids for the episode for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.NumberAbsolute">
            <summary>Gets or sets the absolute episode number of all episodes in all seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.Overview">
            <summary>Gets or sets the synopsis of the episode.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.Runtime">
            <summary>Gets or sets the runtime of the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.Rating">
            <summary>Gets or sets the average user rating of the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.Votes">
            <summary>Gets or sets the number of votes for the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.FirstAired">
            <summary>Gets or sets the UTC datetime when the episode was first aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the episode was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the episode.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.Translations">
            <summary>Gets or sets the list of <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeTranslation" />s for the episode.<para>Nullable</para></summary>
            <seealso cref="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Episodes" />
            <remarks>
            This property is set automatically if this episode is in a
            <see cref="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Episodes" /> collection and the episode's season
            is in a collection of seasons returned by
            <see cref="M:TraktNet.Modules.TraktSeasonsModule.GetAllSeasonsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />
            and a translation language code was specified.
            This property is also set automatically if this episode is in
            a collection returned by <see cref="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonAsync(System.String,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />
            and a translation language code was specified.
            </remarks>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisode.CommentCount">
            <summary>Gets or sets the comment count of the episode.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.TraktEpisodeCollectionProgress">
            <summary>Represents the collection progress of a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisodeCollectionProgress.CollectedAt">
            <summary>Gets or sets the UTC datetime, when the episode was collected.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.TraktEpisodeIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisodeIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisodeIds.Tvdb">
            <summary>Gets or sets the numeric id from thetvdb.com</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisodeIds.Imdb">
            <summary>Gets or sets the id from imdb.com<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisodeIds.Tmdb">
            <summary>Gets or sets the numeric id from themoviedb.org</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisodeIds.TvRage">
            <summary>Gets or sets the numeric id from tvrage.com</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisodeIds.HasAnyId">
            <summary>Returns, whether any id has been set.</summary>
        </member>
        <member name="M:TraktNet.Objects.Get.Episodes.TraktEpisodeIds.GetBestId">
            <summary>Gets the most reliable id from those that have been set.</summary>
            <returns>The id as a string or an empty string, if no id is set.</returns>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.TraktEpisodeProgress">
            <summary>Represents the progress of a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisodeProgress.Number">
            <summary>Gets or sets the number of the collected or watched episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisodeProgress.Completed">
            <summary>Gets or sets, whether the episode was collected or watched.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.TraktEpisodeTranslation">
            <summary>A translation for a Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.TraktEpisodeWatchedProgress">
            <summary>Represents the watched progress of a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.TraktEpisodeWatchedProgress.LastWatchedAt">
            <summary>Gets or sets the UTC datetime, when the last watch occured.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.ITraktEpisode">
            <summary>A Trakt episode of a Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.SeasonNumber">
            <summary>Gets or sets the season number in which the episode was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.Number">
            <summary>Gets or sets the episode number within the season to which it belongs.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.Title">
            <summary>Gets or sets the episode title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.Ids">
            <summary>
            Gets or sets the collection of ids for the episode for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.NumberAbsolute">
            <summary>Gets or sets the absolute episode number of all episodes in all seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.Overview">
            <summary>Gets or sets the synopsis of the episode.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.Runtime">
            <summary>Gets or sets the runtime of the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.Rating">
            <summary>Gets or sets the average user rating of the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.Votes">
            <summary>Gets or sets the number of votes for the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.FirstAired">
            <summary>Gets or sets the UTC datetime when the episode was first aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the episode was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the episode.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.Translations">
            <summary>Gets or sets the list of <see cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeTranslation" />s for the episode.<para>Nullable</para></summary>
            <seealso cref="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Episodes" />
            <remarks>
            This property is set automatically if this episode is in a
            <see cref="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Episodes" /> collection and the episode's season
            is in a collection of seasons returned by
            <see cref="M:TraktNet.Modules.TraktSeasonsModule.GetAllSeasonsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />
            and a translation language code was specified.
            This property is also set automatically if this episode is in
            a collection returned by <see cref="M:TraktNet.Modules.TraktSeasonsModule.GetSeasonAsync(System.String,System.UInt32,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />
            and a translation language code was specified.
            </remarks>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisode.CommentCount">
            <summary>Gets or sets the comment count of the episode.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeCollectionProgress">
            <summary>Represents the collection progress of a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisodeCollectionProgress.CollectedAt">
            <summary>Gets or sets the UTC datetime, when the episode was collected.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds.Tvdb">
            <summary>Gets or sets the numeric id from thetvdb.com</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds.Imdb">
            <summary>Gets or sets the id from imdb.com<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds.Tmdb">
            <summary>Gets or sets the numeric id from themoviedb.org</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds.TvRage">
            <summary>Gets or sets the numeric id from tvrage.com</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeProgress">
            <summary>Represents the progress of a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisodeProgress.Number">
            <summary>Gets or sets the number of the collected or watched episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisodeProgress.Completed">
            <summary>Gets or sets, whether the episode was collected or watched.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeTranslation">
            <summary>A translation for a Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeWatchedProgress">
            <summary>Represents the watched progress of a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Episodes.ITraktEpisodeWatchedProgress.LastWatchedAt">
            <summary>Gets or sets the UTC datetime, when the last watch occured.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.History.TraktHistoryItem">
            <summary>A Trakt history item, containing a movie, show, season and / or episode and information about it.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.TraktHistoryItem.Id">
            <summary>Gets or sets the id of this history item.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.TraktHistoryItem.WatchedAt">
            <summary>Gets or sets the UTC datetime, when the movie, show, season and / or episode was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.TraktHistoryItem.Action">
            <summary>
            Gets or sets the type of action. See also <seealso cref="T:TraktNet.Enums.TraktHistoryActionType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.TraktHistoryItem.Type">
            <summary>
            Gets or sets the object type, which this history item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktSyncItemType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.TraktHistoryItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.History.TraktHistoryItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.TraktHistoryItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.History.TraktHistoryItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Show" />.
            May also be set, if <see cref="P:TraktNet.Objects.Get.History.TraktHistoryItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Episode" /> or
            <see cref="P:TraktNet.Enums.TraktSyncItemType.Season" />.
            <para>See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.</para>
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.TraktHistoryItem.Season">
            <summary>
            Gets or sets the season, if <see cref="P:TraktNet.Objects.Get.History.TraktHistoryItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Season" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.TraktHistoryItem.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.History.TraktHistoryItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.History.ITraktHistoryItem">
            <summary>A Trakt history item, containing a movie, show, season and / or episode and information about it.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Id">
            <summary>Gets or sets the id of this history item.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.ITraktHistoryItem.WatchedAt">
            <summary>Gets or sets the UTC datetime, when the movie, show, season and / or episode was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Action">
            <summary>
            Gets or sets the type of action. See also <seealso cref="T:TraktNet.Enums.TraktHistoryActionType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Type">
            <summary>
            Gets or sets the object type, which this history item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktSyncItemType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Show" />.
            May also be set, if <see cref="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Episode" /> or
            <see cref="P:TraktNet.Enums.TraktSyncItemType.Season" />.
            <para>See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.</para>
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Season">
            <summary>
            Gets or sets the season, if <see cref="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Season" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.History.ITraktHistoryItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie">
            <summary>A Trakt box office movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Revenue">
            <summary>Gets or sets the revenue of the <see cref="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Title">
            <summary>Gets or sets the movie title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Year">
            <summary>Gets or sets the movie release year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Ids">
            <summary>
            Gets or sets the collection of ids for the movie for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Tagline">
            <summary>Gets or sets the movie tagline.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Overview">
            <summary>Gets or sets the synopsis of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Released">
            <summary>Gets or sets the UTC datetime when the movie was released.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Runtime">
            <summary>Gets or sets the runtime for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Trailer">
            <summary>Gets or sets the web address of a trailer for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Homepage">
            <summary>Gets or sets the web address of the homepage of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Rating">
            <summary>Gets or sets the average user rating of the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Votes">
            <summary>Gets or sets the number of votes for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.LanguageCode">
            <summary>Gets or sets the two letter language code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Certification">
            <summary>Gets or sets the content certification of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.CountryCode">
            <summary>Gets or sets the content country code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.CommentCount">
            <summary>Gets or sets the comment count of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.Status">
            <summary>Gets or sets the movie's current status. See also <seealso cref="T:TraktNet.Enums.TraktMovieStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie">
            <summary>A anticipated Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.ListCount">
            <summary>Gets or sets the list count for the <see cref="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Title">
            <summary>Gets or sets the movie title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Year">
            <summary>Gets or sets the movie release year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Ids">
            <summary>
            Gets or sets the collection of ids for the movie for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Tagline">
            <summary>Gets or sets the movie tagline.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Overview">
            <summary>Gets or sets the synopsis of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Released">
            <summary>Gets or sets the UTC datetime when the movie was released.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Runtime">
            <summary>Gets or sets the runtime for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Trailer">
            <summary>Gets or sets the web address of a trailer for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Homepage">
            <summary>Gets or sets the web address of the homepage of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Rating">
            <summary>Gets or sets the average user rating of the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Votes">
            <summary>Gets or sets the number of votes for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.LanguageCode">
            <summary>Gets or sets the two letter language code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Certification">
            <summary>Gets or sets the content certification of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.CountryCode">
            <summary>Gets or sets the content country code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.CommentCount">
            <summary>Gets or sets the comment count of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.Status">
            <summary>Gets or sets the movie's current status. See also <seealso cref="T:TraktNet.Enums.TraktMovieStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.TraktMostPWCMovie">
            <summary>A played Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.WatcherCount">
            <summary>Gets or sets the watcher count for the <see cref="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.PlayCount">
            <summary>Gets or sets the play count for the <see cref="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.CollectedCount">
            <summary>Gets or sets the collected count for the <see cref="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Title">
            <summary>Gets or sets the movie title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Year">
            <summary>Gets or sets the movie release year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Ids">
            <summary>
            Gets or sets the collection of ids for the movie for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Tagline">
            <summary>Gets or sets the movie tagline.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Overview">
            <summary>Gets or sets the synopsis of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Released">
            <summary>Gets or sets the UTC datetime when the movie was released.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Runtime">
            <summary>Gets or sets the runtime for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Trailer">
            <summary>Gets or sets the web address of a trailer for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Homepage">
            <summary>Gets or sets the web address of the homepage of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Rating">
            <summary>Gets or sets the average user rating of the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Votes">
            <summary>Gets or sets the number of votes for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.LanguageCode">
            <summary>Gets or sets the two letter language code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Certification">
            <summary>Gets or sets the content certification of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.CountryCode">
            <summary>Gets or sets the content country code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.CommentCount">
            <summary>Gets or sets the comment count of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMostPWCMovie.Status">
            <summary>Gets or sets the movie's current status. See also <seealso cref="T:TraktNet.Enums.TraktMovieStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.TraktMovie">
            <summary>A Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Title">
            <summary>Gets or sets the movie title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Year">
            <summary>Gets or sets the movie release year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Ids">
            <summary>
            Gets or sets the collection of ids for the movie for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Tagline">
            <summary>Gets or sets the movie tagline.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Overview">
            <summary>Gets or sets the synopsis of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Released">
            <summary>Gets or sets the UTC datetime when the movie was released.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Runtime">
            <summary>Gets or sets the runtime for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Trailer">
            <summary>Gets or sets the web address of a trailer for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Homepage">
            <summary>Gets or sets the web address of the homepage of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Rating">
            <summary>Gets or sets the average user rating of the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Votes">
            <summary>Gets or sets the number of votes for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.LanguageCode">
            <summary>Gets or sets the two letter language code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Certification">
            <summary>Gets or sets the content certification of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.CountryCode">
            <summary>Gets or sets the content country code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.CommentCount">
            <summary>Gets or sets the comment count of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovie.Status">
            <summary>Gets or sets the movie's current status. See also <seealso cref="T:TraktNet.Enums.TraktMovieStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.TraktMovieAlias">
            <summary>An alias for a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieAlias.Title">
            <summary>Gets or sets the title of the movie alias.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieAlias.CountryCode">
            <summary>Gets or sets the two letter country code for the movie alias.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.TraktMovieIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieIds.Slug">
            <summary>Gets or sets the Trakt slug.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieIds.Imdb">
            <summary>Gets or sets the id from imdb.com<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieIds.Tmdb">
            <summary>Gets or sets the numeric id from themoviedb.org</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieIds.HasAnyId">
            <summary>Returns, whether any id has been set.</summary>
        </member>
        <member name="M:TraktNet.Objects.Get.Movies.TraktMovieIds.GetBestId">
            <summary>Gets the most reliable id from those that have been set.</summary>
            <returns>The id as a string or an empty string, if no id is set.</returns>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.TraktMovieRelease">
            <summary>A release of a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieRelease.CountryCode">
            <summary>Gets or sets the two letter country code for the movie release.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieRelease.Certification">
            <summary>Gets or sets the content certification for the movie release.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieRelease.ReleaseDate">
            <summary>Gets or sets the release date of the movie release.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieRelease.ReleaseType">
            <summary>
            Gets or sets the release type for the movie release.
            See also <seealso cref="T:TraktNet.Enums.TraktReleaseType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieRelease.Note">
            <summary>Gets or sets a note for the movie release.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.TraktMovieTranslation">
            <summary>A translation for a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktMovieTranslation.Tagline">
            <summary>Gets or sets the tagline for the release.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie">
            <summary>An updated Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.RecentlyUpdatedAt">
            <summary>Gets or sets the UTC datetime, when the <see cref="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Movie" /> was updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Title">
            <summary>Gets or sets the movie title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Year">
            <summary>Gets or sets the movie release year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Ids">
            <summary>
            Gets or sets the collection of ids for the movie for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Tagline">
            <summary>Gets or sets the movie tagline.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Overview">
            <summary>Gets or sets the synopsis of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Released">
            <summary>Gets or sets the UTC datetime when the movie was released.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Runtime">
            <summary>Gets or sets the runtime for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Trailer">
            <summary>Gets or sets the web address of a trailer for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Homepage">
            <summary>Gets or sets the web address of the homepage of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Rating">
            <summary>Gets or sets the average user rating of the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Votes">
            <summary>Gets or sets the number of votes for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.LanguageCode">
            <summary>Gets or sets the two letter language code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Certification">
            <summary>Gets or sets the content certification of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.CountryCode">
            <summary>Gets or sets the content country code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.CommentCount">
            <summary>Gets or sets the comment count of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.Status">
            <summary>Gets or sets the movie's current status. See also <seealso cref="T:TraktNet.Enums.TraktMovieStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.TraktTrendingMovie">
            <summary>A trending Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Watchers">
            <summary>Gets or sets the watcher count for the <see cref="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Title">
            <summary>Gets or sets the movie title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Year">
            <summary>Gets or sets the movie release year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Ids">
            <summary>
            Gets or sets the collection of ids for the movie for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Tagline">
            <summary>Gets or sets the movie tagline.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Overview">
            <summary>Gets or sets the synopsis of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Released">
            <summary>Gets or sets the UTC datetime when the movie was released.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Runtime">
            <summary>Gets or sets the runtime for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Trailer">
            <summary>Gets or sets the web address of a trailer for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Homepage">
            <summary>Gets or sets the web address of the homepage of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Rating">
            <summary>Gets or sets the average user rating of the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Votes">
            <summary>Gets or sets the number of votes for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.LanguageCode">
            <summary>Gets or sets the two letter language code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Certification">
            <summary>Gets or sets the content certification of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.CountryCode">
            <summary>Gets or sets the content country code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.CommentCount">
            <summary>Gets or sets the comment count of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.TraktTrendingMovie.Status">
            <summary>Gets or sets the movie's current status. See also <seealso cref="T:TraktNet.Enums.TraktMovieStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.ITraktBoxOfficeMovie">
            <summary>A Trakt box office movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktBoxOfficeMovie.Revenue">
            <summary>Gets or sets the revenue of the <see cref="P:TraktNet.Objects.Get.Movies.ITraktBoxOfficeMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktBoxOfficeMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.ITraktMostAnticipatedMovie">
            <summary>A anticipated Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMostAnticipatedMovie.ListCount">
            <summary>Gets or sets the list count for the <see cref="P:TraktNet.Objects.Get.Movies.ITraktMostAnticipatedMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMostAnticipatedMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.ITraktMostPWCMovie">
            <summary>A played Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMostPWCMovie.WatcherCount">
            <summary>Gets or sets the watcher count for the <see cref="P:TraktNet.Objects.Get.Movies.ITraktMostPWCMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMostPWCMovie.PlayCount">
            <summary>Gets or sets the play count for the <see cref="P:TraktNet.Objects.Get.Movies.ITraktMostPWCMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMostPWCMovie.CollectedCount">
            <summary>Gets or sets the collected count for the <see cref="P:TraktNet.Objects.Get.Movies.ITraktMostPWCMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMostPWCMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.ITraktMovie">
            <summary>A Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Title">
            <summary>Gets or sets the movie title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Year">
            <summary>Gets or sets the movie release year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Ids">
            <summary>
            Gets or sets the collection of ids for the movie for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Tagline">
            <summary>Gets or sets the movie tagline.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Overview">
            <summary>Gets or sets the synopsis of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Released">
            <summary>Gets or sets the UTC datetime when the movie was released.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Runtime">
            <summary>Gets or sets the runtime for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Trailer">
            <summary>Gets or sets the web address of a trailer for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Homepage">
            <summary>Gets or sets the web address of the homepage of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Rating">
            <summary>Gets or sets the average user rating of the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Votes">
            <summary>Gets or sets the number of votes for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.LanguageCode">
            <summary>Gets or sets the two letter language code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Certification">
            <summary>Gets or sets the content certification of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.CountryCode">
            <summary>Gets or sets the content country code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.CommentCount">
            <summary>Gets or sets the comment count of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovie.Status">
            <summary>Gets or sets the movie's current status. See also <seealso cref="T:TraktNet.Enums.TraktMovieStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.ITraktMovieAlias">
            <summary>An alias for a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieAlias.Title">
            <summary>Gets or sets the title of the movie alias.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieAlias.CountryCode">
            <summary>Gets or sets the two letter country code for the movie alias.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.ITraktMovieIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieIds.Slug">
            <summary>Gets or sets the Trakt slug.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieIds.Imdb">
            <summary>Gets or sets the id from imdb.com<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieIds.Tmdb">
            <summary>Gets or sets the numeric id from themoviedb.org</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.ITraktMovieRelease">
            <summary>A release of a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieRelease.CountryCode">
            <summary>Gets or sets the two letter country code for the movie release.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieRelease.Certification">
            <summary>Gets or sets the content certification for the movie release.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieRelease.ReleaseDate">
            <summary>Gets or sets the release date of the movie release.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieRelease.ReleaseType">
            <summary>
            Gets or sets the release type for the movie release.
            See also <seealso cref="T:TraktNet.Enums.TraktReleaseType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieRelease.Note">
            <summary>Gets or sets a note for the movie release.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.ITraktMovieTranslation">
            <summary>A translation for a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktMovieTranslation.Tagline">
            <summary>Gets or sets the tagline for the release.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.ITraktRecentlyUpdatedMovie">
            <summary>An updated Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktRecentlyUpdatedMovie.RecentlyUpdatedAt">
            <summary>Gets or sets the UTC datetime, when the <see cref="P:TraktNet.Objects.Get.Movies.ITraktRecentlyUpdatedMovie.Movie" /> was updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktRecentlyUpdatedMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Movies.ITraktTrendingMovie">
            <summary>A trending Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktTrendingMovie.Watchers">
            <summary>Gets or sets the watcher count for the <see cref="P:TraktNet.Objects.Get.Movies.ITraktTrendingMovie.Movie" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Movies.ITraktTrendingMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCredits">
            <summary>Contains all Trakt movies where a Trakt person is in the cast or crew.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCredits.Cast">
            <summary>
            Gets or sets a list of cast positions, in which a person is.
            See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCastItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCredits.Crew">
            <summary>
            Gets or sets a collection of crew positions, which a person has.
            See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCastItem">
            <summary>Contains information about a Trakt person's cast position.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCastItem.Characters">
            <summary>Gets or sets the characters collection of the cast position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCastItem.Movie">
            <summary>
            Gets or sets the movie of the cast position. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew">
            <summary>A collection of crew positions in different categories, which a Trakt person has.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.Production">
            <summary>
            Gets or sets a list of crew positions in the production category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.Art">
            <summary>
            Gets or sets a list of crew positions in the art category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.Crew">
            <summary>
            Gets or sets a list of crew positions. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.CostumeAndMakeup">
            <summary>
            Gets or sets a list of crew positions in the costume and make-up category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.Directing">
            <summary>
            Gets or sets a list of crew positions in the directing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.Writing">
            <summary>
            Gets or sets a list of crew positions in the writing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.Sound">
            <summary>
            Gets or sets a list of crew positions in the sound category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.Camera">
            <summary>
            Gets or sets a list of crew positions in the camera category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.Lighting">
            <summary>
            Gets or sets a list of crew positions in the lighting category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.VisualEffects">
            <summary>
            Gets or sets a list of crew positions in the visual effects category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.Editing">
            <summary>
            Gets or sets a list of crew positions in the editing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrewItem">
            <summary>Contains information about a Trakt person's crew position.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrewItem.Jobs">
            <summary>Gets or sets the jobs collection of the crew position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrewItem.Movie">
            <summary>
            Gets or sets the movie of the crew position. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.TraktPersonShowCredits">
            <summary>Contains all Trakt shows where a Trakt person is in the cast or crew.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCredits.Cast">
            <summary>
            Gets or sets a list of cast positions, in which a person is.
            See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCastItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCredits.Crew">
            <summary>
            Gets or sets a collection of crew positions, which a person has.
            See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCastItem">
            <summary>Contains information about a Trakt person's cast position.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCastItem.Characters">
            <summary>Gets or sets the characters collection of the cast position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCastItem.EpisodeCount">
            <summary>Gets or sets the episode count of the cast position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCastItem.SeriesRegular">
            <summary>Gets or sets the series regular value of the cast position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCastItem.Show">
            <summary>
            Gets or sets the show of the cast position. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew">
            <summary>A collection of crew positions in different categories, which a Trakt person has.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.Production">
            <summary>
            Gets or sets a list of crew positions in the production category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.Art">
            <summary>
            Gets or sets a list of crew positions in the art category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.Crew">
            <summary>
            Gets or sets a list of crew positions. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.CostumeAndMakeup">
            <summary>
            Gets or sets a list of crew positions in the costume and make-up category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.Directing">
            <summary>
            Gets or sets a list of crew positions in the directing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.Writing">
            <summary>
            Gets or sets a list of crew positions in the writing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.Sound">
            <summary>
            Gets or sets a list of crew positions in the sound category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.Camera">
            <summary>
            Gets or sets a list of crew positions in the camera category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.Lighting">
            <summary>
            Gets or sets a list of crew positions in the lighting category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.VisualEffects">
            <summary>
            Gets or sets a list of crew positions in the visual effects category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.Editing">
            <summary>
            Gets or sets a list of crew positions in the editing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrewItem">
            <summary>Contains information about a Trakt person's crew position.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrewItem.Jobs">
            <summary>Gets or sets the jobs collection of the crew position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrewItem.EpisodeCount">
            <summary>Gets or sets the episode count of the crew position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrewItem.Show">
            <summary>
            Gets or sets the show of the crew position. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCredits">
            <summary>Contains all Trakt movies where a Trakt person is in the cast or crew.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCredits.Cast">
            <summary>
            Gets or sets a list of cast positions, in which a person is.
            See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCastItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCredits.Crew">
            <summary>
            Gets or sets a collection of crew positions, which a person has.
            See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCastItem">
            <summary>Contains information about a Trakt person's cast position.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCastItem.Characters">
            <summary>Gets or sets the characters collection of the cast position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCastItem.Movie">
            <summary>
            Gets or sets the movie of the cast position. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew">
            <summary>A collection of crew positions in different categories, which a Trakt person has.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.Production">
            <summary>
            Gets or sets a list of crew positions in the production category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.Art">
            <summary>
            Gets or sets a list of crew positions in the art category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.Crew">
            <summary>
            Gets or sets a list of crew positions. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.CostumeAndMakeup">
            <summary>
            Gets or sets a list of crew positions in the costume and make-up category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.Directing">
            <summary>
            Gets or sets a list of crew positions in the directing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.Writing">
            <summary>
            Gets or sets a list of crew positions in the writing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.Sound">
            <summary>
            Gets or sets a list of crew positions in the sound category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.Camera">
            <summary>
            Gets or sets a list of crew positions in the camera category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.Lighting">
            <summary>
            Gets or sets a list of crew positions in the lighting category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.VisualEffects">
            <summary>
            Gets or sets a list of crew positions in the visual effects category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.Editing">
            <summary>
            Gets or sets a list of crew positions in the editing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem">
            <summary>Contains information about a Trakt person's crew position.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem.Jobs">
            <summary>Gets or sets the jobs collection of the crew position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem.Movie">
            <summary>
            Gets or sets the movie of the crew position. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCredits">
            <summary>Contains all Trakt shows where a Trakt person is in the cast or crew.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCredits.Cast">
            <summary>
            Gets or sets a list of cast positions, in which a person is.
            See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCastItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCredits.Crew">
            <summary>
            Gets or sets a collection of crew positions, which a person has.
            See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCastItem">
            <summary>Contains information about a Trakt person's cast position.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCastItem.Characters">
            <summary>Gets or sets the characters collection of the cast position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCastItem.EpisodeCount">
            <summary>Gets or sets the episode count of the cast position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCastItem.SeriesRegular">
            <summary>Gets or sets the series regular value of the cast position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCastItem.Show">
            <summary>
            Gets or sets the show of the cast position. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew">
            <summary>A collection of crew positions in different categories, which a Trakt person has.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.Production">
            <summary>
            Gets or sets a list of crew positions in the production category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.Art">
            <summary>
            Gets or sets a list of crew positions in the art category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.Crew">
            <summary>
            Gets or sets a list of crew positions. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.CostumeAndMakeup">
            <summary>
            Gets or sets a list of crew positions in the costume and make-up category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.Directing">
            <summary>
            Gets or sets a list of crew positions in the directing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.Writing">
            <summary>
            Gets or sets a list of crew positions in the writing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.Sound">
            <summary>
            Gets or sets a list of crew positions in the sound category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.Camera">
            <summary>
            Gets or sets a list of crew positions in the camera category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.Lighting">
            <summary>
            Gets or sets a list of crew positions in the lighting category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.VisualEffects">
            <summary>
            Gets or sets a list of crew positions in the visual effects category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.Editing">
            <summary>
            Gets or sets a list of crew positions in the editing category. See also <seealso cref="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem">
            <summary>Contains information about a Trakt person's crew position.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem.Jobs">
            <summary>Gets or sets the jobs collection of the crew position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem.EpisodeCount">
            <summary>Gets or sets the episode count of the crew position.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem.Show">
            <summary>
            Gets or sets the show of the crew position. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.TraktPerson">
            <summary>A Trakt person.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPerson.Name">
            <summary>Gets or sets the person name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPerson.Ids">
            <summary>
            Gets or sets the collection of ids for the person for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPersonIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPerson.Biography">
            <summary>Gets or sets the biography of the person.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPerson.Birthday">
            <summary>Gets or sets the UTC datetime when the person was born.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPerson.Death">
            <summary>Gets or sets the UTC datetime when the person died.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPerson.Age">
            <summary>Returns the age of the person, if <see cref="P:TraktNet.Objects.Get.People.TraktPerson.Birthday" /> is set, otherwise zero.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPerson.Birthplace">
            <summary>Gets or sets the birthplace of the person.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPerson.Homepage">
            <summary>Gets or sets the web address of the homepage of the person.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.TraktPersonIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt person.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPersonIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPersonIds.Slug">
            <summary>Gets or sets the Trakt slug.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPersonIds.Imdb">
            <summary>Gets or sets the id from imdb.com<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPersonIds.Tmdb">
            <summary>Gets or sets the numeric id from themoviedb.org</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPersonIds.TvRage">
            <summary>Gets or sets the numeric id from tvrage.com</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.TraktPersonIds.HasAnyId">
            <summary>Returns, whether any id has been set.</summary>
        </member>
        <member name="M:TraktNet.Objects.Get.People.TraktPersonIds.GetBestId">
            <summary>Gets the most reliable id from those that have been set.</summary>
            <returns>The id as a string or an empty string, if no id is set.</returns>
        </member>
        <member name="T:TraktNet.Objects.Get.People.ITraktPerson">
            <summary>A Trakt person.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPerson.Name">
            <summary>Gets or sets the person name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPerson.Ids">
            <summary>
            Gets or sets the collection of ids for the person for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPersonIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPerson.Biography">
            <summary>Gets or sets the biography of the person.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPerson.Birthday">
            <summary>Gets or sets the UTC datetime when the person was born.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPerson.Death">
            <summary>Gets or sets the UTC datetime when the person died.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPerson.Age">
            <summary>Returns the age of the person, if <see cref="P:TraktNet.Objects.Get.People.ITraktPerson.Birthday" /> is set, otherwise zero.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPerson.Birthplace">
            <summary>Gets or sets the birthplace of the person.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPerson.Homepage">
            <summary>Gets or sets the web address of the homepage of the person.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.People.ITraktPersonIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt person.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPersonIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPersonIds.Slug">
            <summary>Gets or sets the Trakt slug.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPersonIds.Imdb">
            <summary>Gets or sets the id from imdb.com<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPersonIds.Tmdb">
            <summary>Gets or sets the numeric id from themoviedb.org</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.People.ITraktPersonIds.TvRage">
            <summary>Gets or sets the numeric id from tvrage.com</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Ratings.TraktRatingsItem">
            <summary>A Trakt rating item, containing a movie, show, season and / or episode and information about it.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.RatedAt">
            <summary>Gets or sets the UTC datetime, when the movie, show, season and / or episode was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.Rating">
            <summary>Gets or sets the rating of the movie, show, season and / or episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.Type">
            <summary>
            Gets or sets the object type, which this rating item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktRatingsItemType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.Type" /> is <see cref="P:TraktNet.Enums.TraktRatingsItemType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.Type" /> is <see cref="P:TraktNet.Enums.TraktRatingsItemType.Show" />.
            May also be set, if <see cref="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.Type" /> is <see cref="P:TraktNet.Enums.TraktRatingsItemType.Episode" /> or
            <see cref="P:TraktNet.Enums.TraktRatingsItemType.Season" />.
            <para>See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.</para>
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.Season">
            <summary>
            Gets or sets the season, if <see cref="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.Type" /> is <see cref="P:TraktNet.Enums.TraktRatingsItemType.Season" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.Ratings.TraktRatingsItem.Type" /> is <see cref="P:TraktNet.Enums.TraktRatingsItemType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Ratings.ITraktRatingsItem">
            <summary>A Trakt rating item, containing a movie, show, season and / or episode and information about it.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.RatedAt">
            <summary>Gets or sets the UTC datetime, when the movie, show, season and / or episode was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.Rating">
            <summary>Gets or sets the rating of the movie, show, season and / or episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.Type">
            <summary>
            Gets or sets the object type, which this rating item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktRatingsItemType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.Type" /> is <see cref="P:TraktNet.Enums.TraktRatingsItemType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.Type" /> is <see cref="P:TraktNet.Enums.TraktRatingsItemType.Show" />.
            May also be set, if <see cref="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.Type" /> is <see cref="P:TraktNet.Enums.TraktRatingsItemType.Episode" /> or
            <see cref="P:TraktNet.Enums.TraktRatingsItemType.Season" />.
            <para>See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.</para>
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.Season">
            <summary>
            Gets or sets the season, if <see cref="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.Type" /> is <see cref="P:TraktNet.Enums.TraktRatingsItemType.Season" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.Ratings.ITraktRatingsItem.Type" /> is <see cref="P:TraktNet.Enums.TraktRatingsItemType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Seasons.TraktSeason">
            <summary>A Trakt season of a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.Number">
            <summary>Gets or sets the season number.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.Title">
            <summary>
            Gets or sets the title of the season.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.Ids">
            <summary>
            Gets or sets the collection of ids for the season for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.Rating">
            <summary>Gets or sets the average user rating of the season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.Votes">
            <summary>Gets or sets the number of votes for the season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.TotalEpisodesCount">
            <summary>Gets or sets the number of episodes in the season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.AiredEpisodesCount">
            <summary>Gets or sets the number of aired episodes in the season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.Overview">
            <summary>Gets or sets the synopsis of the season.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.FirstAired">
            <summary>Gets or sets the UTC datetime when the season was first aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.Network">
            <summary>Gets or sets the network on which the season airs.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.Episodes">
            <summary>Gets or sets the collection of Trakt episodes in the season. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.<para>Nullable</para></summary>
            <remarks>
            This property is set automatically if this season is in a collection
            of seasons and this collection was returned by
            <see cref="M:TraktNet.Modules.TraktSeasonsModule.GetAllSeasonsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />
            and the optional <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> has
            <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.Episodes" /> set to true.
            </remarks>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeason.CommentCount">
            <summary>Gets or sets the comment count of the season.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Seasons.TraktSeasonCollectionProgress">
            <summary>Represents the collection progress of a Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeasonCollectionProgress.Episodes">
            <summary>
            Gets or sets the collected episodes. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeCollectionProgress" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Seasons.TraktSeasonIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeasonIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeasonIds.Tvdb">
            <summary>Gets or sets the numeric id from thetvdb.com</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeasonIds.Tmdb">
            <summary>Gets or sets the numeric id from themoviedb.org</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeasonIds.TvRage">
            <summary>Gets or sets the numeric id from tvrage.com</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeasonIds.HasAnyId">
            <summary>Returns, whether any id has been set.</summary>
        </member>
        <member name="M:TraktNet.Objects.Get.Seasons.TraktSeasonIds.GetBestId">
            <summary>Gets the most reliable id from those that have been set.</summary>
            <returns>The id as a string or an empty string, if no id is set.</returns>
        </member>
        <member name="T:TraktNet.Objects.Get.Seasons.TraktSeasonProgress">
            <summary>Represents the progress of a Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeasonProgress.Number">
            <summary>Gets or sets the number of the collected or watched season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeasonProgress.Aired">
            <summary>Gets or sets the number of episodes in the season, which already aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeasonProgress.Completed">
            <summary>Gets or sets the number of episodes in the season already collected or watched.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Seasons.TraktSeasonWatchedProgress">
            <summary>Represents the watched progress of a Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.TraktSeasonWatchedProgress.Episodes">
            <summary>
            Gets or sets the watched episodes. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeWatchedProgress" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Seasons.ITraktSeason">
            <summary>A Trakt season of a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Number">
            <summary>Gets or sets the season number.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Title">
            <summary>
            Gets or sets the title of the season.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Ids">
            <summary>
            Gets or sets the collection of ids for the season for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Rating">
            <summary>Gets or sets the average user rating of the season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Votes">
            <summary>Gets or sets the number of votes for the season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.TotalEpisodesCount">
            <summary>Gets or sets the number of episodes in the season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.AiredEpisodesCount">
            <summary>Gets or sets the number of aired episodes in the season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Overview">
            <summary>Gets or sets the synopsis of the season.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.FirstAired">
            <summary>Gets or sets the UTC datetime when the season was first aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Network">
            <summary>Gets or sets the network on which the season airs.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.Episodes">
            <summary>Gets or sets the collection of Trakt episodes in the season. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.<para>Nullable</para></summary>
            <remarks>
            This property is set automatically if this season is in a collection
            of seasons and this collection was returned by
            <see cref="M:TraktNet.Modules.TraktSeasonsModule.GetAllSeasonsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />
            and the optional <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> has
            <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.Episodes" /> set to true.
            </remarks>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeason.CommentCount">
            <summary>Gets or sets the comment count of the season.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Seasons.ITraktSeasonCollectionProgress">
            <summary>Represents the collection progress of a Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeasonCollectionProgress.Episodes">
            <summary>
            Gets or sets the collected episodes. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeCollectionProgress" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Seasons.ITraktSeasonIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeasonIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeasonIds.Tvdb">
            <summary>Gets or sets the numeric id from thetvdb.com</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeasonIds.Tmdb">
            <summary>Gets or sets the numeric id from themoviedb.org</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeasonIds.TvRage">
            <summary>Gets or sets the numeric id from tvrage.com</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Seasons.ITraktSeasonProgress">
            <summary>Represents the progress of a Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeasonProgress.Number">
            <summary>Gets or sets the number of the collected or watched season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeasonProgress.Aired">
            <summary>Gets or sets the number of episodes in the season, which already aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeasonProgress.Completed">
            <summary>Gets or sets the number of episodes in the season already collected or watched.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Seasons.ITraktSeasonWatchedProgress">
            <summary>Represents the watched progress of a Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Seasons.ITraktSeasonWatchedProgress.Episodes">
            <summary>
            Gets or sets the watched episodes. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeWatchedProgress" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow">
            <summary>A anticipated Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.ListCount">
            <summary>Gets or sets the list count for the <see cref="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Title">
            <summary>Gets or sets the show title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Year">
            <summary>Gets or sets the show release year (first episode of the first season).</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Ids">
            <summary>
            Gets or sets the collection of ids for the show for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Overview">
            <summary>Gets or sets the synopsis of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.FirstAired">
            <summary>Gets or sets the UTC datetime when the first episode of the first season of the show was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Airs">
            <summary>Gets or sets the air time of the show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowAirs" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Runtime">
            <summary>Gets or sets the runtime for the show's episodes, in minutes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Certification">
            <summary>Gets or sets the content certification of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Network">
            <summary>Gets or sets the producing network name of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.CountryCode">
            <summary>Gets or sets the two letter language code for the country in which the show is produced.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Trailer">
            <summary>Gets or sets the web address of a trailer for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Homepage">
            <summary>Gets or sets the web address of the homepage of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Status">
            <summary>Gets or sets the show's current status. See also <seealso cref="T:TraktNet.Enums.TraktShowStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Rating">
            <summary>Gets or sets the average user rating of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Votes">
            <summary>Gets or sets the number of votes for the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.LanguageCode">
            <summary>Gets or sets the two letter language code of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.AiredEpisodes">
            <summary>Gets or sets the absolute number of already aired episodes in all seasons of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.Seasons">
            <summary>Gets or sets the collection of Trakt seasons for the show. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.CommentCount">
            <summary>Gets or sets the comment count of the show.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktMostPWCShow">
            <summary>A played Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.WatcherCount">
            <summary>Gets or sets the watcher count for the <see cref="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.PlayCount">
            <summary>Gets or sets the play count for the <see cref="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.CollectedCount">
            <summary>Gets or sets the collected count for the <see cref="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.CollectorCount">
            <summary>Gets or sets the collectors count for the <see cref="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Title">
            <summary>Gets or sets the show title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Year">
            <summary>Gets or sets the show release year (first episode of the first season).</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Ids">
            <summary>
            Gets or sets the collection of ids for the show for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Overview">
            <summary>Gets or sets the synopsis of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.FirstAired">
            <summary>Gets or sets the UTC datetime when the first episode of the first season of the show was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Airs">
            <summary>Gets or sets the air time of the show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowAirs" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Runtime">
            <summary>Gets or sets the runtime for the show's episodes, in minutes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Certification">
            <summary>Gets or sets the content certification of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Network">
            <summary>Gets or sets the producing network name of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.CountryCode">
            <summary>Gets or sets the two letter language code for the country in which the show is produced.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Trailer">
            <summary>Gets or sets the web address of a trailer for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Homepage">
            <summary>Gets or sets the web address of the homepage of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Status">
            <summary>Gets or sets the show's current status. See also <seealso cref="T:TraktNet.Enums.TraktShowStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Rating">
            <summary>Gets or sets the average user rating of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Votes">
            <summary>Gets or sets the number of votes for the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.LanguageCode">
            <summary>Gets or sets the two letter language code of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.AiredEpisodes">
            <summary>Gets or sets the absolute number of already aired episodes in all seasons of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.Seasons">
            <summary>Gets or sets the collection of Trakt seasons for the show. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktMostPWCShow.CommentCount">
            <summary>Gets or sets the comment count of the show.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow">
            <summary>An updated Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.RecentlyUpdatedAt">
            <summary>Gets or sets the UTC datetime, when the <see cref="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Show" /> was updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Title">
            <summary>Gets or sets the show title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Year">
            <summary>Gets or sets the show release year (first episode of the first season).</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Ids">
            <summary>
            Gets or sets the collection of ids for the show for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Overview">
            <summary>Gets or sets the synopsis of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.FirstAired">
            <summary>Gets or sets the UTC datetime when the first episode of the first season of the show was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Airs">
            <summary>Gets or sets the air time of the show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowAirs" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Runtime">
            <summary>Gets or sets the runtime for the show's episodes, in minutes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Certification">
            <summary>Gets or sets the content certification of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Network">
            <summary>Gets or sets the producing network name of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.CountryCode">
            <summary>Gets or sets the two letter language code for the country in which the show is produced.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Trailer">
            <summary>Gets or sets the web address of a trailer for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Homepage">
            <summary>Gets or sets the web address of the homepage of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Status">
            <summary>Gets or sets the show's current status. See also <seealso cref="T:TraktNet.Enums.TraktShowStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Rating">
            <summary>Gets or sets the average user rating of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Votes">
            <summary>Gets or sets the number of votes for the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.LanguageCode">
            <summary>Gets or sets the two letter language code of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.AiredEpisodes">
            <summary>Gets or sets the absolute number of already aired episodes in all seasons of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.Seasons">
            <summary>Gets or sets the collection of Trakt seasons for the show. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.CommentCount">
            <summary>Gets or sets the comment count of the show.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShow">
            <summary>A Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Title">
            <summary>Gets or sets the show title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Year">
            <summary>Gets or sets the show release year (first episode of the first season).</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Ids">
            <summary>
            Gets or sets the collection of ids for the show for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Overview">
            <summary>Gets or sets the synopsis of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.FirstAired">
            <summary>Gets or sets the UTC datetime when the first episode of the first season of the show was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Airs">
            <summary>Gets or sets the air time of the show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowAirs" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Runtime">
            <summary>Gets or sets the runtime for the show's episodes, in minutes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Certification">
            <summary>Gets or sets the content certification of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Network">
            <summary>Gets or sets the producing network name of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.CountryCode">
            <summary>Gets or sets the two letter language code for the country in which the show is produced.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Trailer">
            <summary>Gets or sets the web address of a trailer for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Homepage">
            <summary>Gets or sets the web address of the homepage of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Status">
            <summary>Gets or sets the show's current status. See also <seealso cref="T:TraktNet.Enums.TraktShowStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Rating">
            <summary>Gets or sets the average user rating of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Votes">
            <summary>Gets or sets the number of votes for the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.LanguageCode">
            <summary>Gets or sets the two letter language code of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.AiredEpisodes">
            <summary>Gets or sets the absolute number of already aired episodes in all seasons of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.Seasons">
            <summary>Gets or sets the collection of Trakt seasons for the show. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShow.CommentCount">
            <summary>Gets or sets the comment count of the show.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShowAirs">
            <summary>The air time of a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowAirs.Day">
            <summary>Gets or sets the day of week on which the show airs.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowAirs.Time">
            <summary>Gets or sets the time of day at which the show airs.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowAirs.TimeZoneId">
            <summary>Gets or sets the time zone id (Olson) for the location in which the show airs.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShowAlias">
            <summary>An alias for a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowAlias.Title">
            <summary>Gets or sets the title of the show alias.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowAlias.CountryCode">
            <summary>Gets or sets the two letter country code for the show alias.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShowCastAndCrew">
            <summary>Represents a collection of show cast- and crew-members.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCastAndCrew.Cast">
            <summary>Gets or sets a list of showcast members. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCastMember" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCastAndCrew.Crew">
            <summary>Gets or sets the show crew members. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrew" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCastAndCrew.GuestStars">
            <summary>Gets or sets a list of guest stars. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCastMember" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShowCastMember">
            <summary>A Trakt show cast member.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCastMember.EpisodeCount">
            <summary>Gets or sets the episode count of the cast member.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShowCollectionProgress">
            <summary>Represents the collection progress of a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCollectionProgress.LastCollectedAt">
            <summary>Gets or sets the UTC datetime, when the last collection occured.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCollectionProgress.Seasons">
            <summary>
            Gets or sets the collected seasons. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonCollectionProgress" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShowCrew">
            <summary>A collection of show crew members in different categories.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrew.Production">
            <summary>
            Gets or sets a list of show crew members in the production category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrew.Art">
            <summary>
            Gets or sets a list of show crew members in the art category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrew.Crew">
            <summary>
            Gets or sets a list of show crew members. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrew.CostumeAndMakeup">
            <summary>
            Gets or sets a list of show crew members in the costume and make-up category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrew.Directing">
            <summary>
            Gets or sets a list of show crew members in the directing category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrew.Writing">
            <summary>
            Gets or sets a list of show crew members in the writing category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrew.Sound">
            <summary>
            Gets or sets a list of show crew members in the sound category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrew.Camera">
            <summary>
            Gets or sets a list of show crew members in the camera category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrew.Lighting">
            <summary>
            Gets or sets a list of show crew members in the lighting category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrew.VisualEffects">
            <summary>
            Gets or sets a list of show crew members in the visual effects category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrew.Editing">
            <summary>
            Gets or sets a list of show crew members in the editing category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShowCrewMember">
            <summary>A Trakt show crew member.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowCrewMember.EpisodeCount">
            <summary>Gets or sets the episode count of the crew member.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShowIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt show.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShowProgress">
            <summary>Represents the progress of a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowProgress.Aired">
            <summary>Gets or sets the number of episodes, which already aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowProgress.Completed">
            <summary>Gets or sets the number of episodes already collected or watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowProgress.HiddenSeasons">
            <summary>
            Gets or sets the hidden seasons. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowProgress.NextEpisode">
            <summary>
            Gets or sets the episode, which the user should collect or watch.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowProgress.LastEpisode">
            <summary>
            Gets or sets the episode, which the user collected or watched last.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShowTranslation">
            <summary>A translation for a Trakt show.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktShowWatchedProgress">
            <summary>Represents the watched progress of a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowWatchedProgress.LastWatchedAt">
            <summary>Gets or sets the UTC datetime, when the last watch occured.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowWatchedProgress.ResetAt">
            <summary>Gets or sets the UTC datetime, when the watched progress has been reset.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktShowWatchedProgress.Seasons">
            <summary>
            Gets or sets the watched seasons. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonWatchedProgress" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.TraktTrendingShow">
            <summary>A trending Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Watchers">
            <summary>Gets or sets the watcher count for the <see cref="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Title">
            <summary>Gets or sets the show title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Year">
            <summary>Gets or sets the show release year (first episode of the first season).</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Ids">
            <summary>
            Gets or sets the collection of ids for the show for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Overview">
            <summary>Gets or sets the synopsis of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.FirstAired">
            <summary>Gets or sets the UTC datetime when the first episode of the first season of the show was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Airs">
            <summary>Gets or sets the air time of the show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowAirs" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Runtime">
            <summary>Gets or sets the runtime for the show's episodes, in minutes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Certification">
            <summary>Gets or sets the content certification of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Network">
            <summary>Gets or sets the producing network name of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.CountryCode">
            <summary>Gets or sets the two letter language code for the country in which the show is produced.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Trailer">
            <summary>Gets or sets the web address of a trailer for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Homepage">
            <summary>Gets or sets the web address of the homepage of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Status">
            <summary>Gets or sets the show's current status. See also <seealso cref="T:TraktNet.Enums.TraktShowStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Rating">
            <summary>Gets or sets the average user rating of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Votes">
            <summary>Gets or sets the number of votes for the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.LanguageCode">
            <summary>Gets or sets the two letter language code of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.AiredEpisodes">
            <summary>Gets or sets the absolute number of already aired episodes in all seasons of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.Seasons">
            <summary>Gets or sets the collection of Trakt seasons for the show. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.TraktTrendingShow.CommentCount">
            <summary>Gets or sets the comment count of the show.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktMostAnticipatedShow">
            <summary>A anticipated Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktMostAnticipatedShow.ListCount">
            <summary>Gets or sets the list count for the <see cref="P:TraktNet.Objects.Get.Shows.ITraktMostAnticipatedShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktMostAnticipatedShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktMostPWCShow">
            <summary>A played Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktMostPWCShow.WatcherCount">
            <summary>Gets or sets the watcher count for the <see cref="P:TraktNet.Objects.Get.Shows.ITraktMostPWCShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktMostPWCShow.PlayCount">
            <summary>Gets or sets the play count for the <see cref="P:TraktNet.Objects.Get.Shows.ITraktMostPWCShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktMostPWCShow.CollectedCount">
            <summary>Gets or sets the collected count for the <see cref="P:TraktNet.Objects.Get.Shows.ITraktMostPWCShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktMostPWCShow.CollectorCount">
            <summary>Gets or sets the collectors count for the <see cref="P:TraktNet.Objects.Get.Shows.ITraktMostPWCShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktMostPWCShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktRecentlyUpdatedShow">
            <summary>An updated Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktRecentlyUpdatedShow.RecentlyUpdatedAt">
            <summary>Gets or sets the UTC datetime, when the <see cref="P:TraktNet.Objects.Get.Shows.ITraktRecentlyUpdatedShow.Show" /> was updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktRecentlyUpdatedShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShow">
            <summary>A Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Title">
            <summary>Gets or sets the show title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Year">
            <summary>Gets or sets the show release year (first episode of the first season).</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Ids">
            <summary>
            Gets or sets the collection of ids for the show for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Overview">
            <summary>Gets or sets the synopsis of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.FirstAired">
            <summary>Gets or sets the UTC datetime when the first episode of the first season of the show was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Airs">
            <summary>Gets or sets the air time of the show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowAirs" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Runtime">
            <summary>Gets or sets the runtime for the show's episodes, in minutes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Certification">
            <summary>Gets or sets the content certification of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Network">
            <summary>Gets or sets the producing network name of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.CountryCode">
            <summary>Gets or sets the two letter language code for the country in which the show is produced.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Trailer">
            <summary>Gets or sets the web address of a trailer for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Homepage">
            <summary>Gets or sets the web address of the homepage of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Status">
            <summary>Gets or sets the show's current status. See also <seealso cref="T:TraktNet.Enums.TraktShowStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Rating">
            <summary>Gets or sets the average user rating of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Votes">
            <summary>Gets or sets the number of votes for the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.LanguageCode">
            <summary>Gets or sets the two letter language code of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.AiredEpisodes">
            <summary>Gets or sets the absolute number of already aired episodes in all seasons of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.Seasons">
            <summary>Gets or sets the collection of Trakt seasons for the show. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShow.CommentCount">
            <summary>Gets or sets the comment count of the show.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShowAirs">
            <summary>The air time of a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowAirs.Day">
            <summary>Gets or sets the day of week on which the show airs.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowAirs.Time">
            <summary>Gets or sets the time of day at which the show airs.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowAirs.TimeZoneId">
            <summary>Gets or sets the time zone id (Olson) for the location in which the show airs.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShowAlias">
            <summary>An alias for a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowAlias.Title">
            <summary>Gets or sets the title of the show alias.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowAlias.CountryCode">
            <summary>Gets or sets the two letter country code for the show alias.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShowCastAndCrew">
            <summary>Represents a collection of show cast- and crew-members.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCastAndCrew.Cast">
            <summary>Gets or sets a list of showcast members. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCastMember" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCastAndCrew.Crew">
            <summary>Gets or sets the show crew members. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrew" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCastAndCrew.GuestStars">
            <summary>Gets or sets a list of guest stars. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCastMember" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShowCastMember">
            <summary>A Trakt show cast member.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCastMember.EpisodeCount">
            <summary>Gets or sets the episode count of the cast member.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShowCollectionProgress">
            <summary>Represents the collection progress of a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCollectionProgress.LastCollectedAt">
            <summary>Gets or sets the UTC datetime, when the last collection occured.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCollectionProgress.Seasons">
            <summary>
            Gets or sets the collected seasons. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonCollectionProgress" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShowCrew">
            <summary>A collection of show crew members in different categories.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrew.Production">
            <summary>
            Gets or sets a list of show crew members in the production category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrew.Art">
            <summary>
            Gets or sets a list of show crew members in the art category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrew.Crew">
            <summary>
            Gets or sets a list of show crew members. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrew.CostumeAndMakeup">
            <summary>
            Gets or sets a list of show crew members in the costume and make-up category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrew.Directing">
            <summary>
            Gets or sets a list of show crew members in the directing category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrew.Writing">
            <summary>
            Gets or sets a list of show crew members in the writing category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrew.Sound">
            <summary>
            Gets or sets a list of show crew members in the sound category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrew.Camera">
            <summary>
            Gets or sets a list of show crew members in the camera category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrew.Lighting">
            <summary>
            Gets or sets a list of show crew members in the lighting category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrew.VisualEffects">
            <summary>
            Gets or sets a list of show crew members in the visual effects category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrew.Editing">
            <summary>
            Gets or sets a list of show crew members in the editing category. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShowCrewMember">
            <summary>A Trakt show crew member.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowCrewMember.EpisodeCount">
            <summary>Gets or sets the episode count of the crew member.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShowIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt show.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShowProgress">
            <summary>Represents the progress of a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowProgress.Aired">
            <summary>Gets or sets the number of episodes, which already aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowProgress.Completed">
            <summary>Gets or sets the number of episodes already collected or watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowProgress.HiddenSeasons">
            <summary>
            Gets or sets the hidden seasons. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowProgress.NextEpisode">
            <summary>
            Gets or sets the episode, which the user should collect or watch.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowProgress.LastEpisode">
            <summary>
            Gets or sets the episode, which the user collected or watched last.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShowTranslation">
            <summary>A translation for a Trakt show.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktShowWatchedProgress">
            <summary>Represents the watched progress of a Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowWatchedProgress.LastWatchedAt">
            <summary>Gets or sets the UTC datetime, when the last watch occured.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowWatchedProgress.ResetAt">
            <summary>Gets or sets the UTC datetime, when the watched progress has been reset.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktShowWatchedProgress.Seasons">
            <summary>
            Gets or sets the watched seasons. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonWatchedProgress" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Shows.ITraktTrendingShow">
            <summary>A trending Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktTrendingShow.Watchers">
            <summary>Gets or sets the watcher count for the <see cref="P:TraktNet.Objects.Get.Shows.ITraktTrendingShow.Show" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Shows.ITraktTrendingShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.TraktSyncCommentsLastActivities">
            <summary>A collection of UTC datetimes of last activities for comments.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncCommentsLastActivities.LikedAt">
            <summary>Gets or sets the UTC datetime, when a comment was lastly liked.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.TraktSyncEpisodesLastActivities">
            <summary>A collection of UTC datetimes of last activities for episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncEpisodesLastActivities.WatchedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncEpisodesLastActivities.CollectedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncEpisodesLastActivities.RatedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncEpisodesLastActivities.WatchlistedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly added to the watchlist.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncEpisodesLastActivities.CommentedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly commented.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncEpisodesLastActivities.PausedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly paused.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.TraktSyncLastActivities">
            <summary>A collection of UTC datetimes of last activities.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncLastActivities.All">
            <summary>Gets or sets the UTC datetime of the overall last activity.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncLastActivities.Movies">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for movies.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncLastActivities.Shows">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for shows.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncShowsLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncLastActivities.Seasons">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for seasons.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncSeasonsLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncLastActivities.Episodes">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for episodes.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncEpisodesLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncLastActivities.Comments">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for comments.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncCommentsLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncLastActivities.Lists">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for lists.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncListsLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.TraktSyncListsLastActivities">
            <summary>A collection of UTC datetimes of last activities for lists.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncListsLastActivities.LikedAt">
            <summary>Gets or sets the UTC datetime, when a list was lastly liked.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncListsLastActivities.UpdatedAt">
            <summary>Gets or sets the UTC datetime, when a list was lastly updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncListsLastActivities.CommentedAt">
            <summary>Gets or sets the UTC datetime, when a list was lastly commented.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.TraktSyncMoviesLastActivities">
            <summary>A collection of UTC datetimes of last activities for movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncMoviesLastActivities.WatchedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncMoviesLastActivities.CollectedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncMoviesLastActivities.RatedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncMoviesLastActivities.WatchlistedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly added to the watchlist.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncMoviesLastActivities.CommentedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly commented.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncMoviesLastActivities.PausedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly paused.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncMoviesLastActivities.HiddenAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly hidden.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.TraktSyncSeasonsLastActivities">
            <summary>A collection of UTC datetimes of last activities for seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncSeasonsLastActivities.RatedAt">
            <summary>Gets or sets the UTC datetime, when a season was lastly rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncSeasonsLastActivities.WatchlistedAt">
            <summary>Gets or sets the UTC datetime, when a season was lastly added to the watchlist.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncSeasonsLastActivities.CommentedAt">
            <summary>Gets or sets the UTC datetime, when a season was lastly commented.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncSeasonsLastActivities.HiddenAt">
            <summary>Gets or sets the UTC datetime, when a season was lastly hidden.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.TraktSyncShowsLastActivities">
            <summary>A collection of UTC datetimes of last activities for shows.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncShowsLastActivities.RatedAt">
            <summary>Gets or sets the UTC datetime, when a show was lastly rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncShowsLastActivities.WatchlistedAt">
            <summary>Gets or sets the UTC datetime, when a show was lastly added to the watchlist.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncShowsLastActivities.CommentedAt">
            <summary>Gets or sets the UTC datetime, when a show was lastly commented.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.TraktSyncShowsLastActivities.HiddenAt">
            <summary>Gets or sets the UTC datetime, when a show was lastly hidden.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncCommentsLastActivities">
            <summary>A collection of UTC datetimes of last activities for comments.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncCommentsLastActivities.LikedAt">
            <summary>Gets or sets the UTC datetime, when a comment was lastly liked.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncEpisodesLastActivities">
            <summary>A collection of UTC datetimes of last activities for episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncEpisodesLastActivities.WatchedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncEpisodesLastActivities.CollectedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncEpisodesLastActivities.RatedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncEpisodesLastActivities.WatchlistedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly added to the watchlist.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncEpisodesLastActivities.CommentedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly commented.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncEpisodesLastActivities.PausedAt">
            <summary>Gets or sets the UTC datetime, when an episode was lastly paused.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncLastActivities">
            <summary>A collection of UTC datetimes of last activities.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncLastActivities.All">
            <summary>Gets or sets the UTC datetime of the overall last activity.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncLastActivities.Movies">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for movies.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncLastActivities.Shows">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for shows.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncShowsLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncLastActivities.Seasons">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for seasons.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncSeasonsLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncLastActivities.Episodes">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for episodes.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncEpisodesLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncLastActivities.Comments">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for comments.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncCommentsLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncLastActivities.Lists">
            <summary>
            Gets or sets a collection of UTC datetimes of last activities for lists.
            See also <seealso cref="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncListsLastActivities" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncListsLastActivities">
            <summary>A collection of UTC datetimes of last activities for lists.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncListsLastActivities.LikedAt">
            <summary>Gets or sets the UTC datetime, when a list was lastly liked.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncListsLastActivities.UpdatedAt">
            <summary>Gets or sets the UTC datetime, when a list was lastly updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncListsLastActivities.CommentedAt">
            <summary>Gets or sets the UTC datetime, when a list was lastly commented.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities">
            <summary>A collection of UTC datetimes of last activities for movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities.WatchedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities.CollectedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities.RatedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities.WatchlistedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly added to the watchlist.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities.CommentedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly commented.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities.PausedAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly paused.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities.HiddenAt">
            <summary>Gets or sets the UTC datetime, when a movie was lastly hidden.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncSeasonsLastActivities">
            <summary>A collection of UTC datetimes of last activities for seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncSeasonsLastActivities.RatedAt">
            <summary>Gets or sets the UTC datetime, when a season was lastly rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncSeasonsLastActivities.WatchlistedAt">
            <summary>Gets or sets the UTC datetime, when a season was lastly added to the watchlist.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncSeasonsLastActivities.CommentedAt">
            <summary>Gets or sets the UTC datetime, when a season was lastly commented.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncSeasonsLastActivities.HiddenAt">
            <summary>Gets or sets the UTC datetime, when a season was lastly hidden.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncShowsLastActivities">
            <summary>A collection of UTC datetimes of last activities for shows.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncShowsLastActivities.RatedAt">
            <summary>Gets or sets the UTC datetime, when a show was lastly rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncShowsLastActivities.WatchlistedAt">
            <summary>Gets or sets the UTC datetime, when a show was lastly added to the watchlist.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncShowsLastActivities.CommentedAt">
            <summary>Gets or sets the UTC datetime, when a show was lastly commented.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Activities.ITraktSyncShowsLastActivities.HiddenAt">
            <summary>Gets or sets the UTC datetime, when a show was lastly hidden.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem">
            <summary>Contains information about a Trakt playback progress, including the corresponding movie or episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.Id">
            <summary>Gets or sets the id of this progress item.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.Progress">
            <summary>
            Gets or sets a value between 0 and 100 representing the watched progress percentage
            of the movie or episode.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.PausedAt">
            <summary>Gets or sets the UTC datetime, when the watched movie or episode was paused.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.Type">
            <summary>
            Gets or sets the object type, which this progress item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktSyncType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem">
            <summary>Contains information about a Trakt playback progress, including the corresponding movie or episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.Id">
            <summary>Gets or sets the id of this progress item.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.Progress">
            <summary>
            Gets or sets a value between 0 and 100 representing the watched progress percentage
            of the movie or episode.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.PausedAt">
            <summary>Gets or sets the UTC datetime, when the watched movie or episode was paused.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.Type">
            <summary>
            Gets or sets the object type, which this progress item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktSyncType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktAccountSettings">
            <summary>Represents Trakt user account settings.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktAccountSettings.TimeZoneId">
            <summary>Gets or sets the user's timezone.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktAccountSettings.Time24Hr">
            <summary>Gets or sets, whether an user uses the 24h time format.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktAccountSettings.CoverImage">
            <summary>Gets or sets the user's cover image url.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktAccountSettings.Token">
            <summary>Gets or sets the user's token.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktAccountSettings.DateFormat">
            <summary>Gets or sets the user's date format.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktRecommendation">
            <summary>A Trakt recommendation.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktRecommendation.Rank">
            <summary>Gets or sets the recommendation rank.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktRecommendation.ListedAt">
            <summary>Gets or sets the UTC datetime, when the recommendation was listed.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktRecommendation.Type">
            <summary>Gets or sets the recommendation item type. See also <seealso cref="T:TraktNet.Enums.TraktRecommendationObjectType" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktRecommendation.Notes">
            <summary>Gets or sets the recommendation notes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktRecommendation.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Users.TraktRecommendation.Type" /> is <see cref="P:TraktNet.Enums.TraktRecommendationObjectType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktRecommendation.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Users.TraktRecommendation.Type" /> is <see cref="P:TraktNet.Enums.TraktRecommendationObjectType.Show" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktSharingText">
            <summary>Represents Trakt user social media sharing text settings.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktSharingText.Watching">
            <summary>Gets or sets the user's sharing text for watching an item.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktSharingText.Watched">
            <summary>Gets or sets the user's sharing text for watched items.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktUser">
            <summary>A Trakt user.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.Username">
            <summary>Gets or sets the user's username.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.IsPrivate">
            <summary>Gets or sets the user's privacy status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.Ids">
            <summary>Gets or sets the collection of ids for the user. See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserIds" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.Name">
            <summary>Gets or sets the user's name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.IsVIP">
            <summary>Gets or sets the user's VIP status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.IsVIP_EP">
            <summary>Gets or sets the user's VIP EP status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.JoinedAt">
            <summary>Gets or sets the UTC datetime when the user joined Trakt.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.Location">
            <summary>Gets or sets the user's location.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.About">
            <summary>Gets or sets the user's about information.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.Gender">
            <summary>Gets or sets the user's gender.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.Age">
            <summary>Gets or sets the user's age.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUser.Images">
            <summary>Gets or sets the collection of images for the user. See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserImages" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktUserComment">
            <summary>A Trakt user comment.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserComment.Type">
            <summary>
            Gets or sets the object type, which this comment contains.
            See also <seealso cref="T:TraktNet.Enums.TraktObjectType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserComment.Comment">
            <summary>Gets or sets the comment's content.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserComment.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserComment.Type" /> is <see cref="P:TraktNet.Enums.TraktObjectType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserComment.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserComment.Type" /> is <see cref="P:TraktNet.Enums.TraktObjectType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserComment.Season">
            <summary>
            Gets or sets the season, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserComment.Type" /> is <see cref="P:TraktNet.Enums.TraktObjectType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserComment.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserComment.Type" /> is <see cref="P:TraktNet.Enums.TraktObjectType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserComment.List">
            <summary>
            Gets or sets the list, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserComment.Type" /> is <see cref="P:TraktNet.Enums.TraktObjectType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktUserFollower">
            <summary>A Trakt user follower.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.FollowedAt">
            <summary>Gets or sets the UTC datetime, when the relationship began.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.User">
            <summary>
            Gets or sets the following / followed Trakt user.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.Username">
            <summary>Gets or sets the user's username.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.IsPrivate">
            <summary>Gets or sets the user's privacy status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.Ids">
            <summary>Gets or sets the collection of ids for the user. See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserIds" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.Name">
            <summary>Gets or sets the user's name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.IsVIP">
            <summary>Gets or sets the user's VIP status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.IsVIP_EP">
            <summary>Gets or sets the user's VIP EP status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.JoinedAt">
            <summary>Gets or sets the UTC datetime when the user joined Trakt.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.Location">
            <summary>Gets or sets the user's location.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.About">
            <summary>Gets or sets the user's about information.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.Gender">
            <summary>Gets or sets the user's gender.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.Age">
            <summary>Gets or sets the user's age.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollower.Images">
            <summary>Gets or sets the collection of images for the user. See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserImages" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktUserFollowRequest">
            <summary>Represents a Trakt user follow request.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollowRequest.Id">
            <summary>Gets or sets the id of the follow request.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollowRequest.RequestedAt">
            <summary>Gets or sets the UTC datetime, when the request was made.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFollowRequest.User">
            <summary>
            Gets or sets the Trakt user, who is requesting.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktUserFriend">
            <summary>A Trakt user friend.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.FriendsAt">
            <summary>Gets or sets the UTC datetime, when the relationship began.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.User">
            <summary>
            Gets or sets the Trakt user friend.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.Username">
            <summary>Gets or sets the user's username.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.IsPrivate">
            <summary>Gets or sets the user's privacy status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.Ids">
            <summary>Gets or sets the collection of ids for the user. See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserIds" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.Name">
            <summary>Gets or sets the user's name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.IsVIP">
            <summary>Gets or sets the user's VIP status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.IsVIP_EP">
            <summary>Gets or sets the user's VIP EP status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.JoinedAt">
            <summary>Gets or sets the UTC datetime when the user joined Trakt.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.Location">
            <summary>Gets or sets the user's location.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.About">
            <summary>Gets or sets the user's about information.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.Gender">
            <summary>Gets or sets the user's gender.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.Age">
            <summary>Gets or sets the user's age.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserFriend.Images">
            <summary>Gets or sets the collection of images for the user. See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserImages" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktUserHiddenItem">
            <summary>Contains information about a Trakt user's hidden item, including the corresponding movie, show or season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserHiddenItem.HiddenAt">
            <summary>Gets or sets the UTC datetime, when the movie, show or season was hidden.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserHiddenItem.Type">
            <summary>
            Gets or sets the object type, which this hidden item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktHiddenItemType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserHiddenItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserHiddenItem.Type" /> is <see cref="P:TraktNet.Enums.TraktHiddenItemType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserHiddenItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserHiddenItem.Type" /> is <see cref="P:TraktNet.Enums.TraktHiddenItemType.Show" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserHiddenItem.Season">
            <summary>
            Gets or sets the season, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserHiddenItem.Type" /> is <see cref="P:TraktNet.Enums.TraktHiddenItemType.Season" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktUserIds">
            <summary>A collection of ids for a Trakt user.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserIds.Slug">
            <summary>Gets or sets the Trakt slug.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserIds.UUID">
            <summary>Gets or sets a globally unique UUID.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserIds.HasAnyId">
            <summary>Returns, whether any id has been set.</summary>
        </member>
        <member name="M:TraktNet.Objects.Get.Users.TraktUserIds.GetBestId">
            <summary>Gets the most reliable id from those that have been set.</summary>
            <returns>The id as a string or an empty string, if no id is set.</returns>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktUserImages">
            <summary>A collection of images and image sets for a Trakt user.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserImages.Avatar">
            <summary>Gets or sets the avatar image. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktImage" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktUserLikeItem">
            <summary>Contains information about an item a Trakt user has liked, including the corresponding comment or list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserLikeItem.LikedAt">
            <summary>Gets or sets the UTC datetime, when the comment or list was liked.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserLikeItem.Type">
            <summary>
            Gets or sets the object type, which this liked item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktUserLikeType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserLikeItem.Comment">
            <summary>
            Gets or sets the comment, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserLikeItem.Type" /> is <see cref="P:TraktNet.Enums.TraktUserLikeType.Comment" />.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktComment" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserLikeItem.List">
            <summary>
            Gets or sets the list, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserLikeItem.Type" /> is <see cref="P:TraktNet.Enums.TraktUserLikeType.List" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktUserSettings">
            <summary>Represents Trakt user settings.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserSettings.User">
            <summary>
            Gets or sets the Trakt user for this settings.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserSettings.Account">
            <summary>
            Gets or sets the account settings.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktAccountSettings" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserSettings.Connections">
            <summary>
            Gets or sets the social media connection settings.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserSettings.SharingText">
            <summary>
            Gets or sets the social media sharing text settings.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktSharingText" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.TraktUserWatchingItem">
            <summary>Contains information about a movie or an episode a Trakt user is currently watching.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserWatchingItem.StartedAt">
            <summary>Gets or sets the UTC datetime, when the movie or episode started.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserWatchingItem.ExpiresAt">
            <summary>Gets or sets the UTC datetime, when the movie or episode expires.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserWatchingItem.Action">
            <summary>
            Gets or sets the action type for the movie or episode.
            See also <seealso cref="T:TraktNet.Enums.TraktHistoryActionType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserWatchingItem.Type">
            <summary>
            Gets or sets the object type, which this watching item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktSyncType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserWatchingItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserWatchingItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserWatchingItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserWatchingItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.TraktUserWatchingItem.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.Users.TraktUserWatchingItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktAccountSettings">
            <summary>Represents Trakt user account settings.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktAccountSettings.TimeZoneId">
            <summary>Gets or sets the user's timezone.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktAccountSettings.Time24Hr">
            <summary>Gets or sets, whether an user uses the 24h time format.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktAccountSettings.CoverImage">
            <summary>Gets or sets the user's cover image url.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktAccountSettings.Token">
            <summary>Gets or sets the user's token.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktAccountSettings.DateFormat">
            <summary>Gets or sets the user's date format.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktRecommendation">
            <summary>A Trakt recommendation.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktRecommendation.Rank">
            <summary>Gets or sets the recommendation rank.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktRecommendation.ListedAt">
            <summary>Gets or sets the UTC datetime, when the recommendation was listed.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktRecommendation.Type">
            <summary>Gets or sets the recommendation item type. See also <seealso cref="T:TraktNet.Enums.TraktRecommendationObjectType" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktRecommendation.Notes">
            <summary>Gets or sets the recommendation notes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktRecommendation.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Users.ITraktRecommendation.Type" /> is <see cref="P:TraktNet.Enums.TraktRecommendationObjectType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktRecommendation.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Users.ITraktRecommendation.Type" /> is <see cref="P:TraktNet.Enums.TraktRecommendationObjectType.Show" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktSharingText">
            <summary>Represents Trakt user social media sharing text settings.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktSharingText.Watching">
            <summary>Gets or sets the user's sharing text for watching an item.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktSharingText.Watched">
            <summary>Gets or sets the user's sharing text for watched items.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktUser">
            <summary>A Trakt user.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.Username">
            <summary>Gets or sets the user's username.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.IsPrivate">
            <summary>Gets or sets the user's privacy status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.Ids">
            <summary>Gets or sets the collection of ids for the user. See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserIds" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.Name">
            <summary>Gets or sets the user's name.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.IsVIP">
            <summary>Gets or sets the user's VIP status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.IsVIP_EP">
            <summary>Gets or sets the user's VIP EP status.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.JoinedAt">
            <summary>Gets or sets the UTC datetime when the user joined Trakt.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.Location">
            <summary>Gets or sets the user's location.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.About">
            <summary>Gets or sets the user's about information.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.Gender">
            <summary>Gets or sets the user's gender.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.Age">
            <summary>Gets or sets the user's age.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUser.Images">
            <summary>Gets or sets the collection of images for the user. See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUserImages" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktUserComment">
            <summary>A Trakt user comment.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserComment.Type">
            <summary>
            Gets or sets the object type, which this comment contains.
            See also <seealso cref="T:TraktNet.Enums.TraktObjectType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserComment.Comment">
            <summary>Gets or sets the comment's content.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserComment.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserComment.Type" /> is <see cref="P:TraktNet.Enums.TraktObjectType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserComment.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserComment.Type" /> is <see cref="P:TraktNet.Enums.TraktObjectType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserComment.Season">
            <summary>
            Gets or sets the season, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserComment.Type" /> is <see cref="P:TraktNet.Enums.TraktObjectType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserComment.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserComment.Type" /> is <see cref="P:TraktNet.Enums.TraktObjectType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserComment.List">
            <summary>
            Gets or sets the list, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserComment.Type" /> is <see cref="P:TraktNet.Enums.TraktObjectType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktUserFollower">
            <summary>A Trakt user follower.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserFollower.FollowedAt">
            <summary>Gets or sets the UTC datetime, when the relationship began.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserFollower.User">
            <summary>
            Gets or sets the following / followed Trakt user.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktUserFollowRequest">
            <summary>Represents a Trakt user follow request.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserFollowRequest.Id">
            <summary>Gets or sets the id of the follow request.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserFollowRequest.RequestedAt">
            <summary>Gets or sets the UTC datetime, when the request was made.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserFollowRequest.User">
            <summary>
            Gets or sets the Trakt user, who is requesting.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktUserFriend">
            <summary>A Trakt user friend.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserFriend.FriendsAt">
            <summary>Gets or sets the UTC datetime, when the relationship began.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserFriend.User">
            <summary>
            Gets or sets the Trakt user friend.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktUserHiddenItem">
            <summary>Contains information about a Trakt user's hidden item, including the corresponding movie, show or season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserHiddenItem.HiddenAt">
            <summary>Gets or sets the UTC datetime, when the movie, show or season was hidden.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserHiddenItem.Type">
            <summary>
            Gets or sets the object type, which this hidden item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktHiddenItemType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserHiddenItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserHiddenItem.Type" /> is <see cref="P:TraktNet.Enums.TraktHiddenItemType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserHiddenItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserHiddenItem.Type" /> is <see cref="P:TraktNet.Enums.TraktHiddenItemType.Show" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserHiddenItem.Season">
            <summary>
            Gets or sets the season, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserHiddenItem.Type" /> is <see cref="P:TraktNet.Enums.TraktHiddenItemType.Season" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktUserIds">
            <summary>A collection of ids for a Trakt user.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserIds.Slug">
            <summary>Gets or sets the Trakt slug.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserIds.UUID">
            <summary>Gets or sets a globally unique UUID.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktUserImages">
            <summary>A collection of images and image sets for a Trakt user.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserImages.Avatar">
            <summary>Gets or sets the avatar image. See also <seealso cref="T:TraktNet.Objects.Basic.ITraktImage" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktUserLikeItem">
            <summary>Contains information about an item a Trakt user has liked, including the corresponding comment or list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserLikeItem.LikedAt">
            <summary>Gets or sets the UTC datetime, when the comment or list was liked.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserLikeItem.Type">
            <summary>
            Gets or sets the object type, which this liked item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktUserLikeType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserLikeItem.Comment">
            <summary>
            Gets or sets the comment, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserLikeItem.Type" /> is <see cref="P:TraktNet.Enums.TraktUserLikeType.Comment" />.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktComment" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserLikeItem.List">
            <summary>
            Gets or sets the list, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserLikeItem.Type" /> is <see cref="P:TraktNet.Enums.TraktUserLikeType.List" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktUserSettings">
            <summary>Represents Trakt user settings.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserSettings.User">
            <summary>
            Gets or sets the Trakt user for this settings.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserSettings.Account">
            <summary>
            Gets or sets the account settings.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktAccountSettings" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserSettings.Connections">
            <summary>
            Gets or sets the social media connection settings.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserSettings.SharingText">
            <summary>
            Gets or sets the social media sharing text settings.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktSharingText" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.ITraktUserWatchingItem">
            <summary>Contains information about a movie or an episode a Trakt user is currently watching.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserWatchingItem.StartedAt">
            <summary>Gets or sets the UTC datetime, when the movie or episode started.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserWatchingItem.ExpiresAt">
            <summary>Gets or sets the UTC datetime, when the movie or episode expires.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserWatchingItem.Action">
            <summary>
            Gets or sets the action type for the movie or episode.
            See also <seealso cref="T:TraktNet.Enums.TraktHistoryActionType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserWatchingItem.Type">
            <summary>
            Gets or sets the object type, which this watching item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktSyncType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserWatchingItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserWatchingItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserWatchingItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserWatchingItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.ITraktUserWatchingItem.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.Users.ITraktUserWatchingItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Lists.TraktList">
            <summary>A Trakt list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.Name">
            <summary>Gets or sets the list title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.Description">
            <summary>Gets or sets the list description.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.Privacy">
            <summary>Gets or sets the list's visibility status. See also <seealso cref="T:TraktNet.Enums.TraktAccessScope" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.DisplayNumbers">
            <summary>Gets or sets, whether the list displays ranking numbers.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.AllowComments">
            <summary>Gets or sets, whether the list allows comments.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.SortBy">
            <summary>Gets or sets the property, by which the list is sorted.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.SortHow">
            <summary>Gets or sets the sort order of the list.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.CreatedAt">
            <summary>Gets or sets the UTC datetime when the list was created.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the list was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.ItemCount">
            <summary>Gets or sets the list item count.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.CommentCount">
            <summary>Gets or sets the list comment count.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.Likes">
            <summary>Gets or sets the count of likes of the list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.Ids">
            <summary>
            Gets or sets the collection of ids for the list for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktListIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktList.User">
            <summary>
            Gets or sets the list's username of the user, which created this list.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Lists.TraktListIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListIds.Slug">
            <summary>Gets or sets the Trakt slug.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListIds.HasAnyId">
            <summary>Returns, whether any id has been set.</summary>
        </member>
        <member name="M:TraktNet.Objects.Get.Users.Lists.TraktListIds.GetBestId">
            <summary>Gets the most reliable id from those that have been set.</summary>
            <returns>The id as a string or an empty string, if no id is set.</returns>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Lists.TraktListItem">
            <summary>Represents a Trakt user list item.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Id">
            <summary>Gets or sets the id of the list item.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Rank">
            <summary>Gets or sets the ranking number of the list item.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.ListedAt">
            <summary>Gets or sets the UTC datetime, when the list item was added to a list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Type">
            <summary>Gets or sets the list item type. See also <seealso cref="T:TraktNet.Enums.TraktListItemType" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Movie">
            <summary>
            Gets or sets the list item movie, if <see cref="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Type" /> is <see cref="P:TraktNet.Enums.TraktListItemType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Show">
            <summary>
            Gets or sets the list item show, if <see cref="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Type" /> is <see cref="P:TraktNet.Enums.TraktListItemType.Show" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Season">
            <summary>
            Gets or sets the list item season, if <see cref="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Type" /> is <see cref="P:TraktNet.Enums.TraktListItemType.Season" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Episode">
            <summary>
            Gets or sets the list item episode, if <see cref="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Type" /> is <see cref="P:TraktNet.Enums.TraktListItemType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Person">
            <summary>
            Gets or sets the list item person, if <see cref="P:TraktNet.Objects.Get.Users.Lists.TraktListItem.Type" /> is <see cref="P:TraktNet.Enums.TraktListItemType.Person" />.
            See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPerson" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Lists.ITraktList">
            <summary>A Trakt list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.Name">
            <summary>Gets or sets the list title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.Description">
            <summary>Gets or sets the list description.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.Privacy">
            <summary>Gets or sets the list's visibility status. See also <seealso cref="T:TraktNet.Enums.TraktAccessScope" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.DisplayNumbers">
            <summary>Gets or sets, whether the list displays ranking numbers.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.AllowComments">
            <summary>Gets or sets, whether the list allows comments.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.SortBy">
            <summary>Gets or sets the property, by which the list is sorted.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.SortHow">
            <summary>Gets or sets the sort order of the list.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.CreatedAt">
            <summary>Gets or sets the UTC datetime when the list was created.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the list was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.ItemCount">
            <summary>Gets or sets the list item count.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.CommentCount">
            <summary>Gets or sets the list comment count.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.Likes">
            <summary>Gets or sets the count of likes of the list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.Ids">
            <summary>
            Gets or sets the collection of ids for the list for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktListIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktList.User">
            <summary>
            Gets or sets the list's username of the user, which created this list.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.ITraktUser" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Lists.ITraktListIds">
            <summary>A collection of ids for various web services, including the Trakt id, for a Trakt list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktListIds.Trakt">
            <summary>Gets or sets the Trakt numeric id.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktListIds.Slug">
            <summary>Gets or sets the Trakt slug.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Lists.ITraktListItem">
            <summary>Represents a Trakt user list item.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Id">
            <summary>Gets or sets the id of the list item.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Rank">
            <summary>Gets or sets the ranking number of the list item.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.ListedAt">
            <summary>Gets or sets the UTC datetime, when the list item was added to a list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Type">
            <summary>Gets or sets the list item type. See also <seealso cref="T:TraktNet.Enums.TraktListItemType" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Movie">
            <summary>
            Gets or sets the list item movie, if <see cref="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Type" /> is <see cref="P:TraktNet.Enums.TraktListItemType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Show">
            <summary>
            Gets or sets the list item show, if <see cref="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Type" /> is <see cref="P:TraktNet.Enums.TraktListItemType.Show" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Season">
            <summary>
            Gets or sets the list item season, if <see cref="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Type" /> is <see cref="P:TraktNet.Enums.TraktListItemType.Season" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Episode">
            <summary>
            Gets or sets the list item episode, if <see cref="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Type" /> is <see cref="P:TraktNet.Enums.TraktListItemType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Person">
            <summary>
            Gets or sets the list item person, if <see cref="P:TraktNet.Objects.Get.Users.Lists.ITraktListItem.Type" /> is <see cref="P:TraktNet.Enums.TraktListItemType.Person" />.
            See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPerson" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.TraktUserEpisodesStatistics">
            <summary>A collection of Trakt user statistics for episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserEpisodesStatistics.Plays">
            <summary>Gets or sets the number of how many times an user has played episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserEpisodesStatistics.Watched">
            <summary>Gets or sets the number of how many episodes an user has watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserEpisodesStatistics.Minutes">
            <summary>Gets or sets the number of minutes that an user has watched episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserEpisodesStatistics.Collected">
            <summary>Gets or sets the number of how many episodes an user has collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserEpisodesStatistics.Ratings">
            <summary>Gets or sets the number of how many episodes an user has rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserEpisodesStatistics.Comments">
            <summary>Gets or sets the number of how many episodes an user has commented.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.TraktUserMoviesStatistics">
            <summary>A collection of Trakt user statistics for movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserMoviesStatistics.Plays">
            <summary>Gets or sets the number of how many times an user has played movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserMoviesStatistics.Watched">
            <summary>Gets or sets the number of how many movies an user has watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserMoviesStatistics.Minutes">
            <summary>Gets or sets the number of minutes that an user has watched movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserMoviesStatistics.Collected">
            <summary>Gets or sets the number of how many movies an user has collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserMoviesStatistics.Ratings">
            <summary>Gets or sets the number of how many movies an user has rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserMoviesStatistics.Comments">
            <summary>Gets or sets the number of how many movies an user has commented.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.TraktUserNetworkStatistics">
            <summary>A collection of Trakt user statistics about an user's network.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserNetworkStatistics.Friends">
            <summary>Gets or sets the number of friends an user has.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserNetworkStatistics.Followers">
            <summary>Gets or sets the number of followers an user has.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserNetworkStatistics.Following">
            <summary>Gets or sets the number of following users an user has.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.TraktUserRatingsStatistics">
            <summary>A collection of Trakt user statistics for ratings.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserRatingsStatistics.Total">
            <summary>Gets or sets the total number of items an user has rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserRatingsStatistics.Distribution">
            <summary>
            Gets or sets the rating distribution of an user's ratings.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.TraktUserSeasonsStatistics">
            <summary>A collection of Trakt user statistics for seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserSeasonsStatistics.Ratings">
            <summary>Gets or sets the number of how many seasons an user has rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserSeasonsStatistics.Comments">
            <summary>Gets or sets the number of how many seasons an user has commented.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.TraktUserShowsStatistics">
            <summary>A collection of Trakt user statistics for shows.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserShowsStatistics.Watched">
            <summary>Gets or sets the number of how many shows an user has watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserShowsStatistics.Collected">
            <summary>Gets or sets the number of how many shows an user has collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserShowsStatistics.Ratings">
            <summary>Gets or sets the number of how many shows an user has rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserShowsStatistics.Comments">
            <summary>Gets or sets the number of how many shows an user has commented.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.TraktUserStatistics">
            <summary>A collection of Trakt user statistics.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserStatistics.Movies">
            <summary>
            Gets or sets a collection of Trakt user statistics for movies.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserMoviesStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserStatistics.Shows">
            <summary>
            Gets or sets a collection of Trakt user statistics for shows.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserShowsStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserStatistics.Seasons">
            <summary>
            Gets or sets a collection of Trakt user statistics for seasons.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserSeasonsStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserStatistics.Episodes">
            <summary>
            Gets or sets a collection of Trakt user statistics for episodes.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserEpisodesStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserStatistics.Network">
            <summary>
            Gets or sets a collection of Trakt user statistics about an user's network.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserNetworkStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.TraktUserStatistics.Ratings">
            <summary>
            Gets or sets a collection of Trakt user statistics for ratings.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserRatingsStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserEpisodesStatistics">
            <summary>A collection of Trakt user statistics for episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserEpisodesStatistics.Plays">
            <summary>Gets or sets the number of how many times an user has played episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserEpisodesStatistics.Watched">
            <summary>Gets or sets the number of how many episodes an user has watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserEpisodesStatistics.Minutes">
            <summary>Gets or sets the number of minutes that an user has watched episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserEpisodesStatistics.Collected">
            <summary>Gets or sets the number of how many episodes an user has collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserEpisodesStatistics.Ratings">
            <summary>Gets or sets the number of how many episodes an user has rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserEpisodesStatistics.Comments">
            <summary>Gets or sets the number of how many episodes an user has commented.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserMoviesStatistics">
            <summary>A collection of Trakt user statistics for movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserMoviesStatistics.Plays">
            <summary>Gets or sets the number of how many times an user has played movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserMoviesStatistics.Watched">
            <summary>Gets or sets the number of how many movies an user has watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserMoviesStatistics.Minutes">
            <summary>Gets or sets the number of minutes that an user has watched movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserMoviesStatistics.Collected">
            <summary>Gets or sets the number of how many movies an user has collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserMoviesStatistics.Ratings">
            <summary>Gets or sets the number of how many movies an user has rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserMoviesStatistics.Comments">
            <summary>Gets or sets the number of how many movies an user has commented.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserNetworkStatistics">
            <summary>A collection of Trakt user statistics about an user's network.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserNetworkStatistics.Friends">
            <summary>Gets or sets the number of friends an user has.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserNetworkStatistics.Followers">
            <summary>Gets or sets the number of followers an user has.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserNetworkStatistics.Following">
            <summary>Gets or sets the number of following users an user has.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserRatingsStatistics">
            <summary>A collection of Trakt user statistics for ratings.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserRatingsStatistics.Total">
            <summary>Gets or sets the total number of items an user has rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserRatingsStatistics.Distribution">
            <summary>
            Gets or sets the rating distribution of an user's ratings.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserSeasonsStatistics">
            <summary>A collection of Trakt user statistics for seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserSeasonsStatistics.Ratings">
            <summary>Gets or sets the number of how many seasons an user has rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserSeasonsStatistics.Comments">
            <summary>Gets or sets the number of how many seasons an user has commented.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserShowsStatistics">
            <summary>A collection of Trakt user statistics for shows.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserShowsStatistics.Watched">
            <summary>Gets or sets the number of how many shows an user has watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserShowsStatistics.Collected">
            <summary>Gets or sets the number of how many shows an user has collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserShowsStatistics.Ratings">
            <summary>Gets or sets the number of how many shows an user has rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserShowsStatistics.Comments">
            <summary>Gets or sets the number of how many shows an user has commented.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserStatistics">
            <summary>A collection of Trakt user statistics.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserStatistics.Movies">
            <summary>
            Gets or sets a collection of Trakt user statistics for movies.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserMoviesStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserStatistics.Shows">
            <summary>
            Gets or sets a collection of Trakt user statistics for shows.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserShowsStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserStatistics.Seasons">
            <summary>
            Gets or sets a collection of Trakt user statistics for seasons.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserSeasonsStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserStatistics.Episodes">
            <summary>
            Gets or sets a collection of Trakt user statistics for episodes.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserEpisodesStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserStatistics.Network">
            <summary>
            Gets or sets a collection of Trakt user statistics about an user's network.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserNetworkStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Users.Statistics.ITraktUserStatistics.Ratings">
            <summary>
            Gets or sets a collection of Trakt user statistics for ratings.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Statistics.ITraktUserRatingsStatistics" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Watched.TraktWatchedMovie">
            <summary>Contains information about a watched Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Plays">
            <summary>Gets or sets the number of plays for the watched movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.LastWatchedAt">
            <summary>Gets or sets the UTC datetime, when the movie was last watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.LastUpdatedAt">
            <summary>Gets or sets the UTC datetime, when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Title">
            <summary>Gets or sets the movie title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Year">
            <summary>Gets or sets the movie release year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Ids">
            <summary>
            Gets or sets the collection of ids for the movie for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Tagline">
            <summary>Gets or sets the movie tagline.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Overview">
            <summary>Gets or sets the synopsis of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Released">
            <summary>Gets or sets the UTC datetime when the movie was released.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Runtime">
            <summary>Gets or sets the runtime for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Trailer">
            <summary>Gets or sets the web address of a trailer for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Homepage">
            <summary>Gets or sets the web address of the homepage of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Rating">
            <summary>Gets or sets the average user rating of the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Votes">
            <summary>Gets or sets the number of votes for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.LanguageCode">
            <summary>Gets or sets the two letter language code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Certification">
            <summary>Gets or sets the content certification of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.CountryCode">
            <summary>Gets or sets the content country code of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.CommentCount">
            <summary>Gets or sets the comment count of the movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedMovie.Status">
            <summary>Gets or sets the movie's current status. See also <seealso cref="T:TraktNet.Enums.TraktMovieStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Watched.TraktWatchedShow">
            <summary>Contains information about a watched Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Plays">
            <summary>Gets or sets the number of plays for the watched show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.LastWatchedAt">
            <summary>Gets or sets the UTC datetime, when the show was last watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.LastUpdatedAt">
            <summary>Gets or sets the UTC datetime, when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.ResetAt">
            <summary>Gets or sets the UTC datetime, when the show was resetted.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.WatchedSeasons">
            <summary>
            Gets or sets a list of watched seasons in the watched show.
            See also <seealso cref="T:TraktNet.Objects.Get.Watched.ITraktWatchedShowSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Title">
            <summary>Gets or sets the show title.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Year">
            <summary>Gets or sets the show release year (first episode of the first season).</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Ids">
            <summary>
            Gets or sets the collection of ids for the show for various web services.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Overview">
            <summary>Gets or sets the synopsis of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.FirstAired">
            <summary>Gets or sets the UTC datetime when the first episode of the first season of the show was aired.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Airs">
            <summary>Gets or sets the air time of the show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowAirs" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Runtime">
            <summary>Gets or sets the runtime for the show's episodes, in minutes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Certification">
            <summary>Gets or sets the content certification of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Network">
            <summary>Gets or sets the producing network name of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.CountryCode">
            <summary>Gets or sets the two letter language code for the country in which the show is produced.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Trailer">
            <summary>Gets or sets the web address of a trailer for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Homepage">
            <summary>Gets or sets the web address of the homepage of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Status">
            <summary>Gets or sets the show's current status. See also <seealso cref="T:TraktNet.Enums.TraktShowStatus" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Rating">
            <summary>Gets or sets the average user rating of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Votes">
            <summary>Gets or sets the number of votes for the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.UpdatedAt">
            <summary>Gets or sets the UTC datetime when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.LanguageCode">
            <summary>Gets or sets the two letter language code of the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.AvailableTranslationLanguageCodes">
            <summary>Gets or sets the list of translation language codes (two letters) for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Genres">
            <summary>Gets or sets the collection of Trakt genre slugs for the show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.AiredEpisodes">
            <summary>Gets or sets the absolute number of already aired episodes in all seasons of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.Seasons">
            <summary>Gets or sets the collection of Trakt seasons for the show. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShow.CommentCount">
            <summary>Gets or sets the comment count of the show.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Watched.TraktWatchedShowEpisode">
            <summary>Contains information about a watched Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShowEpisode.Number">
            <summary>Gets or sets the number of the watched episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShowEpisode.Plays">
            <summary>Gets or sets the number of plays for the watched episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShowEpisode.LastWatchedAt">
            <summary>Gets or sets the UTC datetime, when the episode was last watched.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Watched.TraktWatchedShowSeason">
            <summary>Contains information about a watched Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShowSeason.Number">
            <summary>Gets or sets the number of the watched season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.TraktWatchedShowSeason.Episodes">
            <summary>
            Gets or sets a list of watched episodes in the watched season.
            See also <seealso cref="T:TraktNet.Objects.Get.Watched.ITraktWatchedShowEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Watched.ITraktWatchedMovie">
            <summary>Contains information about a watched Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedMovie.Plays">
            <summary>Gets or sets the number of plays for the watched movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedMovie.LastWatchedAt">
            <summary>Gets or sets the UTC datetime, when the movie was last watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedMovie.LastUpdatedAt">
            <summary>Gets or sets the UTC datetime, when the movie was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedMovie.Movie">
            <summary>Gets or sets the Trakt movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Watched.ITraktWatchedShow">
            <summary>Contains information about a watched Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedShow.Plays">
            <summary>Gets or sets the number of plays for the watched show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedShow.LastWatchedAt">
            <summary>Gets or sets the UTC datetime, when the show was last watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedShow.LastUpdatedAt">
            <summary>Gets or sets the UTC datetime, when the show was last updated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedShow.ResetAt">
            <summary>Gets or sets the UTC datetime, when the show was resetted.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedShow.Show">
            <summary>Gets or sets the Trakt show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedShow.WatchedSeasons">
            <summary>
            Gets or sets a list of watched seasons in the watched show.
            See also <seealso cref="T:TraktNet.Objects.Get.Watched.ITraktWatchedShowSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Watched.ITraktWatchedShowEpisode">
            <summary>Contains information about a watched Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedShowEpisode.Number">
            <summary>Gets or sets the number of the watched episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedShowEpisode.Plays">
            <summary>Gets or sets the number of plays for the watched episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedShowEpisode.LastWatchedAt">
            <summary>Gets or sets the UTC datetime, when the episode was last watched.</summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Watched.ITraktWatchedShowSeason">
            <summary>Contains information about a watched Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedShowSeason.Number">
            <summary>Gets or sets the number of the watched season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watched.ITraktWatchedShowSeason.Episodes">
            <summary>
            Gets or sets a list of watched episodes in the watched season.
            See also <seealso cref="T:TraktNet.Objects.Get.Watched.ITraktWatchedShowEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem">
            <summary>A Trakt watchlist item, containing a movie, show, season and / or episode and information about it.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.ListedAt">
            <summary>Gets or sets the UTC datetime, when the movie, show, season and / or episode was listed.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.Type">
            <summary>
            Gets or sets the object type, which this watchlist item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktSyncItemType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Show" />.
            May also be set, if <see cref="P:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Episode" /> or
            <see cref="P:TraktNet.Enums.TraktSyncItemType.Season" />.
            <para>See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.</para>
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.Season">
            <summary>
            Gets or sets the season, if <see cref="P:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Season" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem">
            <summary>A Trakt watchlist item, containing a movie, show, season and / or episode and information about it.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.ListedAt">
            <summary>Gets or sets the UTC datetime, when the movie, show, season and / or episode was listed.</summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.Type">
            <summary>
            Gets or sets the object type, which this watchlist item contains.
            See also <seealso cref="T:TraktNet.Enums.TraktSyncItemType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.Movie">
            <summary>
            Gets or sets the movie, if <see cref="P:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Movie" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.Show">
            <summary>
            Gets or sets the show, if <see cref="P:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Show" />.
            May also be set, if <see cref="P:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Episode" /> or
            <see cref="P:TraktNet.Enums.TraktSyncItemType.Season" />.
            <para>See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.</para>
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.Season">
            <summary>
            Gets or sets the season, if <see cref="P:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Season" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.Episode">
            <summary>
            Gets or sets the episode, if <see cref="P:TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.Type" /> is <see cref="P:TraktNet.Enums.TraktSyncItemType.Episode" />.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.TraktCheckinPost.Sharing">
            <summary>
            Gets or sets the sharing options for the checkin post.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.TraktCheckinPost.Message">
            <summary>Gets or sets the message for the checkin post.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.TraktCheckinPost.AppVersion">
            <summary>Gets or sets the app version for the checkin post.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.TraktCheckinPost.AppDate">
            <summary>Gets or sets the app build date for the checkin post.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.TraktCheckinPost.FoursquareVenueId">
            <summary>Gets or sets the Foursquare Venue Id for the checkin post.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.TraktCheckinPost.FoursquareVenueName">
            <summary>Gets or sets the Foursquare Venue Name for the checkin post.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Checkins.TraktEpisodeCheckinPost">
            <summary>A checkin post for a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.TraktEpisodeCheckinPost.Episode">
            <summary>
            Gets or sets the required Trakt episode for the checkin post.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.TraktEpisodeCheckinPost.Show">
            <summary>
            Gets or sets the Trakt show for the checkin post.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Checkins.TraktMovieCheckinPost">
            <summary>A checkin post for a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.TraktMovieCheckinPost.Movie">
            <summary>
            Gets or sets the required Trakt movie for the checkin post.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.ITraktCheckinPost.Sharing">
            <summary>
            Gets or sets the sharing options for the checkin post.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.ITraktCheckinPost.Message">
            <summary>Gets or sets the message for the checkin post.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.ITraktCheckinPost.AppVersion">
            <summary>Gets or sets the app version for the checkin post.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.ITraktCheckinPost.AppDate">
            <summary>Gets or sets the app build date for the checkin post.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.ITraktCheckinPost.FoursquareVenueId">
            <summary>Gets or sets the Foursquare Venue Id for the checkin post.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.ITraktCheckinPost.FoursquareVenueName">
            <summary>Gets or sets the Foursquare Venue Name for the checkin post.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Checkins.ITraktEpisodeCheckinPost">
            <summary>A checkin post for a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.ITraktEpisodeCheckinPost.Episode">
            <summary>
            Gets or sets the required Trakt episode for the checkin post.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.ITraktEpisodeCheckinPost.Show">
            <summary>
            Gets or sets the Trakt show for the checkin post.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Checkins.ITraktMovieCheckinPost">
            <summary>A checkin post for a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.ITraktMovieCheckinPost.Movie">
            <summary>
            Gets or sets the required Trakt movie for the checkin post.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Checkins.Responses.TraktCheckinPostErrorResponse">
            <summary>Represents a checkin error response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.TraktCheckinPostErrorResponse.ExpiresAt">
            <summary>Gets or sets the UTC datetime, when the current checkin expires.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.TraktCheckinPostResponse.Id">
            <summary>Gets or sets the history id for the checkin response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.TraktCheckinPostResponse.WatchedAt">
            <summary>Gets or sets the UTC datetime, when the checked in movie or episode was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.TraktCheckinPostResponse.Sharing">
            <summary>
            Gets or sets the sharing options for the checkin response.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Checkins.Responses.TraktEpisodeCheckinPostResponse">
            <summary>Represents an episode checkin response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.TraktEpisodeCheckinPostResponse.Episode">
            <summary>
            Gets or sets the Trakt episode, which was checked in.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.TraktEpisodeCheckinPostResponse.Show">
            <summary>
            Gets or sets the Trakt show for the episode, which was checked in.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Checkins.Responses.TraktMovieCheckinPostResponse">
            <summary>Represents a movie checkin response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.TraktMovieCheckinPostResponse.Movie">
            <summary>
            Gets or sets the Trakt movie, which was checked in.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Checkins.Responses.ITraktCheckinPostErrorResponse">
            <summary>Represents a checkin error response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.ITraktCheckinPostErrorResponse.ExpiresAt">
            <summary>Gets or sets the UTC datetime, when the current checkin expires.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.ITraktCheckinPostResponse.Id">
            <summary>Gets or sets the history id for the checkin response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.ITraktCheckinPostResponse.WatchedAt">
            <summary>Gets or sets the UTC datetime, when the checked in movie or episode was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.ITraktCheckinPostResponse.Sharing">
            <summary>
            Gets or sets the sharing options for the checkin response.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Checkins.Responses.ITraktEpisodeCheckinPostResponse">
            <summary>Represents an episode checkin response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.ITraktEpisodeCheckinPostResponse.Episode">
            <summary>
            Gets or sets the Trakt episode, which was checked in.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.ITraktEpisodeCheckinPostResponse.Show">
            <summary>
            Gets or sets the Trakt show for the episode, which was checked in.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Checkins.Responses.ITraktMovieCheckinPostResponse">
            <summary>Represents a movie checkin response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Checkins.Responses.ITraktMovieCheckinPostResponse.Movie">
            <summary>
            Gets or sets the Trakt movie, which was checked in.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.TraktCommentPost.Comment">
            <summary>Gets or sets the required comment's content.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.TraktCommentPost.Spoiler">
            <summary>Gets or sets, whether the comment contains spoiler.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.TraktCommentPost.Sharing">
            <summary>
            Gets or sets the sharing options for the comment post.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.TraktCommentReplyPost">
            <summary>A comment reply post.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.TraktCommentUpdatePost">
            <summary>A comment update post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.TraktCommentUpdatePost.Comment">
            <summary>Gets or sets the required comment's content.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.TraktCommentUpdatePost.Spoiler">
            <summary>Gets or sets, whether the comment contains spoiler.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.TraktEpisodeCommentPost">
            <summary>An episode comment post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.TraktEpisodeCommentPost.Episode">
            <summary>
            Gets or sets the required Trakt episode for the episode comment post.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.TraktListCommentPost">
            <summary>A list comment post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.TraktListCommentPost.List">
            <summary>
            Gets or sets the required Trakt list for the list comment post.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.TraktMovieCommentPost">
            <summary>A movie comment post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.TraktMovieCommentPost.Movie">
            <summary>
            Gets or sets the required Trakt movie for the movie comment post.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.TraktSeasonCommentPost">
            <summary>A season comment post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.TraktSeasonCommentPost.Season">
            <summary>
            Gets or sets the required Trakt season for the season comment post.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.TraktShowCommentPost">
            <summary>A show comment post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.TraktShowCommentPost.Show">
            <summary>
            Gets or sets the required Trakt show for the show comment post.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.ITraktCommentPost.Comment">
            <summary>Gets or sets the required comment's content.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.ITraktCommentPost.Spoiler">
            <summary>Gets or sets, whether the comment contains spoiler.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.ITraktCommentPost.Sharing">
            <summary>
            Gets or sets the sharing options for the comment post.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.ITraktCommentReplyPost">
            <summary>A comment reply post.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.ITraktCommentUpdatePost">
            <summary>A comment update post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.ITraktCommentUpdatePost.Comment">
            <summary>Gets or sets the required comment's content.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.ITraktCommentUpdatePost.Spoiler">
            <summary>Gets or sets, whether the comment contains spoiler.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.ITraktEpisodeCommentPost">
            <summary>An episode comment post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.ITraktEpisodeCommentPost.Episode">
            <summary>
            Gets or sets the required Trakt episode for the episode comment post.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.ITraktListCommentPost">
            <summary>A list comment post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.ITraktListCommentPost.List">
            <summary>
            Gets or sets the required Trakt list for the list comment post.
            See also <seealso cref="T:TraktNet.Objects.Get.Users.Lists.ITraktList" />.
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.ITraktMovieCommentPost">
            <summary>A movie comment post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.ITraktMovieCommentPost.Movie">
            <summary>
            Gets or sets the required Trakt movie for the movie comment post.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.ITraktSeasonCommentPost">
            <summary>A season comment post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.ITraktSeasonCommentPost.Season">
            <summary>
            Gets or sets the required Trakt season for the season comment post.
            See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeason" />.
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.ITraktShowCommentPost">
            <summary>A show comment post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.ITraktShowCommentPost.Show">
            <summary>
            Gets or sets the required Trakt show for the show comment post.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.Responses.TraktCommentPostResponse">
            <summary>Represents a comment post response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.Responses.TraktCommentPostResponse.Sharing">
            <summary>
            Gets or sets the sharing options of the comment post response.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Comments.Responses.ITraktCommentPostResponse">
            <summary>Represents a comment post response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Comments.Responses.ITraktCommentPostResponse.Sharing">
            <summary>
            Gets or sets the sharing options of the comment post response.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.PostEpisode">
            <summary>Contains an episode number, optional metadata about the episode and an optional datetime.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostEpisode.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostEpisode" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostEpisode.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostEpisode" /> class.</summary>
            <param name="number">The number of this episode.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostEpisode.#ctor(System.Int32,TraktNet.Objects.Basic.ITraktMetadata)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostEpisode" /> class.</summary>
            <param name="number">The number of this episode.</param>
            <param name="metadata">Metadata about the episode.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostEpisode.#ctor(System.Int32,TraktNet.Objects.Basic.ITraktMetadata,System.Nullable{System.DateTime})">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostEpisode" /> class.</summary>
            <param name="number">The number of this episode.</param>
            <param name="metadata">Metadata about the episode.</param>
            <param name="at">An UTC datetime.</param>
        </member>
        <member name="P:TraktNet.Objects.Post.PostEpisode.Number">
            <summary>Gets or sets the number of this episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.PostEpisode.Metadata">
            <summary>Gets or sets the metadata of this episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.PostEpisode.At">
            <summary>Gets or sets a UTC datetime of this episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.PostEpisodes">
            <summary>A list of episode numbers.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostEpisodes.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostEpisodes" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostEpisodes.Add(System.Int32,TraktNet.Objects.Basic.ITraktMetadata,System.Nullable{System.DateTime})">
            <summary>Adds the given episode number to the list.</summary>
            <param name="episode">The episode number, which will be added to the list.</param>
            <param name="metadata">Metadata about the given episode.</param>
            <param name="at">An UTC datetime.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostEpisodes.Add(TraktNet.Objects.Post.PostEpisode,TraktNet.Objects.Post.PostEpisode[])">
            <summary>Adds the given episode numbers to the list.</summary>
            <param name="episode">An episode number, which will be added to the list.</param>
            <param name="episodes">An optional array of episode numbers, which will be added to the list.</param>
        </member>
        <member name="T:TraktNet.Objects.Post.PostHistoryEpisode">
            <summary>Contains an episode number and an optional datetime, when it was watched.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistoryEpisode.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostHistoryEpisode" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistoryEpisode.#ctor(System.Int32,System.Nullable{System.DateTime})">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostHistoryEpisode" /> class.</summary>
            <param name="number">The number of this episode.</param>
            <param name="watchedAt">The UTC datetime, when this episode was watched.</param>
        </member>
        <member name="P:TraktNet.Objects.Post.PostHistoryEpisode.Number">
            <summary>Gets or sets the number of this episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.PostHistoryEpisode.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when this episode was watched.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.PostHistoryEpisodes">
            <summary>
            A list of episode numbers.
            <para>Each episode number can have an optional datetime, when it was watched.</para>
            </summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistoryEpisodes.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostHistoryEpisodes" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistoryEpisodes.Add(System.Int32,System.Nullable{System.DateTime})">
            <summary>Adds the given episode number to the list.</summary>
            <param name="episode">The episode number, which will be added to the list.</param>
            <param name="watchedAt">An UTC datetime, when the episode was watched.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistoryEpisodes.Add(TraktNet.Objects.Post.PostHistoryEpisode,TraktNet.Objects.Post.PostHistoryEpisode[])">
            <summary>Adds the given episode numbers to the list.</summary>
            <param name="episode">An episode number. See also <see cref="T:TraktNet.Objects.Post.PostHistoryEpisode" />.</param>
            <param name="episodes">An optional list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostHistoryEpisode" />.</param>
        </member>
        <member name="T:TraktNet.Objects.Post.PostHistorySeason">
            <summary>
            Contains a season number and an optional datetime, when it was watched.
            <para>Can also contain an optional list of episodes numbers.</para>
            </summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistorySeason.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostHistorySeason" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistorySeason.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostHistorySeason" /> class.</summary>
            <param name="number">The number of this season.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistorySeason.#ctor(System.Int32,System.Nullable{System.DateTime})">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostHistorySeason" /> class.</summary>
            <param name="number">The number of this season.</param>
            <param name="watchedAt">An UTC datetime, when this season was watched.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistorySeason.#ctor(System.Int32,System.Nullable{System.DateTime},TraktNet.Objects.Post.PostHistoryEpisodes)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostHistorySeason" /> class.</summary>
            <param name="number">The number of this season.</param>
            <param name="watchedAt">An UTC datetime, when this season was watched.</param>
            <param name="episodes">>A list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostHistoryEpisodes" />.</param>
        </member>
        <member name="P:TraktNet.Objects.Post.PostHistorySeason.Number">
            <summary>Gets or sets the number of this season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.PostHistorySeason.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when this season was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.PostHistorySeason.Episodes">
            <summary>Gets or sets a list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostHistoryEpisodes" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.PostHistorySeasons">
            <summary>
            A collection of season and episode numbers.
            <para>Can also contain watched datetimes for each season and episode number.</para>
            </summary>
            <example>
            This example shows an instantiation of this class.
            <code>
            new PostHistorySeasons
            {
                1,
                { 2 },
                { 3, DateTime.Now },
                { 4, new PostHistoryEpisodes { 1 } },
                { 5, DateTime.Now, new PostHistoryEpisodes { 2 } },
                { 6, new PostHistoryEpisodes { 1, 2, 3 } },
                { 7, DateTime.Now, new PostHistoryEpisodes { 1, 2, 3 } },
                { 8, new PostHistoryEpisodes
                    {
                        { 1, DateTime.Now }
                    }
                },
                { 9, DateTime.Now, new PostHistoryEpisodes
                    {
                        { 2, DateTime.Now  }
                    }
                },
                { 10, new PostHistoryEpisodes
                    {
                        { 1, DateTime.Now },
                        2,
                        { 3, DateTime.Now }
                    }
                },
                { 11, DateTime.Now, new PostHistoryEpisodes
                    {
                        { 2, DateTime.Now  },
                        { 3 },
                        4
                    }
                },
            };
            </code>
            </example>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistorySeasons.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostHistorySeasons" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistorySeasons.Add(System.Int32)">
            <summary>Adds a season number to the collection.</summary>
            <param name="season">The season number, which will be added.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistorySeasons.Add(System.Int32,System.DateTime)">
            <summary>Adds a season number to the collection.</summary>
            <param name="season">The season number, which will be added.</param>
            <param name="watchedAt">An UTC datetime, when the season was watched.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistorySeasons.Add(System.Int32,System.DateTime,TraktNet.Objects.Post.PostHistoryEpisodes)">
            <summary>Adds a season number to the collection.</summary>
            <param name="season">The season number, which will be added.</param>
            <param name="watchedAt">An UTC datetime, when the season was watched.</param>
            <param name="episodes">A list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostHistoryEpisodes" />.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostHistorySeasons.Add(System.Int32,TraktNet.Objects.Post.PostHistoryEpisodes)">
            <summary>Adds a season number to the collection.</summary>
            <param name="season">The season number, which will be added.</param>
            <param name="episodes">A list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostHistoryEpisodes" />.</param>
        </member>
        <member name="T:TraktNet.Objects.Post.PostRatingsEpisode">
            <summary>Contains an episode number and an optional rating and an optional datetime, when it was rated.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsEpisode.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostRatingsEpisode" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsEpisode.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostRatingsEpisode" /> class.</summary>
            <param name="number">The number of this episode.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsEpisode.#ctor(System.Int32,System.Nullable{System.Int32})">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostRatingsEpisode" /> class.</summary>
            <param name="number">The number of this episode.</param>
            <param name="rating">The rating for this episode.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsEpisode.#ctor(System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostRatingsEpisode" /> class.</summary>
            <param name="number">The number of this episode.</param>
            <param name="rating">The rating for this episode.</param>
            <param name="ratedAt">The UTC datetime, when this episode was rated.</param>
        </member>
        <member name="P:TraktNet.Objects.Post.PostRatingsEpisode.Number">
            <summary>Gets or sets the number of this episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.PostRatingsEpisode.Rating">
            <summary>Gets or sets the optional rating of this episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.PostRatingsEpisode.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when this episode was rated.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.PostRatingsEpisodes">
            <summary>
            A list of episode numbers.
            <para>Each episode number can have an optional rating and an optional datetime, when it was rated.</para>
            </summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsEpisodes.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostRatingsEpisodes" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsEpisodes.Add(System.Int32)">
            <summary>Adds the given episode number to the list.</summary>
            <param name="episode">The episode number, which will be added to the list.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsEpisodes.Add(System.Int32,System.Int32,System.Nullable{System.DateTime})">
            <summary>Adds the given episode number to the list.</summary>
            <param name="episode">The episode number, which will be added to the list.</param>
            <param name="rating">A rating for the episode.</param>
            <param name="ratedAt">An UTC datetime, when the episode was rated.</param>
        </member>
        <member name="T:TraktNet.Objects.Post.PostRatingsSeason">
            <summary>
            Contains a season number and an optional rating and an optional datetime, when it was rated.
            <para>Can also contain an optional list of episodes numbers.</para>
            </summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsSeason.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostRatingsSeason" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsSeason.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostRatingsSeason" /> class.</summary>
            <param name="number">The number of this season.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsSeason.#ctor(System.Int32,System.Nullable{System.Int32})">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostRatingsSeason" /> class.</summary>
            <param name="number">The number of this season.</param>
            <param name="rating">A rating for the season.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsSeason.#ctor(System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostRatingsSeason" /> class.</summary>
            <param name="number">The number of this season.</param>
            <param name="rating">A rating for the season.</param>
            <param name="ratedAt">An UTC datetime, when this season was rated.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsSeason.#ctor(System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},TraktNet.Objects.Post.PostRatingsEpisodes)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostRatingsSeason" /> class.</summary>
            <param name="number">The number of this season.</param>
            <param name="rating">A rating for the season.</param>
            <param name="ratedAt">An UTC datetime, when this season was rated.</param>
            <param name="episodes">>A list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostRatingsEpisodes" />.</param>
        </member>
        <member name="P:TraktNet.Objects.Post.PostRatingsSeason.Number">
            <summary>Gets or sets the number of this season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.PostRatingsSeason.Rating">
            <summary>Gets or sets the optional rating of this season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.PostRatingsSeason.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when this season was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.PostRatingsSeason.Episodes">
            <summary>Gets or sets a list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostRatingsEpisodes" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.PostRatingsSeasons">
            <summary>
            A collection of season and episode numbers.
            <para>Can also contain ratings and datetimes of the ratings for each season and episode number.</para>
            </summary>
            <example>
            This example shows an instantiation of this class.
            <code>
            new PostRatingsSeasons
            {
                1,
                { 2 },
                { 3, 8 },
                { 3, 8, DateTime.Now },
                { 4, new PostRatingsEpisodes { 1 } },
                { 4, 7, new PostRatingsEpisodes { 1 } },
                { 4, 7, DateTime.Now, new PostRatingsEpisodes { 1 } },
                { 5, new PostRatingsEpisodes { 1, 2, 3 } },
                { 5, 9, new PostRatingsEpisodes { 1, 2, 3 } },
                { 5, 9, DateTime.Now, new PostRatingsEpisodes { 1, 2, 3 } },
                { 6, new PostRatingsEpisodes
                    {
                        1,
                        { 2, 8 },
                        { 2, 8, DateTime.Now }
                    }
                },
                { 6, 10, new PostRatingsEpisodes
                    {
                        1,
                        { 2, 8 },
                        { 2, 8, DateTime.Now }
                    }
                },
                { 6, 10, DateTime.Now, new PostRatingsEpisodes
                    {
                        1,
                        { 2, 8 },
                        { 2, 8, DateTime.Now }
                    }
                }
            };
            </code>
            </example>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsSeasons.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostRatingsSeasons" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsSeasons.Add(System.Int32)">
            <summary>Adds a season number to the collection.</summary>
            <param name="season">The season number, which will be added.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsSeasons.Add(System.Int32,System.Int32,System.Nullable{System.DateTime})">
            <summary>Adds a season number to the collection.</summary>
            <param name="season">The season number, which will be added.</param>
            <param name="rating">A rating for the season number.</param>
            <param name="ratedAt">An UTC datetime, when the season was rated.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsSeasons.Add(System.Int32,System.Int32,System.DateTime,TraktNet.Objects.Post.PostRatingsEpisodes)">
            <summary>Adds a season number to the collection.</summary>
            <param name="season">The season number, which will be added.</param>
            <param name="rating">A rating for the season number.</param>
            <param name="ratedAt">An UTC datetime, when the season was rated.</param>
            <param name="episodes">A list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostRatingsEpisodes" />.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsSeasons.Add(System.Int32,TraktNet.Objects.Post.PostRatingsEpisodes)">
            <summary>Adds a season number to the collection.</summary>
            <param name="season">The season number, which will be added.</param>
            <param name="episodes">A list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostRatingsEpisodes" />.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostRatingsSeasons.Add(System.Int32,System.Int32,TraktNet.Objects.Post.PostRatingsEpisodes)">
            <summary>Adds a season number to the collection.</summary>
            <param name="season">The season number, which will be added.</param>
            <param name="rating">A rating for the season number.</param>
            <param name="episodes">A list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostRatingsEpisodes" />.</param>
        </member>
        <member name="T:TraktNet.Objects.Post.PostSeason">
            <summary>Contains a season number and an optional list of episodes numbers.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostSeason.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostSeason" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostSeason.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostSeason" /> class.</summary>
            <param name="number">The number of this season.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostSeason.#ctor(System.Int32,TraktNet.Objects.Post.PostEpisodes)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostSeason" /> class.</summary>
            <param name="number">The number of this season.</param>
            <param name="episodes">A list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostEpisodes" />.</param>
        </member>
        <member name="P:TraktNet.Objects.Post.PostSeason.Number">
            <summary>Gets or sets the number of this season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.PostSeason.Episodes">
            <summary>Gets or sets a list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostEpisodes" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.PostSeasons">
            <summary>A collection of season and episode numbers.</summary>
            <example>
            This example shows an instantiation of this class.
            <code>
            new PostSeasons
            {
                1,
                { 2, new PostEpisodes { 1, 2, 3 } },
                3,
                { 4 }
            };
            </code>
            </example>
        </member>
        <member name="M:TraktNet.Objects.Post.PostSeasons.#ctor">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Objects.Post.PostSeasons" /> class.</summary>
        </member>
        <member name="M:TraktNet.Objects.Post.PostSeasons.Add(System.Int32)">
            <summary>Adds a season number to the collection.</summary>
            <param name="season">The season number, which will be added.</param>
        </member>
        <member name="M:TraktNet.Objects.Post.PostSeasons.Add(System.Int32,TraktNet.Objects.Post.PostEpisodes)">
            <summary>Adds a season number and a list of episode numbers to the collection.</summary>
            <param name="season">The season number, which will be added.</param>
            <param name="episodes">A list of episode numbers. See also <see cref="T:TraktNet.Objects.Post.PostEpisodes" />.</param>
        </member>
        <member name="T:TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundEpisode">
            <summary>A Trakt episode, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundEpisode.Ids">
            <summary>Gets or sets the ids of the not found episode. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundMovie">
            <summary>A Trakt movie, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundMovie.Ids">
            <summary>Gets or sets the ids of the not found movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundPerson">
            <summary>A Trakt person, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundPerson.Ids">
            <summary>Gets or sets the ids of the not found person. See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPersonIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundSeason">
            <summary>A Trakt season, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundSeason.Ids">
            <summary>Gets or sets the ids of the not found season. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundShow">
            <summary>A Trakt show, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundShow.Ids">
            <summary>Gets or sets the ids of the not found show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundEpisode">
            <summary>A Trakt episode, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundEpisode.Ids">
            <summary>Gets or sets the ids of the not found episode. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundMovie">
            <summary>A Trakt movie, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundMovie.Ids">
            <summary>Gets or sets the ids of the not found movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundPerson">
            <summary>A Trakt person, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundPerson.Ids">
            <summary>Gets or sets the ids of the not found person. See also <seealso cref="T:TraktNet.Objects.Get.People.ITraktPersonIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundSeason">
            <summary>A Trakt season, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundSeason.Ids">
            <summary>Gets or sets the ids of the not found season. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundShow">
            <summary>A Trakt show, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundShow.Ids">
            <summary>Gets or sets the ids of the not found show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Scrobbles.TraktEpisodeScrobblePost">
            <summary>A scrobble post for a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.TraktEpisodeScrobblePost.Episode">
            <summary>
            Gets or sets the required Trakt episode for the scrobble post.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.TraktEpisodeScrobblePost.Show">
            <summary>
            Gets or sets the Trakt show for the scrobble post.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Scrobbles.TraktMovieScrobblePost">
            <summary>A scrobble post for a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.TraktMovieScrobblePost.Movie">
            <summary>
            Gets or sets the required Trakt movie for the scrobble post.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.TraktScrobblePost.Progress">
            <summary>Gets or sets the required progress. Should be a value between 0 and 100.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.TraktScrobblePost.AppVersion">
            <summary>Gets or sets the app version for the scrobble post.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.TraktScrobblePost.AppDate">
            <summary>Gets or sets the app build date for the scrobble post.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Scrobbles.ITraktEpisodeScrobblePost">
            <summary>A scrobble post for a Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.ITraktEpisodeScrobblePost.Episode">
            <summary>
            Gets or sets the required Trakt episode for the scrobble post.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.ITraktEpisodeScrobblePost.Show">
            <summary>
            Gets or sets the Trakt show for the scrobble post.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Scrobbles.ITraktMovieScrobblePost">
            <summary>A scrobble post for a Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.ITraktMovieScrobblePost.Movie">
            <summary>
            Gets or sets the required Trakt movie for the scrobble post.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.ITraktScrobblePost.Progress">
            <summary>Gets or sets the required progress. Should be a value between 0 and 100.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.ITraktScrobblePost.AppVersion">
            <summary>Gets or sets the app version for the scrobble post.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.ITraktScrobblePost.AppDate">
            <summary>Gets or sets the app build date for the scrobble post.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Scrobbles.Responses.TraktEpisodeScrobblePostResponse">
            <summary>Represents an episode scrobble response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.TraktEpisodeScrobblePostResponse.Episode">
            <summary>
            Gets or sets the Trakt episode, which was scrobbled.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.TraktEpisodeScrobblePostResponse.Show">
            <summary>
            Gets or sets the Trakt show for the episode, which was scrobbled.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Scrobbles.Responses.TraktMovieScrobblePostResponse">
            <summary>Represents a movie scrobble response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.TraktMovieScrobblePostResponse.Movie">
            <summary>
            Gets or sets the Trakt movie, which was scrobbled.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.TraktScrobblePostResponse.Id">
            <summary>Gets or sets the history id for the scrobble response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.TraktScrobblePostResponse.Action">
            <summary>
            Gets or sets the action type for the scrobble response.
            See also <seealso cref="T:TraktNet.Enums.TraktScrobbleActionType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.TraktScrobblePostResponse.Progress">
            <summary>Gets or sets the progress for the scrobble response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.TraktScrobblePostResponse.Sharing">
            <summary>
            Gets or sets the sharing options for the scrobble response.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse">
            <summary>Represents an episode scrobble response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse.Episode">
            <summary>
            Gets or sets the Trakt episode, which was scrobbled.
            See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisode" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse.Show">
            <summary>
            Gets or sets the Trakt show for the episode, which was scrobbled.
            See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShow" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Scrobbles.Responses.ITraktMovieScrobblePostResponse">
            <summary>Represents a movie scrobble response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.ITraktMovieScrobblePostResponse.Movie">
            <summary>
            Gets or sets the Trakt movie, which was scrobbled.
            See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovie" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.ITraktScrobblePostResponse.Id">
            <summary>Gets or sets the history id for the scrobble response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.ITraktScrobblePostResponse.Action">
            <summary>
            Gets or sets the action type for the scrobble response.
            See also <seealso cref="T:TraktNet.Enums.TraktScrobbleActionType" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.ITraktScrobblePostResponse.Progress">
            <summary>Gets or sets the progress for the scrobble response.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Scrobbles.Responses.ITraktScrobblePostResponse.Sharing">
            <summary>
            Gets or sets the sharing options for the scrobble response.
            See also <seealso cref="T:TraktNet.Objects.Basic.ITraktSharing" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPost">
            <summary>
            A Trakt collection post, containing all movies, shows and / or episodes,
            which should be added to the user's collection.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPost.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostEpisode" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostEpisode" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostEpisode">
            <summary>
            A Trakt collection post episode, containing the required episode ids,
            optional metadata and an optional datetime, when the episode was collected.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostEpisode.CollectedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt episode was collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostEpisode.Ids">
            <summary>Gets or sets the required episode ids. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostMovie">
            <summary>
            A Trakt collection post movie, containing the required movie ids,
            optional metadata and an optional datetime, when the movie was collected.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostMovie.CollectedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt movie was collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostMovie.Title">
            <summary>Gets or sets the optional title of the Trakt movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostMovie.Year">
            <summary>Gets or sets the optional year of the Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShow">
            <summary>
            A Trakt collection post show, containing the required show ids,
            optional metadata and an optional datetime, when the show was collected.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShow.CollectedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt show was collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShow.Title">
            <summary>Gets or sets the optional title of the Trakt show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShow.Year">
            <summary>Gets or sets the optional year of the Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the collection.
            Otherwise, only the specified seasons and / or episodes will be added to the collection.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShowEpisode">
            <summary>A Trakt collection post episode, containing the required episode number.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShowEpisode.Number">
            <summary>Gets or sets the required season number of the Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShowEpisode.CollectedAt">
            <summary>Gets or sets the collected at UTC datetime of the Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShowSeason">
            <summary>A Trakt collection post season, containing the required season number and optional episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShowSeason.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowEpisode" />s.
            <para>
            If no episodes are set, the whole Trakt season will be added to the collection.
            Otherwise, only the specified episodes will be added to the collection.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost">
            <summary>
            A Trakt collection post, containing all movies, shows and / or episodes,
            which should be added to the user's collection.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostEpisode" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostEpisode" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostEpisode">
            <summary>
            A Trakt collection post episode, containing the required episode ids,
            optional metadata and an optional datetime, when the episode was collected.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostEpisode.CollectedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt episode was collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostEpisode.Ids">
            <summary>Gets or sets the required episode ids. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostMovie">
            <summary>
            A Trakt collection post movie, containing the required movie ids,
            optional metadata and an optional datetime, when the movie was collected.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostMovie.CollectedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt movie was collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostMovie.Title">
            <summary>Gets or sets the optional title of the Trakt movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostMovie.Year">
            <summary>Gets or sets the optional year of the Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow">
            <summary>
            A Trakt collection post show, containing the required show ids,
            optional metadata and an optional datetime, when the show was collected.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow.CollectedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt show was collected.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow.Title">
            <summary>Gets or sets the optional title of the Trakt show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow.Year">
            <summary>Gets or sets the optional year of the Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the collection.
            Otherwise, only the specified seasons and / or episodes will be added to the collection.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowEpisode">
            <summary>A Trakt collection post episode, containing the required episode number.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowEpisode.Number">
            <summary>Gets or sets the required season number of the Trakt episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowEpisode.CollectedAt">
            <summary>Gets or sets the collected at UTC datetime of the Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowSeason">
            <summary>A Trakt collection post season, containing the required season number and optional episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowSeason.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowEpisode" />s.
            <para>
            If no episodes are set, the whole Trakt season will be added to the collection.
            Otherwise, only the specified episodes will be added to the collection.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionPostResponse">
            <summary>
            Represents the response for a collection post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost" />.
            <para>Contains the number of added, updated, existing and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionPostResponse.Updated">
            <summary>
            A collection containing the number of updated movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionPostResponse.Existing">
            <summary>
            A collection containing the number of existing movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionRemovePostResponse">
            <summary>
            Represents the response for a collection remove post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost" />.
            <para>Contains the number of deleted and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionPostResponse">
            <summary>
            Represents the response for a collection post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost" />.
            <para>Contains the number of added, updated, existing and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionPostResponse.Updated">
            <summary>
            A collection containing the number of updated movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionPostResponse.Existing">
            <summary>
            A collection containing the number of existing movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionRemovePostResponse">
            <summary>
            Represents the response for a collection remove post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost" />.
            <para>Contains the number of deleted and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPost">
            <summary>
            A Trakt history post, containing all movies, shows and / or episodes,
            which should be added to the user's history.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPost.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostEpisode" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostEpisode" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostEpisode">
            <summary>
            A Trakt history post episode, containing the required episode ids
            and an optional datetime, when the episode was watched.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostEpisode.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt episode was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostEpisode.Ids">
            <summary>Gets or sets the required episode ids. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostMovie">
            <summary>
            A Trakt history post movie, containing the required movie ids
            and an optional datetime, when the movie was watched.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostMovie.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt movie was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostMovie.Title">
            <summary>Gets or sets the optional title of the Trakt movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostMovie.Year">
            <summary>Gets or sets the optional year of the Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShow">
            <summary>
            A Trakt history post show, containing the required show ids
            and an optional datetime, when the show was watched.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShow.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt show was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShow.Title">
            <summary>Gets or sets the optional title of the Trakt show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShow.Year">
            <summary>Gets or sets the optional year of the Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the history.
            Otherwise, only the specified seasons and / or episodes will be added to the history.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShowEpisode">
            <summary>
            A Trakt history post episode, containing the required episode number
            and an optional datetime, when the episode was watched.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShowEpisode.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt episode was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShowEpisode.Number">
            <summary>Gets or sets the required season number of the Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShowSeason">
            <summary>
            A Trakt history post season, containing the required season number and optional episodes
            and an optional datetime, when the season was watched.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShowSeason.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt season was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShowSeason.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowEpisode" />s.
            <para>
            If no episodes are set, the whole Trakt season will be added to the history.
            Otherwise, only the specified episodes will be added to the history.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePost">
            <summary>
            A Trakt history remove post, containing all movies, shows, episodes and / or history ids,
            which should be removed from the user's history.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePost.HistoryIds">
            <summary>An optional list of history ids, which should be removed.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPost">
            <summary>
            A Trakt history post, containing all movies, shows and / or episodes,
            which should be added to the user's history.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPost.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostEpisode" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostEpisode" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostEpisode">
            <summary>
            A Trakt history post episode, containing the required episode ids
            and an optional datetime, when the episode was watched.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostEpisode.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt episode was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostEpisode.Ids">
            <summary>Gets or sets the required episode ids. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostMovie">
            <summary>
            A Trakt history post movie, containing the required movie ids
            and an optional datetime, when the movie was watched.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostMovie.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt movie was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostMovie.Title">
            <summary>Gets or sets the optional title of the Trakt movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostMovie.Year">
            <summary>Gets or sets the optional year of the Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow">
            <summary>
            A Trakt history post show, containing the required show ids
            and an optional datetime, when the show was watched.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt show was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow.Title">
            <summary>Gets or sets the optional title of the Trakt show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow.Year">
            <summary>Gets or sets the optional year of the Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the history.
            Otherwise, only the specified seasons and / or episodes will be added to the history.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowEpisode">
            <summary>
            A Trakt history post episode, containing the required episode number
            and an optional datetime, when the episode was watched.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowEpisode.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt episode was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowEpisode.Number">
            <summary>Gets or sets the required season number of the Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowSeason">
            <summary>
            A Trakt history post season, containing the required season number and optional episodes
            and an optional datetime, when the season was watched.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowSeason.WatchedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt season was watched.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowSeason.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowEpisode" />s.
            <para>
            If no episodes are set, the whole Trakt season will be added to the history.
            Otherwise, only the specified episodes will be added to the history.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePost">
            <summary>
            A Trakt history remove post, containing all movies, shows, episodes and / or history ids,
            which should be removed from the user's history.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePost.HistoryIds">
            <summary>An optional list of history ids, which should be removed.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryPostResponse">
            <summary>
            Represents the response for a history post. See also <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPost" />.
            <para>Contains the number of added and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponse">
            <summary>
            Represents the response for a history remove post. See also <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePost" />.
            <para>Contains the number of deleted and not found movies, shows, seasons, episodes and history item ids.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows, seasons, episodes and history item ids.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons, episodes and history item ids, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponseGroup">
            <summary>A collection containing the number of movies, shows, seasons, episodes and history item ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponseGroup.HistoryIds">
            <summary>Gets or sets the number of history item ids.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponseNotFoundGroup">
            <summary>A collection containing the ids of movies, shows, seasons, episodes and history items, which were not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponseNotFoundGroup.HistoryIds">
            <summary>Gets or sets a list of Trakt history item ids, which were not found.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryPostResponse">
            <summary>
            Represents the response for a history post. See also <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPost" />.
            <para>Contains the number of added and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponse">
            <summary>
            Represents the response for a history remove post. See also <see cref="T:TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePost" />.
            <para>Contains the number of deleted and not found movies, shows, seasons, episodes and history item ids.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows, seasons, episodes and history item ids.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons, episodes and history item ids, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponseGroup">
            <summary>A collection containing the number of movies, shows, seasons, episodes and history item ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponseGroup.HistoryIds">
            <summary>Gets or sets the number of history item ids.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponseNotFoundGroup">
            <summary>A collection containing the ids of movies, shows, seasons, episodes and history items, which were not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponseNotFoundGroup.HistoryIds">
            <summary>Gets or sets a list of Trakt history item ids, which were not found.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPost">
            <summary>
            A Trakt ratings post, containing all movies, shows and / or episodes,
            which should be added to the user's ratings.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPost.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostEpisode" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostEpisode" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostEpisode">
            <summary>
            A Trakt ratings post episode, containing the required episode ids,
            an optional rating and an optional datetime, when the episode was rated.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostEpisode.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt episode was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostEpisode.Rating">
            <summary>Gets or sets an optional rating for the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostEpisode.Ids">
            <summary>Gets or sets the required episode ids. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostMovie">
            <summary>
            A Trakt ratings post movie, containing the required movie ids,
            an optional rating and an optional datetime, when the movie was rated.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostMovie.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt movie was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostMovie.Rating">
            <summary>Gets or sets an optional rating for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostMovie.Title">
            <summary>Gets or sets the optional title of the Trakt movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostMovie.Year">
            <summary>Gets or sets the optional year of the Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShow">
            <summary>
            A Trakt ratings post show, containing the required show ids,
            an optional rating and an optional datetime, when the show was rated.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShow.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt show was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShow.Rating">
            <summary>Gets or sets an optional rating for the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShow.Title">
            <summary>Gets or sets the optional title of the Trakt show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShow.Year">
            <summary>Gets or sets the optional year of the Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the ratings.
            Otherwise, only the specified seasons and / or episodes will be added to the ratings.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowEpisode">
            <summary>
            A Trakt ratings post episode, containing the required episode number,
            an optional rating and an optional datetime, when the episode was rated.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowEpisode.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt episode was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowEpisode.Rating">
            <summary>Gets or sets an optional rating for the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowEpisode.Number">
            <summary>Gets or sets the required season number of the Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowSeason">
            <summary>
            A Trakt ratings post season, containing the required season number and optional episodes,
            an optional rating and an optional datetime, when the season was rated.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowSeason.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt season was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowSeason.Rating">
            <summary>Gets or sets an optional rating for the season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowSeason.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowEpisode" />s.
            <para>
            If no episodes are set, the whole Trakt season will be added to the ratings.
            Otherwise, only the specified episodes will be added to the ratings.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost">
            <summary>
            A Trakt ratings post, containing all movies, shows and / or episodes,
            which should be added to the user's ratings.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostEpisode" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostEpisode" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostEpisode">
            <summary>
            A Trakt ratings post episode, containing the required episode ids,
            an optional rating and an optional datetime, when the episode was rated.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostEpisode.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt episode was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostEpisode.Rating">
            <summary>Gets or sets an optional rating for the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostEpisode.Ids">
            <summary>Gets or sets the required episode ids. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie">
            <summary>
            A Trakt ratings post movie, containing the required movie ids,
            an optional rating and an optional datetime, when the movie was rated.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt movie was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie.Rating">
            <summary>Gets or sets an optional rating for the movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie.Title">
            <summary>Gets or sets the optional title of the Trakt movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie.Year">
            <summary>Gets or sets the optional year of the Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow">
            <summary>
            A Trakt ratings post show, containing the required show ids,
            an optional rating and an optional datetime, when the show was rated.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt show was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow.Rating">
            <summary>Gets or sets an optional rating for the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow.Title">
            <summary>Gets or sets the optional title of the Trakt show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow.Year">
            <summary>Gets or sets the optional year of the Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the ratings.
            Otherwise, only the specified seasons and / or episodes will be added to the ratings.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowEpisode">
            <summary>
            A Trakt ratings post episode, containing the required episode number,
            an optional rating and an optional datetime, when the episode was rated.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowEpisode.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt episode was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowEpisode.Rating">
            <summary>Gets or sets an optional rating for the episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowEpisode.Number">
            <summary>Gets or sets the required season number of the Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowSeason">
            <summary>
            A Trakt ratings post season, containing the required season number and optional episodes,
            an optional rating and an optional datetime, when the season was rated.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowSeason.RatedAt">
            <summary>Gets or sets the optional UTC datetime, when the Trakt season was rated.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowSeason.Rating">
            <summary>Gets or sets an optional rating for the season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowSeason.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowEpisode" />s.
            <para>
            If no episodes are set, the whole Trakt season will be added to the ratings.
            Otherwise, only the specified episodes will be added to the ratings.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponse">
            <summary>
            Represents the response for a ratings post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost" />.
            <para>Contains the number of added and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundEpisode">
            <summary>A rated Trakt episode, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundEpisode.Rating">
            <summary>Gets or sets the rating of the not found episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundEpisode.Ids">
            <summary>Gets or sets the ids of the not found episode. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundGroup">
            <summary>A collection containing the ids of rated movies, shows, seasons and episodes, which were not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundGroup.Movies">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundMovie" />, containing the ids of rated movies, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundGroup.Shows">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundShow" />, containing the ids of rated shows, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundGroup.Seasons">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundSeason" />, containing the ids of rated seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundGroup.Episodes">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundEpisode" />, containing the ids of rated episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundMovie">
            <summary>A rated Trakt movie, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundMovie.Rating">
            <summary>Gets or sets the rating of the not found movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundMovie.Ids">
            <summary>Gets or sets the ids of the not found movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundSeason">
            <summary>A rated Trakt season, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundSeason.Rating">
            <summary>Gets or sets the rating of the not found season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundSeason.Ids">
            <summary>Gets or sets the ids of the not found season. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundShow">
            <summary>A rated Trakt show, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundShow.Rating">
            <summary>Gets or sets the rating of the not found show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundShow.Ids">
            <summary>Gets or sets the ids of the not found show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsRemovePostResponse">
            <summary>
            Represents the response for a ratings remove post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost" />.
            <para>Contains the number of deleted and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponse">
            <summary>
            Represents the response for a ratings post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost" />.
            <para>Contains the number of added and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundEpisode">
            <summary>A rated Trakt episode, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundEpisode.Rating">
            <summary>Gets or sets the rating of the not found episode.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundEpisode.Ids">
            <summary>Gets or sets the ids of the not found episode. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundGroup">
            <summary>A collection containing the ids of rated movies, shows, seasons and episodes, which were not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundGroup.Movies">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundMovie" />, containing the ids of rated movies, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundGroup.Shows">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundShow" />, containing the ids of rated shows, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundGroup.Seasons">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundSeason" />, containing the ids of rated seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundGroup.Episodes">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundEpisode" />, containing the ids of rated episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundMovie">
            <summary>A rated Trakt movie, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundMovie.Rating">
            <summary>Gets or sets the rating of the not found movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundMovie.Ids">
            <summary>Gets or sets the ids of the not found movie. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundSeason">
            <summary>A rated Trakt season, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundSeason.Rating">
            <summary>Gets or sets the rating of the not found season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundSeason.Ids">
            <summary>Gets or sets the ids of the not found season. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundShow">
            <summary>A rated Trakt show, which was not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundShow.Rating">
            <summary>Gets or sets the rating of the not found show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundShow.Ids">
            <summary>Gets or sets the ids of the not found show. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsRemovePostResponse">
            <summary>
            Represents the response for a ratings remove post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost" />.
            <para>Contains the number of deleted and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseGroup">
            <summary>A collection containing the number of movies, shows, seasons and episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseGroup.Movies">
            <summary>Gets or sets the number of movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseGroup.Shows">
            <summary>Gets or sets the number of shows.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseGroup.Seasons">
            <summary>Gets or sets the number of seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseGroup.Episodes">
            <summary>Gets or sets the number of episodes.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseNotFoundGroup">
            <summary>A collection containing the ids of movies, shows, seasons and episodes, which were not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseNotFoundGroup.Movies">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundMovie" />, containing the ids of movies, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseNotFoundGroup.Shows">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundShow" />, containing the ids of shows, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseNotFoundGroup.Seasons">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundSeason" />, containing the ids of seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseNotFoundGroup.Episodes">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundEpisode" />, containing the ids of episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseGroup">
            <summary>A collection containing the number of movies, shows, seasons and episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseGroup.Movies">
            <summary>Gets or sets the number of movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseGroup.Shows">
            <summary>Gets or sets the number of shows.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseGroup.Seasons">
            <summary>Gets or sets the number of seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseGroup.Episodes">
            <summary>Gets or sets the number of episodes.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseNotFoundGroup">
            <summary>A collection containing the ids of movies, shows, seasons and episodes, which were not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseNotFoundGroup.Movies">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundMovie" />, containing the ids of movies, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseNotFoundGroup.Shows">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundShow" />, containing the ids of shows, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseNotFoundGroup.Seasons">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundSeason" />, containing the ids of seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseNotFoundGroup.Episodes">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundEpisode" />, containing the ids of episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPost">
            <summary>
            A Trakt watchlist post, containing all movies, shows and / or episodes,
            which should be added to the user's watchlist.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPost.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostEpisode" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostEpisode" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostEpisode">
            <summary>A Trakt watchlist post episode, containing the required episode ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostEpisode.Ids">
            <summary>Gets or sets the required episode ids. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostMovie">
            <summary>A Trakt watchlist post movie, containing the required movie ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostMovie.Title">
            <summary>Gets or sets the optional title of the Trakt movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostMovie.Year">
            <summary>Gets or sets the optional year of the Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShow">
            <summary>
            A Trakt watchlist post show, containing the required show ids.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShow.Title">
            <summary>Gets or sets the optional title of the Trakt show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShow.Year">
            <summary>Gets or sets the optional year of the Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the watchlist.
            Otherwise, only the specified seasons and / or episodes will be added to the watchlist.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShowEpisode">
            <summary>A Trakt watchlist post episode, containing the required episode number.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShowEpisode.Number">
            <summary>Gets or sets the required season number of the Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShowSeason">
            <summary>A Trakt watchlist post season, containing the required season number and optional episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShowSeason.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowEpisode" />s.
            <para>
            If no episodes are set, the whole Trakt season will be added to the watchlist.
            Otherwise, only the specified episodes will be added to the watchlist.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost">
            <summary>
            A Trakt watchlist post, containing all movies, shows and / or episodes,
            which should be added to the user's watchlist.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostEpisode" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostEpisode" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostEpisode">
            <summary>A Trakt watchlist post episode, containing the required episode ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostEpisode.Ids">
            <summary>Gets or sets the required episode ids. See also <seealso cref="T:TraktNet.Objects.Get.Episodes.ITraktEpisodeIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostMovie">
            <summary>A Trakt watchlist post movie, containing the required movie ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostMovie.Title">
            <summary>Gets or sets the optional title of the Trakt movie.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostMovie.Year">
            <summary>Gets or sets the optional year of the Trakt movie.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShow">
            <summary>
            A Trakt watchlist post show, containing the required show ids.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShow.Title">
            <summary>Gets or sets the optional title of the Trakt show.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShow.Year">
            <summary>Gets or sets the optional year of the Trakt show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the watchlist.
            Otherwise, only the specified seasons and / or episodes will be added to the watchlist.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowEpisode">
            <summary>A Trakt watchlist post episode, containing the required episode number.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowEpisode.Number">
            <summary>Gets or sets the required season number of the Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowSeason">
            <summary>A Trakt watchlist post season, containing the required season number and optional episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowSeason.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowEpisode" />s.
            <para>
            If no episodes are set, the whole Trakt season will be added to the watchlist.
            Otherwise, only the specified episodes will be added to the watchlist.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.Responses.TraktSyncWatchlistPostResponse">
            <summary>
            Represents the response for a watchlist post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost" />.
            <para>Contains the number of added, existing and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.Responses.TraktSyncWatchlistPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.Responses.TraktSyncWatchlistPostResponse.Existing">
            <summary>
            A collection containing the number of existing movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.Responses.TraktSyncWatchlistPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.Responses.TraktSyncWatchlistRemovePostResponse">
            <summary>
            Represents the response for a watchlist remove post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost" />.
            <para>Contains the number of deleted and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.Responses.TraktSyncWatchlistRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.Responses.TraktSyncWatchlistRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistPostResponse">
            <summary>
            Represents the response for a watchlist post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost" />.
            <para>Contains the number of added, existing and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistPostResponse.Existing">
            <summary>
            A collection containing the number of existing movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistRemovePostResponse">
            <summary>
            Represents the response for a watchlist remove post. See also <see cref="T:TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost" />.
            <para>Contains the number of deleted and not found movies, shows, seasons and episodes.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows, seasons and episodes.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons and episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPost">
            <summary>
            An user custom list items post, containing all movies, shows, episodes and / or people,
            which should be added to an user's custom list.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPost.People">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Get.People.ITraktPerson" />s.
            <para>Each <see cref="T:TraktNet.Objects.Get.People.ITraktPerson" /> must have at least a valid Trakt id and a name.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPostMovie">
            <summary>An user custom list items post movie, containing the required movie ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPostShow">
            <summary>
            An user custom list items post show, containing the required show ids.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the custom list.
            Otherwise, only the specified seasons and / or episodes will be added to the custom list.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPostShowEpisode">
            <summary>An user custom list items post episode, containing the required episode number.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPostShowEpisode.Number">
            <summary>Gets or sets the required season number of the Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPostShowSeason">
            <summary>An user custom list items post season, containing the required season number and optional episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.TraktUserCustomListItemsPostShowSeason.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShowEpisode" />s.
            <para>
            If no episodes are set, the whole Trakt season will be added to the custom list.
            Otherwise, only the specified episodes will be added to the custom list.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost">
            <summary>
            An user custom list items post, containing all movies, shows, episodes and / or people,
            which should be added to an user's custom list.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost.People">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Get.People.ITraktPerson" />s.
            <para>Each <see cref="T:TraktNet.Objects.Get.People.ITraktPerson" /> must have at least a valid Trakt id and a name.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostMovie">
            <summary>An user custom list items post movie, containing the required movie ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShow">
            <summary>
            An user custom list items post show, containing the required show ids.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the custom list.
            Otherwise, only the specified seasons and / or episodes will be added to the custom list.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShowEpisode">
            <summary>An user custom list items post episode, containing the required episode number.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShowEpisode.Number">
            <summary>Gets or sets the required season number of the Trakt episode.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShowSeason">
            <summary>An user custom list items post season, containing the required season number and optional episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShowSeason.Episodes">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPostShowEpisode" />s.
            <para>
            If no episodes are set, the whole Trakt season will be added to the custom list.
            Otherwise, only the specified episodes will be added to the custom list.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponse">
            <summary>
            Represents the response for an user custom list items post. See also <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost" />.
            <para>Contains the number of added, existing and not found movies, shows, seasons, episodes and people.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows, seasons, episodes and people.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponse.Existing">
            <summary>
            A collection containing the number of existing movies, shows, seasons, episodes and people.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons, episodes and people, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseGroup">
            <summary>A collection containing the number of movies, shows, seasons, episodes and people.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseGroup.Movies">
            <summary>Gets or sets the number of movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseGroup.Shows">
            <summary>Gets or sets the number of shows.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseGroup.Seasons">
            <summary>Gets or sets the number of seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseGroup.Episodes">
            <summary>Gets or sets the number of episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseGroup.People">
            <summary>Gets or sets the number of people.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseNotFoundGroup">
            <summary>A collection containing the ids of movies, shows, seasons, episodes and people, which were not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseNotFoundGroup.Movies">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundMovie" />, containing the ids of movies, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseNotFoundGroup.Shows">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundShow" />, containing the ids of shows, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseNotFoundGroup.Seasons">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundSeason" />, containing the ids of seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseNotFoundGroup.Episodes">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundEpisode" />, containing the ids of episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsPostResponseNotFoundGroup.People">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundPerson" />, containing the ids of people, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsRemovePostResponse">
            <summary>
            Represents the response for an user custom list items remove post. See also <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost" />.
            <para>Contains the number of deleted and not found movies, shows, seasons, episodes and people.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows, seasons, episodes and people.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.TraktUserCustomListItemsRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons, episodes and people, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponse">
            <summary>
            Represents the response for an user custom list items post. See also <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost" />.
            <para>Contains the number of added, existing and not found movies, shows, seasons, episodes and people.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows, seasons, episodes and people.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponse.Existing">
            <summary>
            A collection containing the number of existing movies, shows, seasons, episodes and people.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons, episodes and people, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseGroup">
            <summary>A collection containing the number of movies, shows, seasons, episodes and people.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseGroup.Movies">
            <summary>Gets or sets the number of movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseGroup.Shows">
            <summary>Gets or sets the number of shows.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseGroup.Seasons">
            <summary>Gets or sets the number of seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseGroup.Episodes">
            <summary>Gets or sets the number of episodes.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseGroup.People">
            <summary>Gets or sets the number of people.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseNotFoundGroup">
            <summary>A collection containing the ids of movies, shows, seasons, episodes and people, which were not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseNotFoundGroup.Movies">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundMovie" />, containing the ids of movies, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseNotFoundGroup.Shows">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundShow" />, containing the ids of shows, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseNotFoundGroup.Seasons">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundSeason" />, containing the ids of seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseNotFoundGroup.Episodes">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundEpisode" />, containing the ids of episodes, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsPostResponseNotFoundGroup.People">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundPerson" />, containing the ids of people, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsRemovePostResponse">
            <summary>
            Represents the response for an user custom list items remove post. See also <see cref="T:TraktNet.Objects.Post.Users.CustomListItems.ITraktUserCustomListItemsPost" />.
            <para>Contains the number of deleted and not found movies, shows, seasons, episodes and people.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows, seasons, episodes and people.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.CustomListItems.Responses.ITraktUserCustomListItemsRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows, seasons, episodes and people, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPost">
            <summary>
            An user hidden items post, containing all movies, shows, and / or episodes,
            which should be added to an user's hidden items list.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPost.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostSeason" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostSeason" /> must have at least a valid Trakt id and a name.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostMovie">
            <summary>An user hidden items post movie, containing the required movie ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostMovie.Title">
            <summary>Gets or sets the movie title.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostMovie.Year">
            <summary>Gets or sets the movie year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostSeason">
            <summary>An user hidden items post season, containing the required season ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostSeason.Ids">
            <summary>Gets or sets the required season ids. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostShow">
            <summary>
            An user hidden items post show, containing the required show ids.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostShow.Title">
            <summary>Gets or sets the title of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostShow.Year">
            <summary>Gets or sets the year of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the hidden items list.
            Otherwise, only the specified seasons will be added to the hidden items list.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostShowSeason">
            <summary>An user hidden items post season, containing the required season number.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost">
            <summary>
            An user hidden items post, containing all movies, shows, and / or episodes,
            which should be added to an user's hidden items list.
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost.Movies">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostMovie" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostMovie" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost.Shows">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShow" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShow" /> must have at least a valid Trakt id.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostSeason" />s.
            <para>Each <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostSeason" /> must have at least a valid Trakt id and a name.</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostMovie">
            <summary>An user hidden items post movie, containing the required movie ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostMovie.Title">
            <summary>Gets or sets the movie title.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostMovie.Year">
            <summary>Gets or sets the movie year.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostMovie.Ids">
            <summary>Gets or sets the required movie ids. See also <seealso cref="T:TraktNet.Objects.Get.Movies.ITraktMovieIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostSeason">
            <summary>An user hidden items post season, containing the required season ids.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostSeason.Ids">
            <summary>Gets or sets the required season ids. See also <seealso cref="T:TraktNet.Objects.Get.Seasons.ITraktSeasonIds" />.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShow">
            <summary>
            An user hidden items post show, containing the required show ids.
            <para>Can also contain optional seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShow.Title">
            <summary>Gets or sets the title of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShow.Year">
            <summary>Gets or sets the year of the show.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShow.Ids">
            <summary>Gets or sets the required show ids. See also <seealso cref="T:TraktNet.Objects.Get.Shows.ITraktShowIds" />.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShow.Seasons">
            <summary>
            An optional list of <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShowSeason" />s.
            <para>
            If no seasons are set, the whole Trakt show will be added to the hidden items list.
            Otherwise, only the specified seasons will be added to the hidden items list.
            </para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShowSeason">
            <summary>An user hidden items post season, containing the required season number.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShowSeason.Number">
            <summary>Gets or sets the required season number of the Trakt season.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponse">
            <summary>
            Represents the response for an user hidden items post. See also <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost" />.
            <para>Contains the number of added and not found movies, shows and seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows and seasons.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows and seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseGroup">
            <summary>A collection containing the number of movies, shows and seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseGroup.Movies">
            <summary>Gets or sets the number of movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseGroup.Shows">
            <summary>Gets or sets the number of shows.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseGroup.Seasons">
            <summary>Gets or sets the number of seasons.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseNotFoundGroup">
            <summary>A collection containing the ids of movies, shows and seasons, which were not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseNotFoundGroup.Movies">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundMovie" />, containing the ids of movies, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseNotFoundGroup.Shows">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundShow" />, containing the ids of shows, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseNotFoundGroup.Seasons">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundSeason" />, containing the ids of seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsRemovePostResponse">
            <summary>
            Represents the response for an user hidden items remove post. See also <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost" />.
            <para>Contains the number of deleted and not found movies, shows and seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows and seasons.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows and seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponse">
            <summary>
            Represents the response for an user hidden items post. See also <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost" />.
            <para>Contains the number of added and not found movies, shows and seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponse.Added">
            <summary>
            A collection containing the number of added movies, shows and seasons.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows and seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseGroup">
            <summary>A collection containing the number of movies, shows and seasons.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseGroup.Movies">
            <summary>Gets or sets the number of movies.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseGroup.Shows">
            <summary>Gets or sets the number of shows.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseGroup.Seasons">
            <summary>Gets or sets the number of seasons.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseNotFoundGroup">
            <summary>A collection containing the ids of movies, shows and seasons, which were not found.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseNotFoundGroup.Movies">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundMovie" />, containing the ids of movies, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseNotFoundGroup.Shows">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundShow" />, containing the ids of shows, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseNotFoundGroup.Seasons">
            <summary>
            A list of <see cref="T:TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundSeason" />, containing the ids of seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsRemovePostResponse">
            <summary>
            Represents the response for an user hidden items remove post. See also <see cref="T:TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost" />.
            <para>Contains the number of deleted and not found movies, shows and seasons.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsRemovePostResponse.Deleted">
            <summary>
            A collection containing the number of deleted movies, shows and seasons.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsRemovePostResponse.NotFound">
            <summary>
            A collection containing the ids of movies, shows and seasons, which were not found.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.TraktUserCustomListPost">
            <summary>An episode custom list post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.TraktUserCustomListPost.Name">
            <summary>Gets or sets the required name of the custom list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.TraktUserCustomListPost.Description">
            <summary>Gets or sets the optional description of the custom list.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.TraktUserCustomListPost.Privacy">
            <summary>
            Gets or sets the optional privacy setting of the custom list.
            See also <seealso cref="T:TraktNet.Enums.TraktAccessScope" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.TraktUserCustomListPost.DisplayNumbers">
            <summary>Gets or sets, whether the custom list should display numbers.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.TraktUserCustomListPost.AllowComments">
            <summary>Gets or sets, whether the custom list allows comments.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.TraktUserCustomListPost.SortBy">
            <summary>Gets or sets the custom list sort-by setting.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.TraktUserCustomListPost.SortHow">
            <summary>Gets or sets the custom list sort-how setting.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.ITraktUserCustomListPost">
            <summary>An episode custom list post.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.ITraktUserCustomListPost.Name">
            <summary>Gets or sets the required name of the custom list.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.ITraktUserCustomListPost.Description">
            <summary>Gets or sets the optional description of the custom list.<para>Nullable</para></summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.ITraktUserCustomListPost.Privacy">
            <summary>
            Gets or sets the optional privacy setting of the custom list.
            See also <seealso cref="T:TraktNet.Enums.TraktAccessScope" />.
            <para>Nullable</para>
            </summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.ITraktUserCustomListPost.DisplayNumbers">
            <summary>Gets or sets, whether the custom list should display numbers.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.ITraktUserCustomListPost.AllowComments">
            <summary>Gets or sets, whether the custom list allows comments.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.ITraktUserCustomListPost.SortBy">
            <summary>Gets or sets the custom list sort-by setting.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.ITraktUserCustomListPost.SortHow">
            <summary>Gets or sets the custom list sort-how setting.</summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.Responses.TraktUserFollowUserPostResponse">
            <summary>Represents the response for the approve of a follower request.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.Responses.TraktUserFollowUserPostResponse.ApprovedAt">
            <summary>Gets or sets the UTC datetime, when the follower request was approved.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.Responses.TraktUserFollowUserPostResponse.User">
            <summary>Gets or sets the <see cref="T:TraktNet.Objects.Get.Users.ITraktUser" />, who was approved.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Objects.Post.Users.Responses.ITraktUserFollowUserPostResponse">
            <summary>Represents the response for the approve of a follower request.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.Responses.ITraktUserFollowUserPostResponse.ApprovedAt">
            <summary>Gets or sets the UTC datetime, when the follower request was approved.</summary>
        </member>
        <member name="P:TraktNet.Objects.Post.Users.Responses.ITraktUserFollowUserPostResponse.User">
            <summary>Gets or sets the <see cref="T:TraktNet.Objects.Get.Users.ITraktUser" />, who was approved.<para>Nullable</para></summary>
        </member>
        <member name="T:TraktNet.Requests.Parameters.TraktExtendedInfo">
            <summary>
            A boolean flag container representing the possible extended options for Trakt requests, allowing retrieving of
            additional data, such as images.<para />
            This class has an fluent interface.
            <para>See <a href ="http://docs.trakt.apiary.io/#introduction/extended-info">"Trakt API Doc - Extended Info"</a> for more information.</para>
            </summary>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> class.
            All flags are disabled by default.
            </summary>
        </member>
        <member name="P:TraktNet.Requests.Parameters.TraktExtendedInfo.Metadata">
            <summary>
            Gets or sets, whether metadata information should be retrieved.
            <para>
            Only supported by <see cref="M:TraktNet.Modules.TraktSyncModule.GetCollectionMoviesAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)" />,
            <see cref="M:TraktNet.Modules.TraktSyncModule.GetCollectionShowsAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)" />,
            <see cref="M:TraktNet.Modules.TraktUsersModule.GetCollectionMoviesAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)" /> and
            <see cref="M:TraktNet.Modules.TraktUsersModule.GetCollectionShowsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)" />.
            Will be ignored otherwise.
            </para>
            <para>See also <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.SetMetadata" /> and <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ResetMetadata" />.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Requests.Parameters.TraktExtendedInfo.Full">
            <summary>
            Gets or sets, whether full information should be retrieved.
            <para>See also <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.SetFull" /> and <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ResetFull" />.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Requests.Parameters.TraktExtendedInfo.NoSeasons">
            <summary>
            Gets or sets, whether no seasons information should be retrieved.
            <para>
            Only supported by <see cref="M:TraktNet.Modules.TraktSyncModule.GetWatchedShowsAsync(TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)" /> and
            <see cref="M:TraktNet.Modules.TraktUsersModule.GetWatchedShowsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.Threading.CancellationToken)" />.
            Will be ignored otherwise.
            </para>
            <para>See also <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.SetNoSeasons" /> and <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ResetNoSeasons" />.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Requests.Parameters.TraktExtendedInfo.Episodes">
            <summary>
            Gets or sets, whether episodes information should be retrieved.
            <para>
            Only supported by <see cref="M:TraktNet.Modules.TraktSeasonsModule.GetAllSeasonsAsync(System.String,TraktNet.Requests.Parameters.TraktExtendedInfo,System.String,System.Threading.CancellationToken)" />.
            Will be ignored otherwise.
            </para>
            <para>See also <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.SetEpisodes" /> and <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ResetEpisodes" />.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Requests.Parameters.TraktExtendedInfo.GuestStars">
            <summary>
            Gets or sets, whether guest_stars information should be retrieved.
            <para>See also <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.SetGuestStars" /> and <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ResetGuestStars" />.</para>
            </summary>
        </member>
        <member name="P:TraktNet.Requests.Parameters.TraktExtendedInfo.HasAnySet">
            <summary>Returns, whether any flag is enabled.</summary>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.SetMetadata">
            <summary>
            Enables the metadata information flag.
            <para>See also <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.Metadata" />.</para>
            </summary>
            <returns>The current <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ResetMetadata">
            <summary>
            Disables the metadata information flag.
            <para>See also <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.Metadata" />.</para>
            </summary>
            <returns>The current <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.SetFull">
            <summary>
            Enables the full information flag.
            <para>See also <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.Full" />.</para>
            </summary>
            <returns>The current <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ResetFull">
            <summary>
            Disables the full information flag.
            <para>See also <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.Full" />.</para>
            </summary>
            <returns>The current <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.SetNoSeasons">
            <summary>
            Enables the no seasons information flag.
            <para>See also <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.NoSeasons" />.</para>
            </summary>
            <returns>The current <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ResetNoSeasons">
            <summary>
            Disables the no seasons information flag.
            <para>See also <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.NoSeasons" />.</para>
            </summary>
            <returns>The current <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.SetEpisodes">
            <summary>
            Enables the episodes information flag.
            <para>See also <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.Episodes" />.</para>
            </summary>
            <returns>The current <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ResetEpisodes">
            <summary>
            Disables the episodes information flag.
            <para>See also <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.Episodes" />.</para>
            </summary>
            <returns>The current <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.SetGuestStars">
            <summary>
            Enables the guest_stars information flag.
            <para>See also <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.GuestStars" />.</para>
            </summary>
            <returns>The current <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ResetGuestStars">
            <summary>
            Disables the guest_stars information flag.
            <para>See also <see cref="P:TraktNet.Requests.Parameters.TraktExtendedInfo.GuestStars" />.</para>
            </summary>
            <returns>The current <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.Reset">
            <summary>Disables all flags.</summary>
            <returns>The current <see cref="T:TraktNet.Requests.Parameters.TraktExtendedInfo" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.Resolve">
            <summary>
            Creates a string representation list of all enabled flags.
            <para>See also <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ToString" />.</para>
            </summary>
            <returns>A list containing string representations of each enabled flag.</returns>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktExtendedInfo.ToString">
            <summary>
            Creates a string containing string representations of all enabled flags separated by a comma.
            <para>See also <see cref="M:TraktNet.Requests.Parameters.TraktExtendedInfo.Resolve" />.</para>
            </summary>
            <returns>A string containing string representations of all enabled flags separated by a comma.</returns>
        </member>
        <member name="T:TraktNet.Requests.Parameters.TraktPagedParameters">
            <summary>
            Container class for pagination parameters.
            <para>
            See <a href ="https://trakt.docs.apiary.io/#introduction/pagination">"Trakt API Doc - Pagination"</a> for more information.
            </para>
            </summary>
        </member>
        <member name="M:TraktNet.Requests.Parameters.TraktPagedParameters.#ctor(System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>Initializes a new instance of <see cref="T:TraktNet.Requests.Parameters.TraktPagedParameters" />.</summary>
            <param name="page">Number of page of results to be returned. Defaults to the first page.</param>
            <param name="limit">Number of results to return per page. Defaults to 10.</param>
        </member>
        <member name="P:TraktNet.Requests.Parameters.TraktPagedParameters.Page">
            <summary>Number of page of results to be returned. Defaults to the first page.</summary>
        </member>
        <member name="P:TraktNet.Requests.Parameters.TraktPagedParameters.Limit">
            <summary>Number of results to return per page. Defaults to 10.</summary>
        </member>
        <member name="T:TraktNet.Responses.Interfaces.ITraktListResponse`1">
            <summary>A Trakt list response with items of content type <typeparamref name="TResponseContentType" />.</summary>
            <typeparam name="TResponseContentType">The content type of the list items.</typeparam>
        </member>
        <member name="T:TraktNet.Responses.Interfaces.ITraktNoContentResponse">
            <summary>A Trakt response with no content.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktNoContentResponse.IsSuccess">
            <summary>Gets, whether the request for this response was successful.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktNoContentResponse.Exception">
            <summary>
            If <see cref="P:TraktNet.Responses.Interfaces.ITraktNoContentResponse.IsSuccess" /> is false and if <see cref="P:TraktNet.Core.TraktConfiguration.ThrowResponseExceptions" /> is set to false,
            this contains the thrown exception.
            </summary>
        </member>
        <member name="T:TraktNet.Responses.Interfaces.ITraktPagedResponse`1">
            <summary>A Trakt paged list response with items of content type <typeparamref name="TResponseContentType" />.</summary>
            <typeparam name="TResponseContentType">The content type of the list items.</typeparam>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktPagedResponseHeaders.PageCount">
            <summary>Gets the page count for this response.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktPagedResponseHeaders.ItemCount">
            <summary>Gets the item count per page for this response.</summary>
        </member>
        <member name="T:TraktNet.Responses.Interfaces.ITraktResponse`1">
            <summary>A Trakt response with content of type <typeparamref name="TResponseContentType" />.</summary>
            <typeparam name="TResponseContentType">The content type.</typeparam>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponse`1.HasValue">
            <summary>Gets, whether this response has a content value set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponse`1.Value">
            <summary>Gets the set content value of this response.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.SortBy">
            <summary>Gets the value of the set "sort-by" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.SortHow">
            <summary>Gets the value of the set "sort-how" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.AppliedSortBy">
            <summary>Gets the value of the set "applied-sort-by" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.AppliedSortHow">
            <summary>Gets the value of the set "applied-sort-how" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.StartDate">
            <summary>Gets the value of the set "start-date" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.EndDate">
            <summary>Gets the value of the set "end-date" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.TrendingUserCount">
            <summary>Gets the value of the set "trending-user-count" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.Page">
            <summary>Gets the value of the set "page" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.Limit">
            <summary>Gets the value of the set "limit" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.IsPrivateUser">
            <summary>Gets the value of the set "is-private-user" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.ItemId">
            <summary>Gets the value of the set "item-id" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.Interfaces.ITraktResponseHeaders.ItemType">
            <summary>Gets the value of the set "item-type" response header. Might not be set.</summary>
        </member>
        <member name="T:TraktNet.Responses.TraktListResponse`1">
            <summary>A Trakt list response with items of content type <typeparamref name="TResponseContentType" />.</summary>
            <typeparam name="TResponseContentType">The content type of the list items.</typeparam>
        </member>
        <member name="M:TraktNet.Responses.TraktListResponse`1.Equals(TraktNet.Responses.TraktListResponse{`0})">
            <summary>
            Compares this instance with another <see cref="T:TraktNet.Responses.TraktListResponse`1" /> instance.
            </summary>
            <param name="other">Another <see cref="T:TraktNet.Responses.TraktListResponse`1" /> instance, which will be compared with this instance.</param>
            <returns>True, of both instances are equal, otherwise false.</returns>
        </member>
        <member name="M:TraktNet.Responses.TraktListResponse`1.GetEnumerator">
            <summary>Gets the enumerator for the list in this response instance.</summary>
            <returns>An enumerator for the list in this response instance.</returns>
        </member>
        <member name="M:TraktNet.Responses.TraktListResponse`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets the enumerator for the list in this response instance.</summary>
            <returns>An enumerator for the list in this response instance.</returns>
        </member>
        <member name="M:TraktNet.Responses.TraktListResponse`1.op_Implicit(TraktNet.Responses.TraktListResponse{`0})~System.Collections.Generic.List{`0}">
            <summary>Enables implicit conversion to <see cref="T:System.Collections.Generic.List`1" /> for this type.</summary>
            <param name="response">The <see cref="T:TraktNet.Responses.TraktListResponse`1" /> instance, which will be converted to <see cref="T:System.Collections.Generic.List`1" />.</param>
        </member>
        <member name="M:TraktNet.Responses.TraktListResponse`1.op_Implicit(System.Collections.Generic.List{`0})~TraktNet.Responses.TraktListResponse{`0}">
            <summary>Enables implicit conversion to <see cref="T:TraktNet.Responses.TraktListResponse`1" /> for this type.</summary>
            <param name="value">The <see cref="T:System.Collections.Generic.List`1" /> instance, which will be converted to <see cref="T:TraktNet.Responses.TraktListResponse`1" />.</param>
        </member>
        <member name="M:TraktNet.Responses.TraktListResponse`1.op_Implicit(TraktNet.Responses.TraktListResponse{`0})~System.Boolean">
            <summary>Enables implicit conversion to bool for this type.</summary>
            <param name="response">The <see cref="T:TraktNet.Responses.TraktListResponse`1" /> instance, which will be converted to bool.</param>
        </member>
        <member name="T:TraktNet.Responses.TraktNoContentResponse">
            <summary>A Trakt response with no content.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktNoContentResponse.IsSuccess">
            <summary>Gets, whether the request for this response was successful.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktNoContentResponse.Exception">
            <summary>
            If <see cref="P:TraktNet.Responses.TraktNoContentResponse.IsSuccess" /> is false and if <see cref="P:TraktNet.Core.TraktConfiguration.ThrowResponseExceptions" /> is set to false,
            this contains the thrown exception.
            </summary>
        </member>
        <member name="M:TraktNet.Responses.TraktNoContentResponse.Equals(TraktNet.Responses.TraktNoContentResponse)">
            <summary>
            Compares this instance with another <see cref="T:TraktNet.Responses.TraktNoContentResponse" /> instance.
            </summary>
            <param name="other">Another <see cref="T:TraktNet.Responses.TraktNoContentResponse" /> instance, which will be compared with this instance.</param>
            <returns>True, of both instances are equal, otherwise false.</returns>
        </member>
        <member name="M:TraktNet.Responses.TraktNoContentResponse.op_Implicit(TraktNet.Responses.TraktNoContentResponse)~System.Boolean">
            <summary>Enables implicit conversion to bool for this type.</summary>
            <param name="response">The <see cref="T:TraktNet.Responses.TraktNoContentResponse" /> instance, which will be converted to bool.</param>
        </member>
        <member name="T:TraktNet.Responses.TraktPagedResponse`1">
            <summary>A Trakt paged list response with items of content type <typeparamref name="TResponseContentType" />.</summary>
            <typeparam name="TResponseContentType">The content type of the list items.</typeparam>
        </member>
        <member name="P:TraktNet.Responses.TraktPagedResponse`1.PageCount">
            <summary>Gets the page count for this response.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktPagedResponse`1.ItemCount">
            <summary>Gets the item count per page for this response.</summary>
        </member>
        <member name="M:TraktNet.Responses.TraktPagedResponse`1.Equals(TraktNet.Responses.TraktPagedResponse{`0})">
            <summary>
            Compares this instance with another <see cref="T:TraktNet.Responses.TraktPagedResponse`1" /> instance.
            </summary>
            <param name="other">Another <see cref="T:TraktNet.Responses.TraktPagedResponse`1" /> instance, which will be compared with this instance.</param>
            <returns>True, of both instances are equal, otherwise false.</returns>
        </member>
        <member name="M:TraktNet.Responses.TraktPagedResponse`1.op_Explicit(TraktNet.Responses.TraktPagedResponse{`0})~System.Collections.Generic.List{`0}">
            <summary>Enables implicit conversion to <see cref="T:System.Collections.Generic.List`1" /> for this type.</summary>
            <param name="response">The <see cref="T:TraktNet.Responses.TraktPagedResponse`1" /> instance, which will be converted to <see cref="T:System.Collections.Generic.List`1" />.</param>
        </member>
        <member name="M:TraktNet.Responses.TraktPagedResponse`1.op_Implicit(System.Collections.Generic.List{`0})~TraktNet.Responses.TraktPagedResponse{`0}">
            <summary>Enables implicit conversion to <see cref="T:TraktNet.Responses.TraktPagedResponse`1" /> for this type.</summary>
            <param name="value">The <see cref="T:System.Collections.Generic.List`1" /> instance, which will be converted to <see cref="T:TraktNet.Responses.TraktPagedResponse`1" />.</param>
        </member>
        <member name="M:TraktNet.Responses.TraktPagedResponse`1.op_Implicit(TraktNet.Responses.TraktPagedResponse{`0})~System.Boolean">
            <summary>Enables implicit conversion to bool for this type.</summary>
            <param name="response">The <see cref="T:TraktNet.Responses.TraktPagedResponse`1" /> instance, which will be converted to bool.</param>
        </member>
        <member name="T:TraktNet.Responses.TraktResponse`1">
            <summary>A Trakt response with content of type <typeparamref name="TResponseContentType" />.</summary>
            <typeparam name="TResponseContentType">The content type.</typeparam>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.HasValue">
            <summary>Gets, whether this response has a content value set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.Value">
            <summary>Gets the set content value of this response.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.SortBy">
            <summary>Gets the value of the set "sort-by" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.SortHow">
            <summary>Gets the value of the set "sort-how" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.AppliedSortBy">
            <summary>Gets the value of the set "applied-sort-by" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.AppliedSortHow">
            <summary>Gets the value of the set "applied-sort-how" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.StartDate">
            <summary>Gets the value of the set "start-date" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.EndDate">
            <summary>Gets the value of the set "end-date" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.TrendingUserCount">
            <summary>Gets the value of the set "trending-user-count" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.Page">
            <summary>Gets the value of the set "page" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.Limit">
            <summary>Gets the value of the set "limit" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.IsPrivateUser">
            <summary>Gets the value of the set "is-private-user" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.ItemId">
            <summary>Gets the value of the set "item-id" response header. Might not be set.</summary>
        </member>
        <member name="P:TraktNet.Responses.TraktResponse`1.ItemType">
            <summary>Gets the value of the set "item-type" response header. Might not be set.</summary>
        </member>
        <member name="M:TraktNet.Responses.TraktResponse`1.Equals(TraktNet.Responses.TraktResponse{`0})">
            <summary>
            Compares this instance with another <see cref="T:TraktNet.Responses.TraktResponse`1" /> instance.
            </summary>
            <param name="other">Another <see cref="T:TraktNet.Responses.TraktResponse`1" /> instance, which will be compared with this instance.</param>
            <returns>True, of both instances are equal, otherwise false.</returns>
        </member>
        <member name="M:TraktNet.Responses.TraktResponse`1.op_Implicit(TraktNet.Responses.TraktResponse{`0})~`0">
            <summary>Enables implicit conversion to <typeparamref name="TResponseContentType" /> for this type.</summary>
            <param name="response">The <see cref="T:TraktNet.Responses.TraktResponse`1" /> instance, which will be converted to <typeparamref name="TResponseContentType" />.</param>
        </member>
        <member name="M:TraktNet.Responses.TraktResponse`1.op_Implicit(`0)~TraktNet.Responses.TraktResponse{`0}">
            <summary>Enables implicit conversion to <see cref="T:TraktNet.Responses.TraktResponse`1" /> for this type.</summary>
            <param name="value">The <typeparamref name="TResponseContentType" /> instance, which will be converted to <see cref="T:TraktNet.Responses.TraktResponse`1" />.</param>
        </member>
        <member name="M:TraktNet.Responses.TraktResponse`1.op_Implicit(TraktNet.Responses.TraktResponse{`0})~System.Boolean">
            <summary>Enables implicit conversion to bool for this type.</summary>
            <param name="response">The <see cref="T:TraktNet.Responses.TraktResponse`1" /> instance, which will be converted to bool.</param>
        </member>
        <member name="T:TraktNet.Services.TraktLanguageService">
            <summary>
            Provides helper methods for converting two letter language codes into language names
            and converting two letter country codes into country names.
            </summary>
        </member>
        <member name="M:TraktNet.Services.TraktLanguageService.GetLanguage(System.String)">
            <summary>
            Tries to look up the language name for the given language code.
            </summary>
            <param name="languageCode">The two letter language code, for which the language name should be looked up.</param>
            <returns>The language name for the given language code or an empty string, if not found.</returns>
        </member>
        <member name="M:TraktNet.Services.TraktLanguageService.GetAvailableTranslationLanguages(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Tries to look up languages names for the given language codes.
            </summary>
            <param name="availableTranslationLanguageCodes">A list of two letter language codes, for which the language names should be looked up.</param>
            <returns>A list containing the found languages names. If the given language codes list is null or empty, an empty list will be returned.</returns>
        </member>
        <member name="M:TraktNet.Services.TraktLanguageService.GetCountry(System.String)">
            <summary>
            Tries to look up the country name for the given country code.
            </summary>
            <param name="countryCode">The two letter country code, for which the country name should be looked up.</param>
            <returns>The country name for the given country code or an empty string, if not found.</returns>
        </member>
        <member name="T:TraktNet.Services.TraktSerializationService">
            <summary>Provides helper methods for serializing and deserializing Trakt objects.</summary>
        </member>
        <member name="M:TraktNet.Services.TraktSerializationService.SerializeAsync(TraktNet.Objects.Authentication.ITraktAuthorization,System.Threading.CancellationToken)">
            <summary>Serializes a <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance to a JSON string.</summary>
            <param name="authorization">The <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance, which will be serialized.</param>
            <param name="cancellationToken">
            Propagates notification that the serialization should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>Returns a JSON string of the given <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</returns>
        </member>
        <member name="M:TraktNet.Services.TraktSerializationService.SerializeAsync``1(``0,System.Threading.CancellationToken)">
            <summary>Serializes a <typeparamref name="TObjectType"/> instance to a JSON string.</summary>
            <typeparam name="TObjectType">The type of the object, which will be serialized to a JSON string.</typeparam>
            <param name="obj">The object instance, which will be serialized.</param>
            <param name="cancellationToken">
            Propagates notification that the serialization should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>Returns a JSON string of the given object instance.</returns>
        </member>
        <member name="M:TraktNet.Services.TraktSerializationService.DeserializeAsync(System.String,System.Threading.CancellationToken)">
            <summary>Deserializes a JSON string to a <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</summary>
            <param name="authorizationJson">The JSON string, which will be deserialized to a <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance.</param>
            <param name="cancellationToken">
            Propagates notification that the deserialization should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A deserialized <see cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" /> instance from a JSON string.</returns>
        </member>
        <member name="M:TraktNet.Services.TraktSerializationService.DeserializeAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>Deserializes a JSON string to a <typeparamref name="TObjectType"/> instance.</summary>
            <typeparam name="TObjectType">The type of the object, which will be deserialized from a JSON string.</typeparam>
            <param name="json">The JSON string, which will be deserialized to a object instance.</param>
            <param name="cancellationToken">
            Propagates notification that the deserialization should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A deserialized object instance from a JSON string.</returns>
        </member>
        <member name="M:TraktNet.Services.TraktSerializationService.SerializeCollectionAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>Serializes a collection of <typeparamref name="TObjectType"/> instances to a JSON string.</summary>
            <typeparam name="TObjectType">The type of the objects, which will be serialized to a JSON string.</typeparam>
            <param name="objects">The objects, which will be serialized.</param>
            <param name="cancellationToken">
            Propagates notification that the serialization should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>Returns a JSON string of the given objects collection.</returns>
        </member>
        <member name="M:TraktNet.Services.TraktSerializationService.DeserializeCollectionAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>Deserializes a JSON string to a collection of <typeparamref name="TObjectType"/> instances.</summary>
            <typeparam name="TObjectType">The type of the objects, which will be deserialized from a JSON string.</typeparam>
            <param name="json">The JSON string, which will be deserialized to a object collection.</param>
            <param name="cancellationToken">
            Propagates notification that the deserialization should be canceled.<para/>
            If provided, the exception <see cref="T:System.OperationCanceledException" /> should be catched.
            </param>
            <returns>A deserialized object collection from a JSON string.</returns>
        </member>
        <member name="T:TraktNet.TraktClient">
            <summary>
            Provides access to all functionality of this library.
            <para>Provides the only access to all of the library's modules.</para>
            </summary>
        </member>
        <member name="M:TraktNet.TraktClient.#ctor(System.String,TraktNet.Requests.Handler.IHttpClientProvider)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.TraktClient" /> class.</summary>
            <param name="clientId">The Trakt Client Id. See <seealso cref="P:TraktNet.TraktClient.ClientId" />.</param>
            <param name="httpClientProvider">
            A custom <see cref="T:System.Net.Http.HttpClient" /> provider, which can be used to provide a <see cref="T:System.Net.Http.HttpClient" /> with a custom <see cref="T:System.Net.Http.HttpMessageHandler" />.
            If not set, a default implementation (<see cref="T:TraktNet.Requests.Handler.HttpClientProvider" />) will be used.
            </param>
        </member>
        <member name="M:TraktNet.TraktClient.#ctor(System.String,System.String,TraktNet.Requests.Handler.IHttpClientProvider)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.TraktClient" /> class.</summary>
            <param name="clientId">The Trakt Client Id. See <seealso cref="P:TraktNet.TraktClient.ClientId" />.</param>
            <param name="clientSecret">The Trakt Client Secret. See <seealso cref="P:TraktNet.TraktClient.ClientSecret" />.</param>
            <param name="httpClientProvider"></param>
        </member>
        <member name="P:TraktNet.TraktClient.ClientId">
            <summary>Gets or sets the Trakt Client Id. See also <seealso cref="P:TraktNet.TraktClient.ClientSecret" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.ClientSecret">
            <summary>Gets or sets the Trakt Client Secret. See also <seealso cref="P:TraktNet.TraktClient.ClientId" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Authorization">
            <summary>Gets or sets the Trakt Authorization information. See also <seealso cref="T:TraktNet.Objects.Authentication.ITraktAuthorization" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.IsValidForUseWithoutAuthorization">
            <summary>
            Returns, whether the client is valid to use for API requests, that do not require OAuth authorization.
            <para>To enable this behavior, you must set a valid Trakt Client Id.</para>
            See <seealso cref="P:TraktNet.TraktClient.ClientId" />.
            </summary>
        </member>
        <member name="P:TraktNet.TraktClient.IsValidForUseWithAuthorization">
            <summary>
            Returns, whether the client is valid to use for API requests, that require OAuth authorization.
            <para>To enable this behavior, you must set a valid Trakt Client Id and a valid Trakt Access Token.</para>
            See <seealso cref="P:TraktNet.TraktClient.ClientId" />.
            See <seealso cref="P:TraktNet.Modules.TraktAuthenticationModule.IsAuthorized" />.
            </summary>
        </member>
        <member name="P:TraktNet.TraktClient.IsValidForAuthenticationProcess">
            <summary>
            Returns, whether the client is valid to use for OAuth authentication.
            <para>To enable this behavior, you must set a valid Trakt Client Id and a valid Trakt Client Secret.</para>
            See <seealso cref="P:TraktNet.TraktClient.ClientId" />.
            See <seealso cref="P:TraktNet.TraktClient.ClientSecret" />.
            </summary>
        </member>
        <member name="P:TraktNet.TraktClient.Configuration">
            <summary>
            Provides access to the configuration settings for the <see cref="T:TraktNet.TraktClient" />.
            See <seealso cref="T:TraktNet.Core.TraktConfiguration" />.
            </summary>
        </member>
        <member name="P:TraktNet.TraktClient.Authentication">
            <summary>Provides access to the authentication module. See <seealso cref="T:TraktNet.Modules.TraktAuthenticationModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Calendar">
            <summary>Provides access to the calendar module. See <seealso cref="T:TraktNet.Modules.TraktCalendarModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Certifications">
            <summary>Provides access to the certifications module. See <seealso cref="T:TraktNet.Modules.TraktCertificationsModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Checkins">
            <summary>Provides access to the checkins module. See <seealso cref="T:TraktNet.Modules.TraktCheckinsModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Comments">
            <summary>Provides access to the commends module. See <seealso cref="T:TraktNet.Modules.TraktCommentsModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Countries">
            <summary>Provides access to the countries module. See <seealso cref="T:TraktNet.Modules.TraktCountriesModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Episodes">
            <summary>Provides access to the episodes module. See <seealso cref="T:TraktNet.Modules.TraktEpisodesModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Genres">
            <summary>Provides access to the genres module. See <seealso cref="T:TraktNet.Modules.TraktGenresModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Languages">
            <summary>Provides access to the languages module. See <seealso cref="T:TraktNet.Modules.TraktLanguagesModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Lists">
            <summary>Provides access to the lists module. See <seealso cref="T:TraktNet.Modules.TraktListsModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Movies">
            <summary>Provides access to the movies module. See <seealso cref="T:TraktNet.Modules.TraktMoviesModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Networks">
            <summary>Provides access to the networks module. See <seealso cref="T:TraktNet.Modules.TraktNetworksModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.People">
            <summary>Provides access to the people module. See <seealso cref="T:TraktNet.Modules.TraktPeopleModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Recommendations">
            <summary>Provides access to the recommendations module. See <seealso cref="T:TraktNet.Modules.TraktRecommendationsModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Scrobble">
            <summary>Provides access to the scrobble module. See <seealso cref="T:TraktNet.Modules.TraktScrobbleModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Search">
            <summary>Provides access to the search module. See <seealso cref="T:TraktNet.Modules.TraktSearchModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Seasons">
            <summary>Provides access to the seasons module. See <seealso cref="T:TraktNet.Modules.TraktSeasonsModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Shows">
            <summary>Provides access to the shows module. See <seealso cref="T:TraktNet.Modules.TraktShowsModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Sync">
            <summary>Provides access to the sync module. See <seealso cref="T:TraktNet.Modules.TraktSyncModule" />.</summary>
        </member>
        <member name="P:TraktNet.TraktClient.Users">
            <summary>Provides access to the users module. See <seealso cref="T:TraktNet.Modules.TraktUsersModule" />.</summary>
        </member>
        <member name="T:TraktNet.Utils.Pair`2">
            <summary>A small container containing two values of different types.</summary>
            <typeparam name="T">The type of the first element in this pair.</typeparam>
            <typeparam name="U">The type of the second element in this pair.</typeparam>
        </member>
        <member name="M:TraktNet.Utils.Pair`2.#ctor(`0,`1)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Utils.Pair`2" /> struct.</summary>
            <param name="first">The pair's first value.</param>
            <param name="second">The pair's second value.</param>
        </member>
        <member name="P:TraktNet.Utils.Pair`2.First">
            <summary>Gets or sets the first value of the pair.</summary>
        </member>
        <member name="P:TraktNet.Utils.Pair`2.Second">
            <summary>Gets or sets the second value of the pair.</summary>
        </member>
        <member name="T:TraktNet.Utils.Range`1">
            <summary>
            Represents a range between two values.
            </summary>
            <typeparam name="T">The actual underlying data type.</typeparam>
        </member>
        <member name="M:TraktNet.Utils.Range`1.#ctor(`0,`0)">
            <summary>Initializes a new instance of the <see cref="T:TraktNet.Utils.Range`1" /> struct.</summary>
            <param name="begin">The range's begin value.</param>
            <param name="end">The range's end value.</param>
        </member>
        <member name="P:TraktNet.Utils.Range`1.Begin">
            <summary>Returns the begin of the range.</summary>
        </member>
        <member name="P:TraktNet.Utils.Range`1.End">
            <summary>Returns the end of the range.</summary>
        </member>
    </members>
</doc>
